

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Apr 16 17:46:43 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    48   000000                     
    49                           ; Generated 17/10/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F452 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     
    84                           	psect	idataCOMRAM
    85   001B40                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for _GateCloseTimer
    89   001B40  0014               	dw	20
    90                           
    91                           ;initializer for keypad_line_scan@keypadScan
    92   001B42  01                 	db	1
    93   000000                     _GIE	set	32663
    94   000000                     _TMR0IE	set	32661
    95   000000                     _PORTE	set	3972
    96   000000                     _PORTD	set	3971
    97   000000                     _PORTC	set	3970
    98   000000                     _PORTB	set	3969
    99   000000                     _PORTA	set	3968
   100   000000                     _TRISA	set	3986
   101   000000                     _ADCON1	set	4033
   102   000000                     _T0CON	set	4053
   103   000000                     _TMR0L	set	4054
   104   000000                     _TMR0H	set	4055
   105   000000                     _TMR0IF	set	32658
   106   000000                     _TRISE	set	3990
   107   000000                     _TRISD	set	3989
   108   000000                     _TRISC	set	3988
   109   000000                     _TRISB	set	3987
   110                           
   111                           	psect	smallconst
   112   000600                     __psmallconst:
   113                           	callstack 0
   114   000600  00                 	db	0
   115   000601                     STR_8:
   116   000601  4E                 	db	78	;'N'
   117   000602  4F                 	db	79	;'O'
   118   000603  20                 	db	32
   119   000604  45                 	db	69	;'E'
   120   000605  52                 	db	82	;'R'
   121   000606  3A                 	db	58	;':'
   122   000607  20                 	db	32
   123   000608  44                 	db	68	;'D'
   124   000609  45                 	db	69	;'E'
   125   00060A  41                 	db	65	;'A'
   126   00060B  43                 	db	67	;'C'
   127   00060C  54                 	db	84	;'T'
   128   00060D  49                 	db	73	;'I'
   129   00060E  56                 	db	86	;'V'
   130   00060F  45                 	db	69	;'E'
   131   000610  00                 	db	0
   132   000611                     STR_4:
   133   000611  39                 	db	57	;'9'
   134   000612  39                 	db	57	;'9'
   135   000613  3A                 	db	58	;':'
   136   000614  47                 	db	71	;'G'
   137   000615  41                 	db	65	;'A'
   138   000616  54                 	db	84	;'T'
   139   000617  45                 	db	69	;'E'
   140   000618  20                 	db	32
   141   000619  4F                 	db	79	;'O'
   142   00061A  50                 	db	80	;'P'
   143   00061B  45                 	db	69	;'E'
   144   00061C  4E                 	db	78	;'N'
   145   00061D  00                 	db	0
   146   00061E                     STR_1:
   147   00061E  50                 	db	80	;'P'
   148   00061F  61                 	db	97	;'a'
   149   000620  73                 	db	115	;'s'
   150   000621  73                 	db	115	;'s'
   151   000622  20                 	db	32
   152   000623  63                 	db	99	;'c'
   153   000624  6F                 	db	111	;'o'
   154   000625  64                 	db	100	;'d'
   155   000626  65                 	db	101	;'e'
   156   000627  3A                 	db	58	;':'
   157   000628  20                 	db	32
   158   000629  00                 	db	0
   159   00062A                     STR_6:
   160   00062A  47                 	db	71	;'G'
   161   00062B  41                 	db	65	;'A'
   162   00062C  54                 	db	84	;'T'
   163   00062D  45                 	db	69	;'E'
   164   00062E  20                 	db	32
   165   00062F  4F                 	db	79	;'O'
   166   000630  50                 	db	80	;'P'
   167   000631  45                 	db	69	;'E'
   168   000632  4E                 	db	78	;'N'
   169   000633  45                 	db	69	;'E'
   170   000634  44                 	db	68	;'D'
   171   000635  00                 	db	0
   172   000636                     STR_7:
   173   000636  47                 	db	71	;'G'
   174   000637  41                 	db	65	;'A'
   175   000638  54                 	db	84	;'T'
   176   000639  45                 	db	69	;'E'
   177   00063A  20                 	db	32
   178   00063B  43                 	db	67	;'C'
   179   00063C  4C                 	db	76	;'L'
   180   00063D  4F                 	db	79	;'O'
   181   00063E  53                 	db	83	;'S'
   182   00063F  45                 	db	69	;'E'
   183   000640  44                 	db	68	;'D'
   184   000641  00                 	db	0
   185   000642                     STR_9:
   186   000642  44                 	db	68	;'D'
   187   000643  65                 	db	101	;'e'
   188   000644  61                 	db	97	;'a'
   189   000645  63                 	db	99	;'c'
   190   000646  74                 	db	116	;'t'
   191   000647  69                 	db	105	;'i'
   192   000648  76                 	db	118	;'v'
   193   000649  61                 	db	97	;'a'
   194   00064A  74                 	db	116	;'t'
   195   00064B  65                 	db	101	;'e'
   196   00064C  64                 	db	100	;'d'
   197   00064D  00                 	db	0
   198   00064E                     STR_5:
   199   00064E  41                 	db	65	;'A'
   200   00064F  63                 	db	99	;'c'
   201   000650  74                 	db	116	;'t'
   202   000651  69                 	db	105	;'i'
   203   000652  76                 	db	118	;'v'
   204   000653  61                 	db	97	;'a'
   205   000654  74                 	db	116	;'t'
   206   000655  65                 	db	101	;'e'
   207   000656  64                 	db	100	;'d'
   208   000657  00                 	db	0
   209   000658                     STR_3:
   210   000658  50                 	db	80	;'P'
   211   000659  41                 	db	65	;'A'
   212   00065A  53                 	db	83	;'S'
   213   00065B  53                 	db	83	;'S'
   214   00065C  20                 	db	32
   215   00065D  45                 	db	69	;'E'
   216   00065E  52                 	db	82	;'R'
   217   00065F  52                 	db	82	;'R'
   218   000660  00                 	db	0
   219   000661                     STR_2:
   220   000661  31                 	db	49	;'1'
   221   000662  32                 	db	50	;'2'
   222   000663  33                 	db	51	;'3'
   223   000664  34                 	db	52	;'4'
   224   000665  00                 	db	0
   225   000666  00                 	db	0	; dummy byte at the end
   226   000000                     
   227                           ; #config settings
   228                           
   229                           	psect	cinit
   230   001996                     __pcinit:
   231                           	callstack 0
   232   001996                     start_initialization:
   233                           	callstack 0
   234   001996                     __initialization:
   235                           	callstack 0
   236                           
   237                           ; Initialize objects allocated to COMRAM (3 bytes)
   238                           ; load TBLPTR registers with __pidataCOMRAM
   239   001996  0E40               	movlw	low __pidataCOMRAM
   240   001998  6EF6               	movwf	tblptrl,c
   241   00199A  0E1B               	movlw	high __pidataCOMRAM
   242   00199C  6EF7               	movwf	tblptrh,c
   243   00199E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   244   0019A0  6EF8               	movwf	tblptru,c
   245   0019A2  0009               	tblrd		*+	;fetch initializer
   246   0019A4  CFF5 F027          	movff	tablat,__pdataCOMRAM
   247   0019A8  0009               	tblrd		*+	;fetch initializer
   248   0019AA  CFF5 F028          	movff	tablat,__pdataCOMRAM+1
   249   0019AE  0009               	tblrd		*+	;fetch initializer
   250   0019B0  CFF5 F029          	movff	tablat,__pdataCOMRAM+2
   251                           
   252                           ; Clear objects allocated to COMRAM (11 bytes)
   253   0019B4  EE00  F01C         	lfsr	0,__pbssCOMRAM
   254   0019B8  0E0B               	movlw	11
   255   0019BA                     clear_0:
   256   0019BA  6AEE               	clrf	postinc0,c
   257   0019BC  06E8               	decf	wreg,f,c
   258   0019BE  E1FD               	bnz	clear_0
   259   0019C0                     end_of_initialization:
   260                           	callstack 0
   261   0019C0                     __end_of__initialization:
   262                           	callstack 0
   263   0019C0  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   264   0019C2  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   265   0019C4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   266   0019C6  6EF8               	movwf	tblptru,c
   267   0019C8  0100               	movlb	0
   268   0019CA  EF34  F003         	goto	_main	;jump to C main() function
   269                           
   270                           	psect	bssCOMRAM
   271   00001C                     __pbssCOMRAM:
   272                           	callstack 0
   273   00001C                     	ds	5
   274   000021                     _emergencyTimer:
   275                           	callstack 0
   276   000021                     	ds	2
   277   000023                     _activatedStateTimer:
   278                           	callstack 0
   279   000023                     	ds	2
   280   000025                     _sysButtonTimer:
   281                           	callstack 0
   282   000025                     	ds	2
   283                           
   284                           	psect	dataCOMRAM
   285   000027                     __pdataCOMRAM:
   286                           	callstack 0
   287   000027                     _GateCloseTimer:
   288                           	callstack 0
   289   000027                     	ds	2
   290   000029                     keypad_line_scan@keypadScan:
   291                           	callstack 0
   292   000029                     	ds	1
   293                           
   294                           	psect	cstackCOMRAM
   295   000001                     __pcstackCOMRAM:
   296                           	callstack 0
   297   000001                     ?_strcmp:
   298                           	callstack 0
   299   000001                     DIO_SetPinDirection@pinNo:
   300                           	callstack 0
   301   000001                     DIO_SetPinValue@pinNo:
   302                           	callstack 0
   303   000001                     DIO_GetPinValue@pinNo:
   304                           	callstack 0
   305   000001                     DIO_SetPortValue@value:
   306                           	callstack 0
   307   000001                     DIO_SetUpperHalfPortValue@value:
   308                           	callstack 0
   309   000001                     DIO_TogglePin@pinNo:
   310                           	callstack 0
   311   000001                     keypad_value@portValue:
   312                           	callstack 0
   313   000001                     strcmp@l:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x0
   317   000001                     	ds	1
   318   000002                     ??_keypad_read:
   319   000002                     ??_DIO_TogglePin:
   320   000002                     ??_DIO_GetPinValue:
   321   000002                     ??_DIO_SetPortValue:
   322   000002                     ??_DIO_SetUpperHalfPortValue:
   323   000002                     DIO_SetPinDirection@direction:
   324                           	callstack 0
   325   000002                     DIO_SetPinValue@value:
   326                           	callstack 0
   327   000002                     strcmp@r:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x1
   331   000002                     	ds	1
   332   000003                     ??_strcmp:
   333   000003                     ??_DIO_SetPinDirection:
   334   000003                     ??_DIO_SetPinValue:
   335   000003                     keypad_read@keyValue:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x2
   339   000003                     	ds	1
   340   000004                     DIO_GetPinValue@portName:
   341                           	callstack 0
   342   000004                     DIO_SetPortValue@portName:
   343                           	callstack 0
   344   000004                     DIO_SetUpperHalfPortValue@portName:
   345                           	callstack 0
   346   000004                     DIO_TogglePin@portName:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x3
   350   000004                     	ds	1
   351   000005                     DIO_SetPinDirection@portName:
   352                           	callstack 0
   353   000005                     DIO_SetPinValue@portName:
   354                           	callstack 0
   355   000005                     DIO_GetPinValue@flush:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x4
   359   000005                     	ds	1
   360   000006                     ??_LCD_displayCharacter:
   361   000006                     ??_LCD_sendCommand:
   362   000006                     led_init@pinNo:
   363                           	callstack 0
   364   000006                     led_on@pinNo:
   365                           	callstack 0
   366   000006                     led_off@pinNo:
   367                           	callstack 0
   368   000006                     buzzer_init@pinNo:
   369                           	callstack 0
   370   000006                     buzzer_on@pinNo:
   371                           	callstack 0
   372   000006                     buzzer_off@pinNo:
   373                           	callstack 0
   374   000006                     button_init@pinNo:
   375                           	callstack 0
   376   000006                     button_getState@pinNo:
   377                           	callstack 0
   378   000006                     pir_init@pinNo:
   379                           	callstack 0
   380   000006                     pir_getState@pinNo:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x5
   384   000006                     	ds	1
   385   000007                     LCD_sendCommand@command:
   386                           	callstack 0
   387   000007                     LCD_displayCharacter@data:
   388                           	callstack 0
   389   000007                     led_init@port:
   390                           	callstack 0
   391   000007                     led_on@port:
   392                           	callstack 0
   393   000007                     led_off@port:
   394                           	callstack 0
   395   000007                     buzzer_init@port:
   396                           	callstack 0
   397   000007                     buzzer_on@port:
   398                           	callstack 0
   399   000007                     buzzer_off@port:
   400                           	callstack 0
   401   000007                     button_init@port:
   402                           	callstack 0
   403   000007                     button_getState@port:
   404                           	callstack 0
   405   000007                     pir_init@port:
   406                           	callstack 0
   407   000007                     pir_getState@port:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0x6
   411   000007                     	ds	1
   412   000008                     LCD_displayString@Str:
   413                           	callstack 0
   414   000008                     LCD_goToRowColumn@col:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x7
   418   000008                     	ds	1
   419   000009                     ??_LCD_displayString:
   420   000009                     LCD_goToRowColumn@row:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x8
   424   000009                     	ds	1
   425   00000A                     LCD_displayString@i:
   426                           	callstack 0
   427   00000A                     LCD_goToRowColumn@Address:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x9
   431   00000A                     	ds	1
   432   00000B                     LCD_displayStringRowColumn@col:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0xA
   436   00000B                     	ds	1
   437   00000C                     LCD_displayStringRowColumn@Str:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0xB
   441   00000C                     	ds	1
   442   00000D                     LCD_displayStringRowColumn@row:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0xC
   446   00000D                     	ds	1
   447   00000E                     ??_main:
   448                           
   449                           ; 1 bytes @ 0xD
   450   00000E                     	ds	2
   451   000010                     main@passCode:
   452                           	callstack 0
   453                           
   454                           ; 5 bytes @ 0xF
   455   000010                     	ds	5
   456   000015                     main@buzzerSet:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x14
   460   000015                     	ds	1
   461   000016                     main@last_reading:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x15
   465   000016                     	ds	1
   466   000017                     main@emergencyState:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x16
   470   000017                     	ds	1
   471   000018                     main@mode:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x17
   475   000018                     	ds	1
   476   000019                     main@inputCounter:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x18
   480   000019                     	ds	1
   481   00001A                     main@keypad_reading:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x19
   485   00001A                     	ds	1
   486   00001B                     main@passCodeReq:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x1A
   490   00001B                     	ds	1
   491                           
   492 ;;
   493 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   494 ;;
   495 ;; *************** function _main *****************
   496 ;; Defined at:
   497 ;;		line 55 in file "main.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;  passCode        5   15[COMRAM] unsigned char [5]
   502 ;;  passCodeReq     1   26[COMRAM] unsigned char 
   503 ;;  keypad_readi    1   25[COMRAM] unsigned char 
   504 ;;  inputCounter    1   24[COMRAM] unsigned char 
   505 ;;  mode            1   23[COMRAM] enum E2432
   506 ;;  emergencySta    1   22[COMRAM] unsigned char 
   507 ;;  last_reading    1   21[COMRAM] unsigned char 
   508 ;;  buzzerSet       1   20[COMRAM] unsigned char 
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   518 ;;      Params:         0       0       0       0       0       0       0
   519 ;;      Locals:        12       0       0       0       0       0       0
   520 ;;      Temps:          2       0       0       0       0       0       0
   521 ;;      Totals:        14       0       0       0       0       0       0
   522 ;;Total ram usage:       14 bytes
   523 ;; Hardware stack levels required when called: 5
   524 ;; This function calls:
   525 ;;		_DIO_TogglePin
   526 ;;		_LCD_clearScreen
   527 ;;		_LCD_displayCharacter
   528 ;;		_LCD_displayStringRowColumn
   529 ;;		_LCD_goToRowColumn
   530 ;;		_LCD_init
   531 ;;		_Timer0_init
   532 ;;		_button_getState
   533 ;;		_button_init
   534 ;;		_buzzer_init
   535 ;;		_buzzer_off
   536 ;;		_buzzer_on
   537 ;;		_keypad_init
   538 ;;		_keypad_read
   539 ;;		_led_init
   540 ;;		_led_off
   541 ;;		_led_on
   542 ;;		_motor_init
   543 ;;		_motor_off
   544 ;;		_motor_on
   545 ;;		_pir_getState
   546 ;;		_pir_init
   547 ;;		_strcmp
   548 ;; This function is called by:
   549 ;;		Startup code after reset
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text0
   554   000668                     __ptext0:
   555                           	callstack 0
   556   000668                     _main:
   557                           	callstack 26
   558   000668  FFFF               	dw	65535	; assembler added errata NOP
   559                           
   560                           ;main.c: 57:     uint8_t inputCounter = 0;
   561   00066A  0E00               	movlw	0
   562   00066C  6E19               	movwf	main@inputCounter^0,c
   563                           
   564                           ;main.c: 58:     uint8_t emergencyState = 0;
   565   00066E  0E00               	movlw	0
   566   000670  6E17               	movwf	main@emergencyState^0,c
   567                           
   568                           ;main.c: 59:     uint8_t buzzerSet = 0;
   569   000672  0E00               	movlw	0
   570   000674  6E15               	movwf	main@buzzerSet^0,c
   571   000676                     
   572                           ;main.c: 60:     char passCode[5] = {0};
   573   000676  EE20  F010         	lfsr	2,main@passCode
   574   00067A  0E04               	movlw	4
   575   00067C                     u1241:
   576   00067C  6ADE               	clrf	postinc2,c
   577   00067E  06E8               	decf	wreg,f,c
   578   000680  E2FD               	bc	u1241
   579   000682                     
   580                           ;main.c: 62:     uint8_t passCodeReq = 0;
   581   000682  0E00               	movlw	0
   582   000684  6E1B               	movwf	main@passCodeReq^0,c
   583   000686                     
   584                           ;main.c: 63:     Modes_t mode = ACTIVATED;
   585   000686  0E00               	movlw	0
   586   000688  6E18               	movwf	main@mode^0,c
   587   00068A                     
   588                           ;main.c: 65:     ADCON1 = 0x07;
   589   00068A  0E07               	movlw	7
   590   00068C  6EC1               	movwf	193,c	;volatile
   591   00068E                     
   592                           ;main.c: 66:     Timer0_init();
   593   00068E  EC7D  F00D         	call	_Timer0_init	;wreg free
   594   000692                     
   595                           ;main.c: 69:     LCD_init();
   596   000692  ECF2  F00A         	call	_LCD_init	;wreg free
   597   000696                     
   598                           ;main.c: 70:     keypad_init();
   599   000696  EC2F  F00C         	call	_keypad_init	;wreg free
   600   00069A                     
   601                           ;main.c: 71:     motor_init();
   602   00069A  ECBC  F00B         	call	_motor_init	;wreg free
   603   00069E                     
   604                           ;main.c: 72:     button_init(PORT_A,4);
   605   00069E  0E04               	movlw	4
   606   0006A0  6E06               	movwf	button_init@pinNo^0,c
   607   0006A2  0E00               	movlw	0
   608   0006A4  EC72  F00D         	call	_button_init
   609   0006A8                     
   610                           ;main.c: 73:     button_init(PORT_A,3);
   611   0006A8  0E03               	movlw	3
   612   0006AA  6E06               	movwf	button_init@pinNo^0,c
   613   0006AC  0E00               	movlw	0
   614   0006AE  EC72  F00D         	call	_button_init
   615   0006B2                     
   616                           ;main.c: 74:     button_init(PORT_A,5);
   617   0006B2  0E05               	movlw	5
   618   0006B4  6E06               	movwf	button_init@pinNo^0,c
   619   0006B6  0E00               	movlw	0
   620   0006B8  EC72  F00D         	call	_button_init
   621   0006BC                     
   622                           ;main.c: 75:     pir_init(PORT_A,2);
   623   0006BC  0E02               	movlw	2
   624   0006BE  6E06               	movwf	pir_init@pinNo^0,c
   625   0006C0  0E00               	movlw	0
   626   0006C2  EC25  F00D         	call	_pir_init
   627   0006C6                     
   628                           ;main.c: 76:     buzzer_init(PORT_A,0);
   629   0006C6  0E00               	movlw	0
   630   0006C8  6E06               	movwf	buzzer_init@pinNo^0,c
   631   0006CA  0E00               	movlw	0
   632   0006CC  EC67  F00D         	call	_buzzer_init
   633   0006D0                     
   634                           ;main.c: 77:     led_init(PORT_B,4);
   635   0006D0  0E04               	movlw	4
   636   0006D2  6E06               	movwf	led_init@pinNo^0,c
   637   0006D4  0E01               	movlw	1
   638   0006D6  EC46  F00D         	call	_led_init
   639   0006DA                     
   640                           ;main.c: 78:     led_init(PORT_B,5);
   641   0006DA  0E05               	movlw	5
   642   0006DC  6E06               	movwf	led_init@pinNo^0,c
   643   0006DE  0E01               	movlw	1
   644   0006E0  EC46  F00D         	call	_led_init
   645   0006E4                     
   646                           ;main.c: 79:     led_on(PORT_B,4);
   647   0006E4  0E04               	movlw	4
   648   0006E6  6E06               	movwf	led_on@pinNo^0,c
   649   0006E8  0E01               	movlw	1
   650   0006EA  EC30  F00D         	call	_led_on
   651   0006EE                     
   652                           ;main.c: 81:     uint8_t last_reading = 0;
   653   0006EE  0E00               	movlw	0
   654   0006F0  6E16               	movwf	main@last_reading^0,c
   655   0006F2                     l1997:
   656   0006F2  FFFF               	dw	65535	; assembler added errata NOP
   657                           
   658                           ;main.c: 83:         if(button_getState(PORT_A,3)== HIGH){
   659   0006F4  0E03               	movlw	3
   660   0006F6  6E06               	movwf	button_getState@pinNo^0,c
   661   0006F8  0E00               	movlw	0
   662   0006FA  EC91  F00D         	call	_button_getState
   663   0006FE  06E8               	decf	wreg,f,c
   664   000700  A4D8               	btfss	status,2,c
   665   000702  EF85  F003         	goto	u1251
   666   000706  EF88  F003         	goto	u1250
   667   00070A                     u1251:
   668   00070A  FFFF               	dw	65535	; assembler added errata NOP
   669   00070C  EFB9  F003         	goto	l2009
   670   000710                     u1250:
   671   000710  FFFF               	dw	65535	; assembler added errata NOP
   672   000712                     
   673                           ;main.c: 84:             sysButtonTimer = 0;
   674   000712  0E00               	movlw	0
   675   000714  6E26               	movwf	(_sysButtonTimer+1)^0,c
   676   000716  0E00               	movlw	0
   677   000718  6E25               	movwf	_sysButtonTimer^0,c
   678                           
   679                           ;main.c: 85:             while(button_getState(PORT_A,3)== HIGH){
   680   00071A  EFAA  F003         	goto	l2007
   681   00071E                     l2001:
   682   00071E  FFFF               	dw	65535	; assembler added errata NOP
   683                           
   684                           ;main.c: 86:                 if(sysButtonTimer >=3){
   685   000720  BE26               	btfsc	(_sysButtonTimer+1)^0,7,c
   686   000722  EF9C  F003         	goto	u1261
   687   000726  5026               	movf	(_sysButtonTimer+1)^0,w,c
   688   000728  E10A               	bnz	u1260
   689   00072A  0E03               	movlw	3
   690   00072C  5C25               	subwf	_sysButtonTimer^0,w,c
   691   00072E  A0D8               	btfss	status,0,c
   692   000730  EF9C  F003         	goto	u1261
   693   000734  EF9F  F003         	goto	u1260
   694   000738                     u1261:
   695   000738  FFFF               	dw	65535	; assembler added errata NOP
   696   00073A  EFAA  F003         	goto	l2007
   697   00073E                     u1260:
   698   00073E  FFFF               	dw	65535	; assembler added errata NOP
   699   000740                     
   700                           ;main.c: 87:                     passCodeReq = 1;
   701   000740  0E01               	movlw	1
   702   000742  6E1B               	movwf	main@passCodeReq^0,c
   703                           
   704                           ;main.c: 88:                     passCode[0] = '\0';
   705   000744  0E00               	movlw	0
   706   000746  6E10               	movwf	main@passCode^0,c
   707                           
   708                           ;main.c: 89:                     inputCounter = 0;
   709   000748  0E00               	movlw	0
   710   00074A  6E19               	movwf	main@inputCounter^0,c
   711   00074C                     
   712                           ;main.c: 90:                     LCD_clearScreen();
   713   00074C  EC9A  F00D         	call	_LCD_clearScreen	;wreg free
   714                           
   715                           ;main.c: 91:                     break;
   716   000750  EFB9  F003         	goto	l2009
   717   000754                     l2007:
   718   000754  FFFF               	dw	65535	; assembler added errata NOP
   719                           
   720                           ;main.c: 85:             while(button_getState(PORT_A,3)== HIGH){
   721   000756  0E03               	movlw	3
   722   000758  6E06               	movwf	button_getState@pinNo^0,c
   723   00075A  0E00               	movlw	0
   724   00075C  EC91  F00D         	call	_button_getState
   725   000760  06E8               	decf	wreg,f,c
   726   000762  B4D8               	btfsc	status,2,c
   727   000764  EFB6  F003         	goto	u1271
   728   000768  EFB9  F003         	goto	u1270
   729   00076C                     u1271:
   730   00076C  FFFF               	dw	65535	; assembler added errata NOP
   731   00076E  EF8F  F003         	goto	l2001
   732   000772                     u1270:
   733   000772                     l2009:
   734   000772  FFFF               	dw	65535	; assembler added errata NOP
   735                           
   736                           ;main.c: 96:          if(button_getState(PORT_A,5)== HIGH){
   737   000774  0E05               	movlw	5
   738   000776  6E06               	movwf	button_getState@pinNo^0,c
   739   000778  0E00               	movlw	0
   740   00077A  EC91  F00D         	call	_button_getState
   741   00077E  06E8               	decf	wreg,f,c
   742   000780  A4D8               	btfss	status,2,c
   743   000782  EFC5  F003         	goto	u1281
   744   000786  EFC8  F003         	goto	u1280
   745   00078A                     u1281:
   746   00078A  FFFF               	dw	65535	; assembler added errata NOP
   747   00078C  EFCF  F003         	goto	l90
   748   000790                     u1280:
   749   000790  FFFF               	dw	65535	; assembler added errata NOP
   750   000792                     
   751                           ;main.c: 97:              LCD_clearScreen();
   752   000792  EC9A  F00D         	call	_LCD_clearScreen	;wreg free
   753   000796                     
   754                           ;main.c: 98:              emergencyState = 1;
   755   000796  0E01               	movlw	1
   756   000798  6E17               	movwf	main@emergencyState^0,c
   757   00079A                     
   758                           ;main.c: 99:              passCodeReq=0;
   759   00079A  0E00               	movlw	0
   760   00079C  6E1B               	movwf	main@passCodeReq^0,c
   761   00079E                     l90:
   762   00079E  FFFF               	dw	65535	; assembler added errata NOP
   763                           
   764                           ;main.c: 102:          if(button_getState(PORT_A,4)== HIGH){
   765   0007A0  0E04               	movlw	4
   766   0007A2  6E06               	movwf	button_getState@pinNo^0,c
   767   0007A4  0E00               	movlw	0
   768   0007A6  EC91  F00D         	call	_button_getState
   769   0007AA  06E8               	decf	wreg,f,c
   770   0007AC  A4D8               	btfss	status,2,c
   771   0007AE  EFDB  F003         	goto	u1291
   772   0007B2  EFDE  F003         	goto	u1290
   773   0007B6                     u1291:
   774   0007B6  FFFF               	dw	65535	; assembler added errata NOP
   775   0007B8  EFE7  F003         	goto	l2021
   776   0007BC                     u1290:
   777   0007BC  FFFF               	dw	65535	; assembler added errata NOP
   778   0007BE                     
   779                           ;main.c: 103:                     passCodeReq = 1;
   780   0007BE  0E01               	movlw	1
   781   0007C0  6E1B               	movwf	main@passCodeReq^0,c
   782                           
   783                           ;main.c: 104:                     passCode[0] = '\0';
   784   0007C2  0E00               	movlw	0
   785   0007C4  6E10               	movwf	main@passCode^0,c
   786                           
   787                           ;main.c: 105:                     inputCounter = 0;
   788   0007C6  0E00               	movlw	0
   789   0007C8  6E19               	movwf	main@inputCounter^0,c
   790   0007CA                     
   791                           ;main.c: 106:                     LCD_clearScreen();
   792   0007CA  EC9A  F00D         	call	_LCD_clearScreen	;wreg free
   793   0007CE                     l2021:
   794   0007CE  FFFF               	dw	65535	; assembler added errata NOP
   795                           
   796                           ;main.c: 109:         if(passCodeReq == 1){
   797   0007D0  041B               	decf	main@passCodeReq^0,w,c
   798   0007D2  A4D8               	btfss	status,2,c
   799   0007D4  EFEE  F003         	goto	u1301
   800   0007D8  EFF1  F003         	goto	u1300
   801   0007DC                     u1301:
   802   0007DC  FFFF               	dw	65535	; assembler added errata NOP
   803   0007DE  EFA2  F004         	goto	l2075
   804   0007E2                     u1300:
   805   0007E2  FFFF               	dw	65535	; assembler added errata NOP
   806   0007E4                     
   807                           ;main.c: 110:             LCD_displayStringRowColumn(0,0,"Pass code: ");
   808   0007E4  0E00               	movlw	0
   809   0007E6  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
   810   0007E8  0E1E               	movlw	low STR_1
   811   0007EA  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
   812   0007EC  0E00               	movlw	0
   813   0007EE  EC18  F00D         	call	_LCD_displayStringRowColumn
   814   0007F2                     
   815                           ;main.c: 111:             if(inputCounter<4){
   816   0007F2  0E04               	movlw	4
   817   0007F4  6019               	cpfslt	main@inputCounter^0,c
   818   0007F6  EFFF  F003         	goto	u1311
   819   0007FA  EF02  F004         	goto	u1310
   820   0007FE                     u1311:
   821   0007FE  FFFF               	dw	65535	; assembler added errata NOP
   822   000800  EF45  F004         	goto	l2047
   823   000804                     u1310:
   824   000804  FFFF               	dw	65535	; assembler added errata NOP
   825   000806                     
   826                           ;main.c: 112:                 keypad_reading=keypad_read();
   827   000806  ECE7  F00C         	call	_keypad_read	;wreg free
   828   00080A  6E1A               	movwf	main@keypad_reading^0,c
   829   00080C                     
   830                           ;main.c: 113:                 if(keypad_reading == 0) last_reading = 0;
   831   00080C  501A               	movf	main@keypad_reading^0,w,c
   832   00080E  A4D8               	btfss	status,2,c
   833   000810  EF0C  F004         	goto	u1321
   834   000814  EF0F  F004         	goto	u1320
   835   000818                     u1321:
   836   000818  FFFF               	dw	65535	; assembler added errata NOP
   837   00081A  EF12  F004         	goto	l2033
   838   00081E                     u1320:
   839   00081E  FFFF               	dw	65535	; assembler added errata NOP
   840   000820  0E00               	movlw	0
   841   000822  6E16               	movwf	main@last_reading^0,c
   842   000824                     l2033:
   843   000824  FFFF               	dw	65535	; assembler added errata NOP
   844                           
   845                           ;main.c: 117:                 if(keypad_reading != 255 && keypad_reading != 0 && keypad_
      +                          reading != last_reading){
   846   000826  281A               	incf	main@keypad_reading^0,w,c
   847   000828  B4D8               	btfsc	status,2,c
   848   00082A  EF19  F004         	goto	u1331
   849   00082E  EF1C  F004         	goto	u1330
   850   000832                     u1331:
   851   000832  FFFF               	dw	65535	; assembler added errata NOP
   852   000834  EFA2  F004         	goto	l2075
   853   000838                     u1330:
   854   000838  FFFF               	dw	65535	; assembler added errata NOP
   855   00083A  501A               	movf	main@keypad_reading^0,w,c
   856   00083C  B4D8               	btfsc	status,2,c
   857   00083E  EF23  F004         	goto	u1341
   858   000842  EF26  F004         	goto	u1340
   859   000846                     u1341:
   860   000846  FFFF               	dw	65535	; assembler added errata NOP
   861   000848  EFA2  F004         	goto	l2075
   862   00084C                     u1340:
   863   00084C  FFFF               	dw	65535	; assembler added errata NOP
   864   00084E  5016               	movf	main@last_reading^0,w,c
   865   000850  181A               	xorwf	main@keypad_reading^0,w,c
   866   000852  B4D8               	btfsc	status,2,c
   867   000854  EF2E  F004         	goto	u1351
   868   000858  EF31  F004         	goto	u1350
   869   00085C                     u1351:
   870   00085C  FFFF               	dw	65535	; assembler added errata NOP
   871   00085E  EFA2  F004         	goto	l2075
   872   000862                     u1350:
   873   000862  FFFF               	dw	65535	; assembler added errata NOP
   874   000864                     
   875                           ;main.c: 118:                     last_reading = keypad_reading;
   876   000864  C01A  F016         	movff	main@keypad_reading,main@last_reading
   877   000868                     
   878                           ;main.c: 119:                     LCD_goToRowColumn(1,inputCounter);
   879   000868  C019  F008         	movff	main@inputCounter,LCD_goToRowColumn@col
   880   00086C  0E01               	movlw	1
   881   00086E  ECF7  F00B         	call	_LCD_goToRowColumn
   882                           
   883                           ;main.c: 120:                     LCD_displayCharacter(keypad_reading);
   884   000872  501A               	movf	main@keypad_reading^0,w,c
   885   000874  ECE3  F009         	call	_LCD_displayCharacter
   886   000878                     
   887                           ;main.c: 121:                     passCode[inputCounter] = keypad_reading;
   888   000878  5019               	movf	main@inputCounter^0,w,c
   889   00087A  0F10               	addlw	low main@passCode
   890   00087C  6ED9               	movwf	fsr2l,c
   891   00087E  6ADA               	clrf	fsr2h,c
   892   000880  C01A  FFDF         	movff	main@keypad_reading,indf2
   893   000884                     
   894                           ;main.c: 122:                     inputCounter++;
   895   000884  2A19               	incf	main@inputCounter^0,f,c
   896   000886  EFA2  F004         	goto	l2075
   897   00088A                     l2047:
   898   00088A  FFFF               	dw	65535	; assembler added errata NOP
   899                           
   900                           ;main.c: 126:                 passCode[inputCounter] = '\0';
   901   00088C  5019               	movf	main@inputCounter^0,w,c
   902   00088E  0F10               	addlw	low main@passCode
   903   000890  6ED9               	movwf	fsr2l,c
   904   000892  6ADA               	clrf	fsr2h,c
   905   000894  6ADF               	clrf	indf2,c
   906   000896                     
   907                           ;main.c: 127:                 if (strcmp(passCode,"1234")==0){
   908   000896  0E10               	movlw	low main@passCode
   909   000898  6E01               	movwf	strcmp@l^0,c
   910   00089A  0E61               	movlw	low STR_2
   911   00089C  6E02               	movwf	strcmp@r^0,c
   912   00089E  EC7F  F00B         	call	_strcmp	;wreg free
   913   0008A2  5001               	movf	?_strcmp^0,w,c
   914   0008A4  1002               	iorwf	(?_strcmp+1)^0,w,c
   915   0008A6  A4D8               	btfss	status,2,c
   916   0008A8  EF58  F004         	goto	u1361
   917   0008AC  EF5B  F004         	goto	u1360
   918   0008B0                     u1361:
   919   0008B0  FFFF               	dw	65535	; assembler added errata NOP
   920   0008B2  EF82  F004         	goto	l2061
   921   0008B6                     u1360:
   922   0008B6  FFFF               	dw	65535	; assembler added errata NOP
   923   0008B8                     
   924                           ;main.c: 128:                     if(emergencyState){
   925   0008B8  5017               	movf	main@emergencyState^0,w,c
   926   0008BA  B4D8               	btfsc	status,2,c
   927   0008BC  EF62  F004         	goto	u1371
   928   0008C0  EF65  F004         	goto	u1370
   929   0008C4                     u1371:
   930   0008C4  FFFF               	dw	65535	; assembler added errata NOP
   931   0008C6  EF6A  F004         	goto	l2055
   932   0008CA                     u1370:
   933   0008CA  FFFF               	dw	65535	; assembler added errata NOP
   934   0008CC                     
   935                           ;main.c: 129:                         emergencyState =0;
   936   0008CC  0E00               	movlw	0
   937   0008CE  6E17               	movwf	main@emergencyState^0,c
   938                           
   939                           ;main.c: 130:                     }
   940   0008D0  EF99  F004         	goto	l2067
   941   0008D4                     l2055:
   942   0008D4  FFFF               	dw	65535	; assembler added errata NOP
   943                           
   944                           ;main.c: 132:                         if (mode == ACTIVATED)
   945   0008D6  5018               	movf	main@mode^0,w,c
   946   0008D8  A4D8               	btfss	status,2,c
   947   0008DA  EF71  F004         	goto	u1381
   948   0008DE  EF74  F004         	goto	u1380
   949   0008E2                     u1381:
   950   0008E2  FFFF               	dw	65535	; assembler added errata NOP
   951   0008E4  EF79  F004         	goto	l2059
   952   0008E8                     u1380:
   953   0008E8  FFFF               	dw	65535	; assembler added errata NOP
   954   0008EA                     
   955                           ;main.c: 133:                             mode = DEACTIVATED;
   956   0008EA  0E01               	movlw	1
   957   0008EC  6E18               	movwf	main@mode^0,c
   958   0008EE  EF99  F004         	goto	l2067
   959   0008F2                     l2059:
   960   0008F2  FFFF               	dw	65535	; assembler added errata NOP
   961                           
   962                           ;main.c: 135:                             mode = ACTIVATED;
   963   0008F4  0E00               	movlw	0
   964   0008F6  6E18               	movwf	main@mode^0,c
   965                           
   966                           ;main.c: 136:                             activatedStateTimer = 0;
   967   0008F8  0E00               	movlw	0
   968   0008FA  6E24               	movwf	(_activatedStateTimer+1)^0,c
   969   0008FC  0E00               	movlw	0
   970   0008FE  6E23               	movwf	_activatedStateTimer^0,c
   971   000900  EF99  F004         	goto	l2067
   972   000904                     l2061:
   973   000904  FFFF               	dw	65535	; assembler added errata NOP
   974                           
   975                           ;main.c: 141:                     LCD_clearScreen();
   976   000906  EC9A  F00D         	call	_LCD_clearScreen	;wreg free
   977   00090A                     
   978                           ;main.c: 142:                     LCD_displayStringRowColumn(0,0,"PASS ERR");
   979   00090A  0E00               	movlw	0
   980   00090C  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
   981   00090E  0E58               	movlw	low STR_3
   982   000910  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
   983   000912  0E00               	movlw	0
   984   000914  EC18  F00D         	call	_LCD_displayStringRowColumn
   985   000918                     
   986                           ;main.c: 143:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
   987   000918  0E04               	movlw	4
   988   00091A  6E0F               	movwf	(??_main+1)^0,c
   989   00091C  0ECF               	movlw	207
   990   00091E  6E0E               	movwf	??_main^0,c
   991   000920  0EA5               	movlw	165
   992   000922                     u1587:
   993   000922  FFFF               	dw	65535	; errata NOP
   994   000924  2EE8               	decfsz	wreg,f,c
   995   000926  D7FD               	bra	u1587
   996   000928  2E0E               	decfsz	??_main^0,f,c
   997   00092A  D7FB               	bra	u1587
   998   00092C  2E0F               	decfsz	(??_main+1)^0,f,c
   999   00092E  D7F9               	bra	u1587
  1000   000930  D000               	nop2	
  1001   000932                     l2067:
  1002   000932  FFFF               	dw	65535	; assembler added errata NOP
  1003                           
  1004                           ;main.c: 146:                 passCodeReq=0;
  1005   000934  0E00               	movlw	0
  1006   000936  6E1B               	movwf	main@passCodeReq^0,c
  1007   000938                     
  1008                           ;main.c: 147:                 passCode[0] = '\0';
  1009   000938  0E00               	movlw	0
  1010   00093A  6E10               	movwf	main@passCode^0,c
  1011   00093C                     
  1012                           ;main.c: 148:                 inputCounter = 0;
  1013   00093C  0E00               	movlw	0
  1014   00093E  6E19               	movwf	main@inputCounter^0,c
  1015   000940                     
  1016                           ;main.c: 149:                 LCD_clearScreen();
  1017   000940  EC9A  F00D         	call	_LCD_clearScreen	;wreg free
  1018   000944                     l2075:
  1019   000944  FFFF               	dw	65535	; assembler added errata NOP
  1020                           
  1021                           ;main.c: 154:         if(mode == ACTIVATED){
  1022   000946  5018               	movf	main@mode^0,w,c
  1023   000948  A4D8               	btfss	status,2,c
  1024   00094A  EFA9  F004         	goto	u1391
  1025   00094E  EFAC  F004         	goto	u1390
  1026   000952                     u1391:
  1027   000952  FFFF               	dw	65535	; assembler added errata NOP
  1028   000954  EFD4  F005         	goto	l2139
  1029   000958                     u1390:
  1030   000958  FFFF               	dw	65535	; assembler added errata NOP
  1031   00095A                     
  1032                           ;main.c: 155:             if (emergencyState){
  1033   00095A  5017               	movf	main@emergencyState^0,w,c
  1034   00095C  B4D8               	btfsc	status,2,c
  1035   00095E  EFB3  F004         	goto	u1401
  1036   000962  EFB6  F004         	goto	u1400
  1037   000966                     u1401:
  1038   000966  FFFF               	dw	65535	; assembler added errata NOP
  1039   000968  EF05  F005         	goto	l2097
  1040   00096C                     u1400:
  1041   00096C  FFFF               	dw	65535	; assembler added errata NOP
  1042   00096E                     
  1043                           ;main.c: 156:                 if(!passCodeReq)
  1044   00096E  501B               	movf	main@passCodeReq^0,w,c
  1045   000970  A4D8               	btfss	status,2,c
  1046   000972  EFBD  F004         	goto	u1411
  1047   000976  EFC0  F004         	goto	u1410
  1048   00097A                     u1411:
  1049   00097A  FFFF               	dw	65535	; assembler added errata NOP
  1050   00097C  EFC8  F004         	goto	l2083
  1051   000980                     u1410:
  1052   000980  FFFF               	dw	65535	; assembler added errata NOP
  1053   000982                     
  1054                           ;main.c: 157:                      LCD_displayStringRowColumn(0,0,"99:GATE OPEN");
  1055   000982  0E00               	movlw	0
  1056   000984  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1057   000986  0E11               	movlw	low STR_4
  1058   000988  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1059   00098A  0E00               	movlw	0
  1060   00098C  EC18  F00D         	call	_LCD_displayStringRowColumn
  1061   000990                     l2083:
  1062   000990  FFFF               	dw	65535	; assembler added errata NOP
  1063                           
  1064                           ;main.c: 158:                     if(emergencyTimer<=1)
  1065   000992  BE22               	btfsc	(_emergencyTimer+1)^0,7,c
  1066   000994  EFD8  F004         	goto	u1420
  1067   000998  5022               	movf	(_emergencyTimer+1)^0,w,c
  1068   00099A  E107               	bnz	u1421
  1069   00099C  0E02               	movlw	2
  1070   00099E  5C21               	subwf	_emergencyTimer^0,w,c
  1071   0009A0  B0D8               	btfsc	status,0,c
  1072   0009A2  EFD5  F004         	goto	u1421
  1073   0009A6  EFD8  F004         	goto	u1420
  1074   0009AA                     u1421:
  1075   0009AA  FFFF               	dw	65535	; assembler added errata NOP
  1076   0009AC  EFE0  F004         	goto	l2087
  1077   0009B0                     u1420:
  1078   0009B0  FFFF               	dw	65535	; assembler added errata NOP
  1079   0009B2                     
  1080                           ;main.c: 159:                         buzzer_on(PORT_A,0);
  1081   0009B2  0E00               	movlw	0
  1082   0009B4  6E06               	movwf	buzzer_on@pinNo^0,c
  1083   0009B6  0E00               	movlw	0
  1084   0009B8  EC51  F00D         	call	_buzzer_on
  1085   0009BC  EFE6  F004         	goto	l2089
  1086   0009C0                     l2087:
  1087   0009C0  FFFF               	dw	65535	; assembler added errata NOP
  1088                           
  1089                           ;main.c: 161:                         buzzer_off(PORT_A,0);
  1090   0009C2  0E00               	movlw	0
  1091   0009C4  6E06               	movwf	buzzer_off@pinNo^0,c
  1092   0009C6  0E00               	movlw	0
  1093   0009C8  EC5C  F00D         	call	_buzzer_off
  1094   0009CC                     l2089:
  1095   0009CC  FFFF               	dw	65535	; assembler added errata NOP
  1096                           
  1097                           ;main.c: 162:                 if(emergencyTimer>=5){
  1098   0009CE  BE22               	btfsc	(_emergencyTimer+1)^0,7,c
  1099   0009D0  EFF3  F004         	goto	u1431
  1100   0009D4  5022               	movf	(_emergencyTimer+1)^0,w,c
  1101   0009D6  E10A               	bnz	u1430
  1102   0009D8  0E05               	movlw	5
  1103   0009DA  5C21               	subwf	_emergencyTimer^0,w,c
  1104   0009DC  A0D8               	btfss	status,0,c
  1105   0009DE  EFF3  F004         	goto	u1431
  1106   0009E2  EFF6  F004         	goto	u1430
  1107   0009E6                     u1431:
  1108   0009E6  FFFF               	dw	65535	; assembler added errata NOP
  1109   0009E8  EF00  F005         	goto	l2095
  1110   0009EC                     u1430:
  1111   0009EC  FFFF               	dw	65535	; assembler added errata NOP
  1112   0009EE                     
  1113                           ;main.c: 163:                     DIO_TogglePin(PORT_B,5);
  1114   0009EE  0E05               	movlw	5
  1115   0009F0  6E01               	movwf	DIO_TogglePin@pinNo^0,c
  1116   0009F2  0E01               	movlw	1
  1117   0009F4  ECED  F008         	call	_DIO_TogglePin
  1118   0009F8                     
  1119                           ;main.c: 164:                     emergencyTimer=0;
  1120   0009F8  0E00               	movlw	0
  1121   0009FA  6E22               	movwf	(_emergencyTimer+1)^0,c
  1122   0009FC  0E00               	movlw	0
  1123   0009FE  6E21               	movwf	_emergencyTimer^0,c
  1124   000A00                     l2095:
  1125   000A00  FFFF               	dw	65535	; assembler added errata NOP
  1126                           
  1127                           ;main.c: 166:                 motor_on();
  1128   000A02  EC8D  F00C         	call	_motor_on	;wreg free
  1129                           
  1130                           ;main.c: 167:             }
  1131   000A06  EF79  F003         	goto	l1997
  1132   000A0A                     l2097:
  1133   000A0A  FFFF               	dw	65535	; assembler added errata NOP
  1134                           
  1135                           ;main.c: 169:             {;main.c: 170:                 if(activatedStateTimer <=5 && !
      +                          passCodeReq){
  1136   000A0C  BE24               	btfsc	(_activatedStateTimer+1)^0,7,c
  1137   000A0E  EF15  F005         	goto	u1440
  1138   000A12  5024               	movf	(_activatedStateTimer+1)^0,w,c
  1139   000A14  E107               	bnz	u1441
  1140   000A16  0E06               	movlw	6
  1141   000A18  5C23               	subwf	_activatedStateTimer^0,w,c
  1142   000A1A  B0D8               	btfsc	status,0,c
  1143   000A1C  EF12  F005         	goto	u1441
  1144   000A20  EF15  F005         	goto	u1440
  1145   000A24                     u1441:
  1146   000A24  FFFF               	dw	65535	; assembler added errata NOP
  1147   000A26  EF27  F005         	goto	l2103
  1148   000A2A                     u1440:
  1149   000A2A  FFFF               	dw	65535	; assembler added errata NOP
  1150   000A2C  501B               	movf	main@passCodeReq^0,w,c
  1151   000A2E  A4D8               	btfss	status,2,c
  1152   000A30  EF1C  F005         	goto	u1451
  1153   000A34  EF1F  F005         	goto	u1450
  1154   000A38                     u1451:
  1155   000A38  FFFF               	dw	65535	; assembler added errata NOP
  1156   000A3A  EF27  F005         	goto	l2103
  1157   000A3E                     u1450:
  1158   000A3E  FFFF               	dw	65535	; assembler added errata NOP
  1159   000A40                     
  1160                           ;main.c: 171:                     LCD_displayStringRowColumn(0,0,"Activated");
  1161   000A40  0E00               	movlw	0
  1162   000A42  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1163   000A44  0E4E               	movlw	low STR_5
  1164   000A46  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1165   000A48  0E00               	movlw	0
  1166   000A4A  EC18  F00D         	call	_LCD_displayStringRowColumn
  1167   000A4E                     l2103:
  1168   000A4E  FFFF               	dw	65535	; assembler added errata NOP
  1169                           
  1170                           ;main.c: 173:                 if(pir_getState(PORT_A,2)==HIGH){
  1171   000A50  0E02               	movlw	2
  1172   000A52  6E06               	movwf	pir_getState@pinNo^0,c
  1173   000A54  0E00               	movlw	0
  1174   000A56  EC88  F00D         	call	_pir_getState
  1175   000A5A  06E8               	decf	wreg,f,c
  1176   000A5C  A4D8               	btfss	status,2,c
  1177   000A5E  EF33  F005         	goto	u1461
  1178   000A62  EF36  F005         	goto	u1460
  1179   000A66                     u1461:
  1180   000A66  FFFF               	dw	65535	; assembler added errata NOP
  1181   000A68  EF68  F005         	goto	l2119
  1182   000A6C                     u1460:
  1183   000A6C  FFFF               	dw	65535	; assembler added errata NOP
  1184   000A6E                     
  1185                           ;main.c: 174:                     GateCloseTimer = 0;
  1186   000A6E  0E00               	movlw	0
  1187   000A70  6E28               	movwf	(_GateCloseTimer+1)^0,c
  1188   000A72  0E00               	movlw	0
  1189   000A74  6E27               	movwf	_GateCloseTimer^0,c
  1190   000A76                     
  1191                           ;main.c: 175:                     led_on(PORT_B,5);
  1192   000A76  0E05               	movlw	5
  1193   000A78  6E06               	movwf	led_on@pinNo^0,c
  1194   000A7A  0E01               	movlw	1
  1195   000A7C  EC30  F00D         	call	_led_on
  1196   000A80                     
  1197                           ;main.c: 176:                     motor_on();
  1198   000A80  EC8D  F00C         	call	_motor_on	;wreg free
  1199   000A84                     
  1200                           ;main.c: 177:                     if(activatedStateTimer>5 && !passCodeReq)
  1201   000A84  BE24               	btfsc	(_activatedStateTimer+1)^0,7,c
  1202   000A86  EF4E  F005         	goto	u1471
  1203   000A8A  5024               	movf	(_activatedStateTimer+1)^0,w,c
  1204   000A8C  E10A               	bnz	u1470
  1205   000A8E  0E06               	movlw	6
  1206   000A90  5C23               	subwf	_activatedStateTimer^0,w,c
  1207   000A92  A0D8               	btfss	status,0,c
  1208   000A94  EF4E  F005         	goto	u1471
  1209   000A98  EF51  F005         	goto	u1470
  1210   000A9C                     u1471:
  1211   000A9C  FFFF               	dw	65535	; assembler added errata NOP
  1212   000A9E  EF63  F005         	goto	l2117
  1213   000AA2                     u1470:
  1214   000AA2  FFFF               	dw	65535	; assembler added errata NOP
  1215   000AA4  501B               	movf	main@passCodeReq^0,w,c
  1216   000AA6  A4D8               	btfss	status,2,c
  1217   000AA8  EF58  F005         	goto	u1481
  1218   000AAC  EF5B  F005         	goto	u1480
  1219   000AB0                     u1481:
  1220   000AB0  FFFF               	dw	65535	; assembler added errata NOP
  1221   000AB2  EF63  F005         	goto	l2117
  1222   000AB6                     u1480:
  1223   000AB6  FFFF               	dw	65535	; assembler added errata NOP
  1224   000AB8                     
  1225                           ;main.c: 178:                         LCD_displayStringRowColumn(0,0,"GATE OPENED");
  1226   000AB8  0E00               	movlw	0
  1227   000ABA  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1228   000ABC  0E2A               	movlw	low STR_6
  1229   000ABE  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1230   000AC0  0E00               	movlw	0
  1231   000AC2  EC18  F00D         	call	_LCD_displayStringRowColumn
  1232   000AC6                     l2117:
  1233   000AC6  FFFF               	dw	65535	; assembler added errata NOP
  1234                           
  1235                           ;main.c: 179:                     buzzerSet = 1;
  1236   000AC8  0E01               	movlw	1
  1237   000ACA  6E15               	movwf	main@buzzerSet^0,c
  1238                           
  1239                           ;main.c: 180:                 }
  1240   000ACC  EF79  F003         	goto	l1997
  1241   000AD0                     l2119:
  1242   000AD0  FFFF               	dw	65535	; assembler added errata NOP
  1243                           
  1244                           ;main.c: 182:                     if(GateCloseTimer>=10){
  1245   000AD2  BE28               	btfsc	(_GateCloseTimer+1)^0,7,c
  1246   000AD4  EF75  F005         	goto	u1491
  1247   000AD8  5028               	movf	(_GateCloseTimer+1)^0,w,c
  1248   000ADA  E10A               	bnz	u1490
  1249   000ADC  0E0A               	movlw	10
  1250   000ADE  5C27               	subwf	_GateCloseTimer^0,w,c
  1251   000AE0  A0D8               	btfss	status,0,c
  1252   000AE2  EF75  F005         	goto	u1491
  1253   000AE6  EF78  F005         	goto	u1490
  1254   000AEA                     u1491:
  1255   000AEA  FFFF               	dw	65535	; assembler added errata NOP
  1256   000AEC  EF79  F003         	goto	l1997
  1257   000AF0                     u1490:
  1258   000AF0  FFFF               	dw	65535	; assembler added errata NOP
  1259   000AF2                     
  1260                           ;main.c: 183:                         if(GateCloseTimer <12){
  1261   000AF2  BE28               	btfsc	(_GateCloseTimer+1)^0,7,c
  1262   000AF4  EF88  F005         	goto	u1500
  1263   000AF8  5028               	movf	(_GateCloseTimer+1)^0,w,c
  1264   000AFA  E107               	bnz	u1501
  1265   000AFC  0E0C               	movlw	12
  1266   000AFE  5C27               	subwf	_GateCloseTimer^0,w,c
  1267   000B00  B0D8               	btfsc	status,0,c
  1268   000B02  EF85  F005         	goto	u1501
  1269   000B06  EF88  F005         	goto	u1500
  1270   000B0A                     u1501:
  1271   000B0A  FFFF               	dw	65535	; assembler added errata NOP
  1272   000B0C  EF9A  F005         	goto	l2127
  1273   000B10                     u1500:
  1274   000B10  FFFF               	dw	65535	; assembler added errata NOP
  1275   000B12                     
  1276                           ;main.c: 184:                             if(buzzerSet){
  1277   000B12  5015               	movf	main@buzzerSet^0,w,c
  1278   000B14  B4D8               	btfsc	status,2,c
  1279   000B16  EF8F  F005         	goto	u1511
  1280   000B1A  EF92  F005         	goto	u1510
  1281   000B1E                     u1511:
  1282   000B1E  FFFF               	dw	65535	; assembler added errata NOP
  1283   000B20  EFA6  F005         	goto	l117
  1284   000B24                     u1510:
  1285   000B24  FFFF               	dw	65535	; assembler added errata NOP
  1286   000B26                     
  1287                           ;main.c: 185:                                 buzzer_on(PORT_A,0);
  1288   000B26  0E00               	movlw	0
  1289   000B28  6E06               	movwf	buzzer_on@pinNo^0,c
  1290   000B2A  0E00               	movlw	0
  1291   000B2C  EC51  F00D         	call	_buzzer_on
  1292   000B30  EFA6  F005         	goto	l117
  1293   000B34                     l2127:
  1294   000B34  FFFF               	dw	65535	; assembler added errata NOP
  1295                           
  1296                           ;main.c: 189:                             buzzer_off(PORT_A,0);
  1297   000B36  0E00               	movlw	0
  1298   000B38  6E06               	movwf	buzzer_off@pinNo^0,c
  1299   000B3A  0E00               	movlw	0
  1300   000B3C  EC5C  F00D         	call	_buzzer_off
  1301   000B40                     
  1302                           ;main.c: 190:                             buzzerSet = 0;
  1303   000B40  0E00               	movlw	0
  1304   000B42  6E15               	movwf	main@buzzerSet^0,c
  1305   000B44                     
  1306                           ;main.c: 191:                             GateCloseTimer = 20;
  1307   000B44  0E00               	movlw	0
  1308   000B46  6E28               	movwf	(_GateCloseTimer+1)^0,c
  1309   000B48  0E14               	movlw	20
  1310   000B4A  6E27               	movwf	_GateCloseTimer^0,c
  1311   000B4C                     l117:
  1312   000B4C  FFFF               	dw	65535	; assembler added errata NOP
  1313                           
  1314                           ;main.c: 193:                         led_off(PORT_B,5);
  1315   000B4E  0E05               	movlw	5
  1316   000B50  6E06               	movwf	led_off@pinNo^0,c
  1317   000B52  0E01               	movlw	1
  1318   000B54  EC3B  F00D         	call	_led_off
  1319                           
  1320                           ;main.c: 194:                         motor_off();
  1321   000B58  ECAC  F00C         	call	_motor_off	;wreg free
  1322   000B5C                     
  1323                           ;main.c: 195:                         if(activatedStateTimer>5 && !passCodeReq)
  1324   000B5C  BE24               	btfsc	(_activatedStateTimer+1)^0,7,c
  1325   000B5E  EFBA  F005         	goto	u1521
  1326   000B62  5024               	movf	(_activatedStateTimer+1)^0,w,c
  1327   000B64  E10A               	bnz	u1520
  1328   000B66  0E06               	movlw	6
  1329   000B68  5C23               	subwf	_activatedStateTimer^0,w,c
  1330   000B6A  A0D8               	btfss	status,0,c
  1331   000B6C  EFBA  F005         	goto	u1521
  1332   000B70  EFBD  F005         	goto	u1520
  1333   000B74                     u1521:
  1334   000B74  FFFF               	dw	65535	; assembler added errata NOP
  1335   000B76  EFD1  F005         	goto	l109
  1336   000B7A                     u1520:
  1337   000B7A  FFFF               	dw	65535	; assembler added errata NOP
  1338   000B7C  501B               	movf	main@passCodeReq^0,w,c
  1339   000B7E  A4D8               	btfss	status,2,c
  1340   000B80  EFC4  F005         	goto	u1531
  1341   000B84  EFC7  F005         	goto	u1530
  1342   000B88                     u1531:
  1343   000B88  FFFF               	dw	65535	; assembler added errata NOP
  1344   000B8A  EFD1  F005         	goto	l109
  1345   000B8E                     u1530:
  1346   000B8E  FFFF               	dw	65535	; assembler added errata NOP
  1347   000B90                     
  1348                           ;main.c: 196:                             LCD_displayStringRowColumn(0,0,"GATE CLOSED");
  1349   000B90  0E00               	movlw	0
  1350   000B92  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1351   000B94  0E36               	movlw	low STR_7
  1352   000B96  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1353   000B98  0E00               	movlw	0
  1354   000B9A  EC18  F00D         	call	_LCD_displayStringRowColumn
  1355   000B9E  EF79  F003         	goto	l1997
  1356   000BA2                     l109:
  1357   000BA2  FFFF               	dw	65535	; assembler added errata NOP
  1358                           
  1359                           ;main.c: 201:         }
  1360   000BA4  EF79  F003         	goto	l1997
  1361   000BA8                     l2139:
  1362   000BA8  FFFF               	dw	65535	; assembler added errata NOP
  1363   000BAA  0418               	decf	main@mode^0,w,c
  1364   000BAC  A4D8               	btfss	status,2,c
  1365   000BAE  EFDB  F005         	goto	u1541
  1366   000BB2  EFDE  F005         	goto	u1540
  1367   000BB6                     u1541:
  1368   000BB6  FFFF               	dw	65535	; assembler added errata NOP
  1369   000BB8  EF79  F003         	goto	l1997
  1370   000BBC                     u1540:
  1371   000BBC  FFFF               	dw	65535	; assembler added errata NOP
  1372   000BBE                     
  1373                           ;main.c: 204:             if(emergencyState && !passCodeReq){
  1374   000BBE  5017               	movf	main@emergencyState^0,w,c
  1375   000BC0  B4D8               	btfsc	status,2,c
  1376   000BC2  EFE5  F005         	goto	u1551
  1377   000BC6  EFE8  F005         	goto	u1550
  1378   000BCA                     u1551:
  1379   000BCA  FFFF               	dw	65535	; assembler added errata NOP
  1380   000BCC  EFFC  F005         	goto	l2147
  1381   000BD0                     u1550:
  1382   000BD0  FFFF               	dw	65535	; assembler added errata NOP
  1383   000BD2  501B               	movf	main@passCodeReq^0,w,c
  1384   000BD4  A4D8               	btfss	status,2,c
  1385   000BD6  EFEF  F005         	goto	u1561
  1386   000BDA  EFF2  F005         	goto	u1560
  1387   000BDE                     u1561:
  1388   000BDE  FFFF               	dw	65535	; assembler added errata NOP
  1389   000BE0  EFFC  F005         	goto	l2147
  1390   000BE4                     u1560:
  1391   000BE4  FFFF               	dw	65535	; assembler added errata NOP
  1392   000BE6                     
  1393                           ;main.c: 205:                 LCD_displayStringRowColumn(0,0,"NO ER: DEACTIVE");
  1394   000BE6  0E00               	movlw	0
  1395   000BE8  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1396   000BEA  0E01               	movlw	low STR_8
  1397   000BEC  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1398   000BEE  0E00               	movlw	0
  1399   000BF0  EC18  F00D         	call	_LCD_displayStringRowColumn
  1400                           
  1401                           ;main.c: 206:             }
  1402   000BF4  EF0E  F006         	goto	l2151
  1403   000BF8                     l2147:
  1404   000BF8  FFFF               	dw	65535	; assembler added errata NOP
  1405                           
  1406                           ;main.c: 208:             {;main.c: 209:                 if(!passCodeReq)
  1407   000BFA  501B               	movf	main@passCodeReq^0,w,c
  1408   000BFC  A4D8               	btfss	status,2,c
  1409   000BFE  EF03  F006         	goto	u1571
  1410   000C02  EF06  F006         	goto	u1570
  1411   000C06                     u1571:
  1412   000C06  FFFF               	dw	65535	; assembler added errata NOP
  1413   000C08  EF0E  F006         	goto	l2151
  1414   000C0C                     u1570:
  1415   000C0C  FFFF               	dw	65535	; assembler added errata NOP
  1416   000C0E                     
  1417                           ;main.c: 210:                     LCD_displayStringRowColumn(0,0,"Deactivated");
  1418   000C0E  0E00               	movlw	0
  1419   000C10  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1420   000C12  0E42               	movlw	low STR_9
  1421   000C14  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1422   000C16  0E00               	movlw	0
  1423   000C18  EC18  F00D         	call	_LCD_displayStringRowColumn
  1424   000C1C                     l2151:
  1425   000C1C  FFFF               	dw	65535	; assembler added errata NOP
  1426                           
  1427                           ;main.c: 212:             led_on(PORT_B,5);
  1428   000C1E  0E05               	movlw	5
  1429   000C20  6E06               	movwf	led_on@pinNo^0,c
  1430   000C22  0E01               	movlw	1
  1431   000C24  EC30  F00D         	call	_led_on
  1432   000C28                     
  1433                           ;main.c: 213:             motor_off();
  1434   000C28  ECAC  F00C         	call	_motor_off	;wreg free
  1435   000C2C  EF79  F003         	goto	l1997
  1436   000C30  EF20  F000         	goto	start
  1437   000C34                     __end_of_main:
  1438                           	callstack 0
  1439                           
  1440 ;; *************** function _strcmp *****************
  1441 ;; Defined at:
  1442 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcmp.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;  l               1    0[COMRAM] PTR const unsigned char 
  1445 ;;		 -> main@passCode(5), 
  1446 ;;  r               1    1[COMRAM] PTR const unsigned char 
  1447 ;;		 -> STR_2(5), 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  2    0[COMRAM] int 
  1452 ;; Registers used:
  1453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1459 ;;      Params:         2       0       0       0       0       0       0
  1460 ;;      Locals:         0       0       0       0       0       0       0
  1461 ;;      Temps:          1       0       0       0       0       0       0
  1462 ;;      Totals:         3       0       0       0       0       0       0
  1463 ;;Total ram usage:        3 bytes
  1464 ;; Hardware stack levels used: 1
  1465 ;; Hardware stack levels required when called: 1
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text1
  1474   0016FE                     __ptext1:
  1475                           	callstack 0
  1476   0016FE                     _strcmp:
  1477                           	callstack 0
  1478   0016FE  FFFF               	dw	65535	; assembler added errata NOP
  1479   001700  EF85  F00B         	goto	l1919
  1480   001704                     l1917:
  1481   001704  FFFF               	dw	65535	; assembler added errata NOP
  1482   001706  2A01               	incf	strcmp@l^0,f,c
  1483   001708  2A02               	incf	strcmp@r^0,f,c
  1484   00170A                     l1919:
  1485   00170A  FFFF               	dw	65535	; assembler added errata NOP
  1486   00170C  5001               	movf	strcmp@l^0,w,c
  1487   00170E  6ED9               	movwf	fsr2l,c
  1488   001710  6ADA               	clrf	fsr2h,c
  1489   001712  50DF               	movf	indf2,w,c
  1490   001714  6E03               	movwf	??_strcmp^0,c
  1491   001716  C002  FFF6         	movff	strcmp@r,tblptrl
  1492   00171A                     	if	1	;There is more than 1 active tblptr byte
  1493   00171A  0E06               	movlw	high __smallconst
  1494   00171C  6EF7               	movwf	tblptrh,c
  1495   00171E                     	endif
  1496   00171E                     	if	0	;tblptru may be non-zero
  1497   00171E                     	endif
  1498   00171E                     	if	0	;tblptru may be non-zero
  1499   00171E                     	endif
  1500   00171E  0008               	tblrd		*
  1501   001720  FFFF               	dw	65535	; errata NOP
  1502   001722  50F5               	movf	tablat,w,c
  1503   001724  1803               	xorwf	??_strcmp^0,w,c
  1504   001726  A4D8               	btfss	status,2,c
  1505   001728  EF98  F00B         	goto	u1171
  1506   00172C  EF9B  F00B         	goto	u1170
  1507   001730                     u1171:
  1508   001730  FFFF               	dw	65535	; assembler added errata NOP
  1509   001732  EFA8  F00B         	goto	l1923
  1510   001736                     u1170:
  1511   001736  FFFF               	dw	65535	; assembler added errata NOP
  1512   001738  5001               	movf	strcmp@l^0,w,c
  1513   00173A  6ED9               	movwf	fsr2l,c
  1514   00173C  6ADA               	clrf	fsr2h,c
  1515   00173E  50DF               	movf	indf2,w,c
  1516   001740  A4D8               	btfss	status,2,c
  1517   001742  EFA5  F00B         	goto	u1181
  1518   001746  EFA8  F00B         	goto	u1180
  1519   00174A                     u1181:
  1520   00174A  FFFF               	dw	65535	; assembler added errata NOP
  1521   00174C  EF82  F00B         	goto	l1917
  1522   001750                     u1180:
  1523   001750                     l1923:
  1524   001750  FFFF               	dw	65535	; assembler added errata NOP
  1525   001752  5001               	movf	strcmp@l^0,w,c
  1526   001754  6ED9               	movwf	fsr2l,c
  1527   001756  6ADA               	clrf	fsr2h,c
  1528   001758  50DF               	movf	indf2,w,c
  1529   00175A  6E03               	movwf	??_strcmp^0,c
  1530   00175C  C002  FFF6         	movff	strcmp@r,tblptrl
  1531   001760                     	if	1	;There is more than 1 active tblptr byte
  1532   001760  0E06               	movlw	high __smallconst
  1533   001762  6EF7               	movwf	tblptrh,c
  1534   001764                     	endif
  1535   001764                     	if	0	;tblptru may be non-zero
  1536   001764                     	endif
  1537   001764                     	if	0	;tblptru may be non-zero
  1538   001764                     	endif
  1539   001764  0008               	tblrd		*
  1540   001766  FFFF               	dw	65535	; errata NOP
  1541   001768  50F5               	movf	tablat,w,c
  1542   00176A  5C03               	subwf	??_strcmp^0,w,c
  1543   00176C  6E01               	movwf	?_strcmp^0,c
  1544   00176E  6A02               	clrf	(?_strcmp+1)^0,c
  1545   001770  A0D8               	btfss	status,0,c
  1546   001772  0602               	decf	(?_strcmp+1)^0,f,c
  1547   001774  0012               	return		;funcret
  1548   001776  FFFF               	dw	65535	; errata NOP
  1549   001778                     __end_of_strcmp:
  1550                           	callstack 0
  1551                           
  1552 ;; *************** function _pir_init *****************
  1553 ;; Defined at:
  1554 ;;		line 8 in file "pir.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  port            1    wreg     enum E2181
  1557 ;;  pinNo           1    5[COMRAM] unsigned char 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  port            1    6[COMRAM] enum E2181
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      void 
  1562 ;; Registers used:
  1563 ;;		wreg, status,2, status,0, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1569 ;;      Params:         1       0       0       0       0       0       0
  1570 ;;      Locals:         1       0       0       0       0       0       0
  1571 ;;      Temps:          0       0       0       0       0       0       0
  1572 ;;      Totals:         2       0       0       0       0       0       0
  1573 ;;Total ram usage:        2 bytes
  1574 ;; Hardware stack levels used: 1
  1575 ;; Hardware stack levels required when called: 2
  1576 ;; This function calls:
  1577 ;;		_DIO_SetPinDirection
  1578 ;; This function is called by:
  1579 ;;		_main
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text2
  1584   001A4A                     __ptext2:
  1585                           	callstack 0
  1586   001A4A                     _pir_init:
  1587                           	callstack 0
  1588   001A4A  FFFF               	dw	65535	; assembler added errata NOP
  1589                           
  1590                           ;incstack = 0
  1591                           ;pir_init@port stored from wreg
  1592   001A4C  6E07               	movwf	pir_init@port^0,c
  1593   001A4E                     
  1594                           ;pir.c: 9:     DIO_SetPinDirection(port,pinNo,INPUT);
  1595   001A4E  C006  F001         	movff	pir_init@pinNo,DIO_SetPinDirection@pinNo
  1596   001A52  0E00               	movlw	0
  1597   001A54  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  1598   001A56  5007               	movf	pir_init@port^0,w,c
  1599   001A58  EC1A  F006         	call	_DIO_SetPinDirection
  1600   001A5C  0012               	return		;funcret
  1601   001A5E  FFFF               	dw	65535	; errata NOP
  1602   001A60                     __end_of_pir_init:
  1603                           	callstack 0
  1604                           
  1605 ;; *************** function _pir_getState *****************
  1606 ;; Defined at:
  1607 ;;		line 11 in file "pir.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  port            1    wreg     enum E2181
  1610 ;;  pinNo           1    5[COMRAM] unsigned char 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  port            1    6[COMRAM] enum E2181
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      unsigned char 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1622 ;;      Params:         1       0       0       0       0       0       0
  1623 ;;      Locals:         1       0       0       0       0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0
  1625 ;;      Totals:         2       0       0       0       0       0       0
  1626 ;;Total ram usage:        2 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; Hardware stack levels required when called: 2
  1629 ;; This function calls:
  1630 ;;		_DIO_GetPinValue
  1631 ;; This function is called by:
  1632 ;;		_main
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text3
  1637   001B10                     __ptext3:
  1638                           	callstack 0
  1639   001B10                     _pir_getState:
  1640                           	callstack 0
  1641   001B10  FFFF               	dw	65535	; assembler added errata NOP
  1642                           
  1643                           ;incstack = 0
  1644                           ;pir_getState@port stored from wreg
  1645   001B12  6E07               	movwf	pir_getState@port^0,c
  1646   001B14                     
  1647                           ;pir.c: 12:     return DIO_GetPinValue(port,pinNo);
  1648   001B14  C006  F001         	movff	pir_getState@pinNo,DIO_GetPinValue@pinNo
  1649   001B18  5007               	movf	pir_getState@port^0,w,c
  1650   001B1A  EC58  F008         	call	_DIO_GetPinValue
  1651   001B1E  0012               	return		;funcret
  1652   001B20  FFFF               	dw	65535	; errata NOP
  1653   001B22                     __end_of_pir_getState:
  1654                           	callstack 0
  1655                           
  1656 ;; *************** function _motor_on *****************
  1657 ;; Defined at:
  1658 ;;		line 20 in file "motor.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2, status,0, cstack
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1672 ;;      Params:         0       0       0       0       0       0       0
  1673 ;;      Locals:         0       0       0       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0       0       0
  1675 ;;      Totals:         0       0       0       0       0       0       0
  1676 ;;Total ram usage:        0 bytes
  1677 ;; Hardware stack levels used: 1
  1678 ;; Hardware stack levels required when called: 2
  1679 ;; This function calls:
  1680 ;;		_DIO_SetPinValue
  1681 ;; This function is called by:
  1682 ;;		_main
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text4
  1687   00191A                     __ptext4:
  1688                           	callstack 0
  1689   00191A                     _motor_on:
  1690                           	callstack 0
  1691   00191A  FFFF               	dw	65535	; assembler added errata NOP
  1692   00191C                     
  1693                           ;motor.c: 21:     DIO_SetPinValue(PORT_B,0,LOW);
  1694   00191C  0E00               	movlw	0
  1695   00191E  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1696   001920  0E00               	movlw	0
  1697   001922  6E02               	movwf	DIO_SetPinValue@value^0,c
  1698   001924  0E01               	movlw	1
  1699   001926  EC39  F007         	call	_DIO_SetPinValue
  1700                           
  1701                           ;motor.c: 22:     DIO_SetPinValue(PORT_B,1,HIGH);
  1702   00192A  0E01               	movlw	1
  1703   00192C  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1704   00192E  0E01               	movlw	1
  1705   001930  6E02               	movwf	DIO_SetPinValue@value^0,c
  1706   001932  0E01               	movlw	1
  1707   001934  EC39  F007         	call	_DIO_SetPinValue
  1708                           
  1709                           ;motor.c: 23:     DIO_SetPinValue(PORT_B,2,LOW);
  1710   001938  0E02               	movlw	2
  1711   00193A  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1712   00193C  0E00               	movlw	0
  1713   00193E  6E02               	movwf	DIO_SetPinValue@value^0,c
  1714   001940  0E01               	movlw	1
  1715   001942  EC39  F007         	call	_DIO_SetPinValue
  1716                           
  1717                           ;motor.c: 24:     DIO_SetPinValue(PORT_B,3,LOW);
  1718   001946  0E03               	movlw	3
  1719   001948  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1720   00194A  0E00               	movlw	0
  1721   00194C  6E02               	movwf	DIO_SetPinValue@value^0,c
  1722   00194E  0E01               	movlw	1
  1723   001950  EC39  F007         	call	_DIO_SetPinValue
  1724   001954  0012               	return		;funcret
  1725   001956  FFFF               	dw	65535	; errata NOP
  1726   001958                     __end_of_motor_on:
  1727                           	callstack 0
  1728                           
  1729 ;; *************** function _motor_off *****************
  1730 ;; Defined at:
  1731 ;;		line 26 in file "motor.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1745 ;;      Params:         0       0       0       0       0       0       0
  1746 ;;      Locals:         0       0       0       0       0       0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0
  1748 ;;      Totals:         0       0       0       0       0       0       0
  1749 ;;Total ram usage:        0 bytes
  1750 ;; Hardware stack levels used: 1
  1751 ;; Hardware stack levels required when called: 2
  1752 ;; This function calls:
  1753 ;;		_DIO_SetPinValue
  1754 ;; This function is called by:
  1755 ;;		_main
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text5
  1760   001958                     __ptext5:
  1761                           	callstack 0
  1762   001958                     _motor_off:
  1763                           	callstack 0
  1764   001958  FFFF               	dw	65535	; assembler added errata NOP
  1765   00195A                     
  1766                           ;motor.c: 27:     DIO_SetPinValue(PORT_B,0,HIGH);
  1767   00195A  0E00               	movlw	0
  1768   00195C  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1769   00195E  0E01               	movlw	1
  1770   001960  6E02               	movwf	DIO_SetPinValue@value^0,c
  1771   001962  0E01               	movlw	1
  1772   001964  EC39  F007         	call	_DIO_SetPinValue
  1773                           
  1774                           ;motor.c: 28:     DIO_SetPinValue(PORT_B,1,LOW);
  1775   001968  0E01               	movlw	1
  1776   00196A  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1777   00196C  0E00               	movlw	0
  1778   00196E  6E02               	movwf	DIO_SetPinValue@value^0,c
  1779   001970  0E01               	movlw	1
  1780   001972  EC39  F007         	call	_DIO_SetPinValue
  1781                           
  1782                           ;motor.c: 29:     DIO_SetPinValue(PORT_B,2,LOW);
  1783   001976  0E02               	movlw	2
  1784   001978  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1785   00197A  0E00               	movlw	0
  1786   00197C  6E02               	movwf	DIO_SetPinValue@value^0,c
  1787   00197E  0E01               	movlw	1
  1788   001980  EC39  F007         	call	_DIO_SetPinValue
  1789                           
  1790                           ;motor.c: 30:     DIO_SetPinValue(PORT_B,3,LOW);
  1791   001984  0E03               	movlw	3
  1792   001986  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1793   001988  0E00               	movlw	0
  1794   00198A  6E02               	movwf	DIO_SetPinValue@value^0,c
  1795   00198C  0E01               	movlw	1
  1796   00198E  EC39  F007         	call	_DIO_SetPinValue
  1797   001992  0012               	return		;funcret
  1798   001994  FFFF               	dw	65535	; errata NOP
  1799   001996                     __end_of_motor_off:
  1800                           	callstack 0
  1801                           
  1802 ;; *************** function _motor_init *****************
  1803 ;; Defined at:
  1804 ;;		line 8 in file "motor.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;		None
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, status,2, status,0, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1818 ;;      Params:         0       0       0       0       0       0       0
  1819 ;;      Locals:         0       0       0       0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0
  1821 ;;      Totals:         0       0       0       0       0       0       0
  1822 ;;Total ram usage:        0 bytes
  1823 ;; Hardware stack levels used: 1
  1824 ;; Hardware stack levels required when called: 2
  1825 ;; This function calls:
  1826 ;;		_DIO_SetPinDirection
  1827 ;;		_DIO_SetPinValue
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text6
  1834   001778                     __ptext6:
  1835                           	callstack 0
  1836   001778                     _motor_init:
  1837                           	callstack 0
  1838   001778  FFFF               	dw	65535	; assembler added errata NOP
  1839   00177A                     
  1840                           ;motor.c: 9:     DIO_SetPinDirection(PORT_B,0,OUTPUT);
  1841   00177A  0E00               	movlw	0
  1842   00177C  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  1843   00177E  0E01               	movlw	1
  1844   001780  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  1845   001782  0E01               	movlw	1
  1846   001784  EC1A  F006         	call	_DIO_SetPinDirection
  1847                           
  1848                           ;motor.c: 10:     DIO_SetPinDirection(PORT_B,1,OUTPUT);
  1849   001788  0E01               	movlw	1
  1850   00178A  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  1851   00178C  0E01               	movlw	1
  1852   00178E  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  1853   001790  0E01               	movlw	1
  1854   001792  EC1A  F006         	call	_DIO_SetPinDirection
  1855                           
  1856                           ;motor.c: 11:     DIO_SetPinDirection(PORT_B,2,OUTPUT);
  1857   001796  0E02               	movlw	2
  1858   001798  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  1859   00179A  0E01               	movlw	1
  1860   00179C  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  1861   00179E  0E01               	movlw	1
  1862   0017A0  EC1A  F006         	call	_DIO_SetPinDirection
  1863                           
  1864                           ;motor.c: 12:     DIO_SetPinDirection(PORT_B,3,OUTPUT);
  1865   0017A4  0E03               	movlw	3
  1866   0017A6  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  1867   0017A8  0E01               	movlw	1
  1868   0017AA  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  1869   0017AC  0E01               	movlw	1
  1870   0017AE  EC1A  F006         	call	_DIO_SetPinDirection
  1871                           
  1872                           ;motor.c: 14:     DIO_SetPinValue(PORT_B,0,LOW);
  1873   0017B2  0E00               	movlw	0
  1874   0017B4  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1875   0017B6  0E00               	movlw	0
  1876   0017B8  6E02               	movwf	DIO_SetPinValue@value^0,c
  1877   0017BA  0E01               	movlw	1
  1878   0017BC  EC39  F007         	call	_DIO_SetPinValue
  1879                           
  1880                           ;motor.c: 15:     DIO_SetPinValue(PORT_B,1,LOW);
  1881   0017C0  0E01               	movlw	1
  1882   0017C2  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1883   0017C4  0E00               	movlw	0
  1884   0017C6  6E02               	movwf	DIO_SetPinValue@value^0,c
  1885   0017C8  0E01               	movlw	1
  1886   0017CA  EC39  F007         	call	_DIO_SetPinValue
  1887                           
  1888                           ;motor.c: 16:     DIO_SetPinValue(PORT_B,2,LOW);
  1889   0017CE  0E02               	movlw	2
  1890   0017D0  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1891   0017D2  0E00               	movlw	0
  1892   0017D4  6E02               	movwf	DIO_SetPinValue@value^0,c
  1893   0017D6  0E01               	movlw	1
  1894   0017D8  EC39  F007         	call	_DIO_SetPinValue
  1895                           
  1896                           ;motor.c: 17:     DIO_SetPinValue(PORT_B,3,LOW);
  1897   0017DC  0E03               	movlw	3
  1898   0017DE  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1899   0017E0  0E00               	movlw	0
  1900   0017E2  6E02               	movwf	DIO_SetPinValue@value^0,c
  1901   0017E4  0E01               	movlw	1
  1902   0017E6  EC39  F007         	call	_DIO_SetPinValue
  1903   0017EA  0012               	return		;funcret
  1904   0017EC  FFFF               	dw	65535	; errata NOP
  1905   0017EE                     __end_of_motor_init:
  1906                           	callstack 0
  1907                           
  1908 ;; *************** function _led_on *****************
  1909 ;; Defined at:
  1910 ;;		line 12 in file "led.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  port            1    wreg     enum E2181
  1913 ;;  pinNo           1    5[COMRAM] unsigned char 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  port            1    6[COMRAM] enum E2181
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2, status,0, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1925 ;;      Params:         1       0       0       0       0       0       0
  1926 ;;      Locals:         1       0       0       0       0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0
  1928 ;;      Totals:         2       0       0       0       0       0       0
  1929 ;;Total ram usage:        2 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 2
  1932 ;; This function calls:
  1933 ;;		_DIO_SetPinValue
  1934 ;; This function is called by:
  1935 ;;		_main
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text7
  1940   001A60                     __ptext7:
  1941                           	callstack 0
  1942   001A60                     _led_on:
  1943                           	callstack 0
  1944   001A60  FFFF               	dw	65535	; assembler added errata NOP
  1945                           
  1946                           ;incstack = 0
  1947                           ;led_on@port stored from wreg
  1948   001A62  6E07               	movwf	led_on@port^0,c
  1949   001A64                     
  1950                           ;led.c: 13:     DIO_SetPinValue(port,pinNo,HIGH);
  1951   001A64  C006  F001         	movff	led_on@pinNo,DIO_SetPinValue@pinNo
  1952   001A68  0E01               	movlw	1
  1953   001A6A  6E02               	movwf	DIO_SetPinValue@value^0,c
  1954   001A6C  5007               	movf	led_on@port^0,w,c
  1955   001A6E  EC39  F007         	call	_DIO_SetPinValue
  1956   001A72  0012               	return		;funcret
  1957   001A74  FFFF               	dw	65535	; errata NOP
  1958   001A76                     __end_of_led_on:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function _led_off *****************
  1962 ;; Defined at:
  1963 ;;		line 15 in file "led.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  port            1    wreg     enum E2181
  1966 ;;  pinNo           1    5[COMRAM] unsigned char 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  port            1    6[COMRAM] enum E2181
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1978 ;;      Params:         1       0       0       0       0       0       0
  1979 ;;      Locals:         1       0       0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0
  1981 ;;      Totals:         2       0       0       0       0       0       0
  1982 ;;Total ram usage:        2 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 2
  1985 ;; This function calls:
  1986 ;;		_DIO_SetPinValue
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text8
  1993   001A76                     __ptext8:
  1994                           	callstack 0
  1995   001A76                     _led_off:
  1996                           	callstack 0
  1997   001A76  FFFF               	dw	65535	; assembler added errata NOP
  1998                           
  1999                           ;incstack = 0
  2000                           ;led_off@port stored from wreg
  2001   001A78  6E07               	movwf	led_off@port^0,c
  2002   001A7A                     
  2003                           ;led.c: 16:     DIO_SetPinValue(port,pinNo,LOW);
  2004   001A7A  C006  F001         	movff	led_off@pinNo,DIO_SetPinValue@pinNo
  2005   001A7E  0E00               	movlw	0
  2006   001A80  6E02               	movwf	DIO_SetPinValue@value^0,c
  2007   001A82  5007               	movf	led_off@port^0,w,c
  2008   001A84  EC39  F007         	call	_DIO_SetPinValue
  2009   001A88  0012               	return		;funcret
  2010   001A8A  FFFF               	dw	65535	; errata NOP
  2011   001A8C                     __end_of_led_off:
  2012                           	callstack 0
  2013                           
  2014 ;; *************** function _led_init *****************
  2015 ;; Defined at:
  2016 ;;		line 9 in file "led.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;  port            1    wreg     enum E2181
  2019 ;;  pinNo           1    5[COMRAM] unsigned char 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  port            1    6[COMRAM] enum E2181
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2, status,0, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2031 ;;      Params:         1       0       0       0       0       0       0
  2032 ;;      Locals:         1       0       0       0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0
  2034 ;;      Totals:         2       0       0       0       0       0       0
  2035 ;;Total ram usage:        2 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 2
  2038 ;; This function calls:
  2039 ;;		_DIO_SetPinDirection
  2040 ;; This function is called by:
  2041 ;;		_main
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text9
  2046   001A8C                     __ptext9:
  2047                           	callstack 0
  2048   001A8C                     _led_init:
  2049                           	callstack 0
  2050   001A8C  FFFF               	dw	65535	; assembler added errata NOP
  2051                           
  2052                           ;incstack = 0
  2053                           ;led_init@port stored from wreg
  2054   001A8E  6E07               	movwf	led_init@port^0,c
  2055   001A90                     
  2056                           ;led.c: 10:     DIO_SetPinDirection(port,pinNo,OUTPUT);
  2057   001A90  C006  F001         	movff	led_init@pinNo,DIO_SetPinDirection@pinNo
  2058   001A94  0E01               	movlw	1
  2059   001A96  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2060   001A98  5007               	movf	led_init@port^0,w,c
  2061   001A9A  EC1A  F006         	call	_DIO_SetPinDirection
  2062   001A9E  0012               	return		;funcret
  2063   001AA0  FFFF               	dw	65535	; errata NOP
  2064   001AA2                     __end_of_led_init:
  2065                           	callstack 0
  2066                           
  2067 ;; *************** function _keypad_read *****************
  2068 ;; Defined at:
  2069 ;;		line 95 in file "keypad.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  keyValue        1    2[COMRAM] unsigned char 
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      unsigned char 
  2076 ;; Registers used:
  2077 ;;		wreg, status,2, status,0, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2083 ;;      Params:         0       0       0       0       0       0       0
  2084 ;;      Locals:         1       0       0       0       0       0       0
  2085 ;;      Temps:          1       0       0       0       0       0       0
  2086 ;;      Totals:         2       0       0       0       0       0       0
  2087 ;;Total ram usage:        2 bytes
  2088 ;; Hardware stack levels used: 1
  2089 ;; Hardware stack levels required when called: 2
  2090 ;; This function calls:
  2091 ;;		_keypad_line_scan
  2092 ;;		_keypad_value
  2093 ;; This function is called by:
  2094 ;;		_main
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text10
  2099   0019CE                     __ptext10:
  2100                           	callstack 0
  2101   0019CE                     _keypad_read:
  2102                           	callstack 0
  2103   0019CE  FFFF               	dw	65535	; assembler added errata NOP
  2104   0019D0                     
  2105                           ;keypad.c: 96:     keypad_line_scan();
  2106   0019D0  EC03  F00D         	call	_keypad_line_scan	;wreg free
  2107   0019D4                     
  2108                           ;keypad.c: 97:     if((PORTC & 0b01110000) != 0){
  2109   0019D4  CF82 F002          	movff	3970,??_keypad_read	;volatile
  2110   0019D8  0E70               	movlw	112
  2111   0019DA  1602               	andwf	??_keypad_read^0,f,c
  2112   0019DC  B4D8               	btfsc	status,2,c
  2113   0019DE  EFF3  F00C         	goto	u381
  2114   0019E2  EFF6  F00C         	goto	u380
  2115   0019E6                     u381:
  2116   0019E6  FFFF               	dw	65535	; assembler added errata NOP
  2117   0019E8  EFFE  F00C         	goto	l1391
  2118   0019EC                     u380:
  2119   0019EC  FFFF               	dw	65535	; assembler added errata NOP
  2120   0019EE                     
  2121                           ;keypad.c: 98:         uint8_t keyValue = keypad_value(PORTC);
  2122   0019EE  5082               	movf	130,w,c	;volatile
  2123   0019F0  EC76  F009         	call	_keypad_value
  2124   0019F4  6E03               	movwf	keypad_read@keyValue^0,c
  2125   0019F6                     
  2126                           ;keypad.c: 99:         return keyValue;
  2127   0019F6  5003               	movf	keypad_read@keyValue^0,w,c
  2128   0019F8  EF00  F00D         	goto	l260
  2129   0019FC                     l1391:
  2130   0019FC  FFFF               	dw	65535	; assembler added errata NOP
  2131                           
  2132                           ;keypad.c: 101:     return 0;
  2133   0019FE  0E00               	movlw	0
  2134   001A00                     l260:
  2135   001A00  FFFF               	dw	65535	; assembler added errata NOP
  2136   001A02  0012               	return		;funcret
  2137   001A04  FFFF               	dw	65535	; errata NOP
  2138   001A06                     __end_of_keypad_read:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function _keypad_value *****************
  2142 ;; Defined at:
  2143 ;;		line 52 in file "keypad.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  portValue       1    wreg     unsigned char 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  portValue       1    0[COMRAM] unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      unsigned char 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2157 ;;      Params:         0       0       0       0       0       0       0
  2158 ;;      Locals:         1       0       0       0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0       0       0
  2160 ;;      Totals:         1       0       0       0       0       0       0
  2161 ;;Total ram usage:        1 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; Hardware stack levels required when called: 1
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_keypad_read
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           	psect	text11
  2172   0012EC                     __ptext11:
  2173                           	callstack 0
  2174   0012EC                     _keypad_value:
  2175                           	callstack 0
  2176   0012EC  FFFF               	dw	65535	; assembler added errata NOP
  2177                           
  2178                           ;incstack = 0
  2179                           ;keypad_value@portValue stored from wreg
  2180   0012EE  6E01               	movwf	keypad_value@portValue^0,c
  2181   0012F0                     
  2182                           ;keypad.c: 53:     switch (portValue){
  2183   0012F0  EFAA  F009         	goto	l1335
  2184   0012F4                     l1261:
  2185   0012F4  FFFF               	dw	65535	; assembler added errata NOP
  2186                           
  2187                           ;keypad.c: 55:             return '1';
  2188   0012F6  0E31               	movlw	49
  2189   0012F8  EFE0  F009         	goto	l244
  2190   0012FC                     l1267:
  2191   0012FC  FFFF               	dw	65535	; assembler added errata NOP
  2192                           
  2193                           ;keypad.c: 58:             return '4';
  2194   0012FE  0E34               	movlw	52
  2195   001300  EFE0  F009         	goto	l244
  2196   001304                     l1273:
  2197   001304  FFFF               	dw	65535	; assembler added errata NOP
  2198                           
  2199                           ;keypad.c: 61:             return '7';
  2200   001306  0E37               	movlw	55
  2201   001308  EFE0  F009         	goto	l244
  2202   00130C                     l1279:
  2203   00130C  FFFF               	dw	65535	; assembler added errata NOP
  2204                           
  2205                           ;keypad.c: 64:             return '*';
  2206   00130E  0E2A               	movlw	42
  2207   001310  EFE0  F009         	goto	l244
  2208   001314                     l1285:
  2209   001314  FFFF               	dw	65535	; assembler added errata NOP
  2210                           
  2211                           ;keypad.c: 68:             return '2';
  2212   001316  0E32               	movlw	50
  2213   001318  EFE0  F009         	goto	l244
  2214   00131C                     l1291:
  2215   00131C  FFFF               	dw	65535	; assembler added errata NOP
  2216                           
  2217                           ;keypad.c: 71:             return '5';
  2218   00131E  0E35               	movlw	53
  2219   001320  EFE0  F009         	goto	l244
  2220   001324                     l1297:
  2221   001324  FFFF               	dw	65535	; assembler added errata NOP
  2222                           
  2223                           ;keypad.c: 74:             return '8';
  2224   001326  0E38               	movlw	56
  2225   001328  EFE0  F009         	goto	l244
  2226   00132C                     l1303:
  2227   00132C  FFFF               	dw	65535	; assembler added errata NOP
  2228                           
  2229                           ;keypad.c: 77:             return '0';
  2230   00132E  0E30               	movlw	48
  2231   001330  EFE0  F009         	goto	l244
  2232   001334                     l1309:
  2233   001334  FFFF               	dw	65535	; assembler added errata NOP
  2234                           
  2235                           ;keypad.c: 81:             return '3';
  2236   001336  0E33               	movlw	51
  2237   001338  EFE0  F009         	goto	l244
  2238   00133C                     l1315:
  2239   00133C  FFFF               	dw	65535	; assembler added errata NOP
  2240                           
  2241                           ;keypad.c: 84:             return '6';
  2242   00133E  0E36               	movlw	54
  2243   001340  EFE0  F009         	goto	l244
  2244   001344                     l1321:
  2245   001344  FFFF               	dw	65535	; assembler added errata NOP
  2246                           
  2247                           ;keypad.c: 87:             return '9';
  2248   001346  0E39               	movlw	57
  2249   001348  EFE0  F009         	goto	l244
  2250   00134C                     l1327:
  2251   00134C  FFFF               	dw	65535	; assembler added errata NOP
  2252                           
  2253                           ;keypad.c: 90:             return '#';
  2254   00134E  0E23               	movlw	35
  2255   001350  EFE0  F009         	goto	l244
  2256   001354                     l1335:
  2257   001354  FFFF               	dw	65535	; assembler added errata NOP
  2258   001356  5001               	movf	keypad_value@portValue^0,w,c
  2259                           
  2260                           ; Switch size 1, requested type "simple"
  2261                           ; Number of cases is 12, Range of values is 17 to 72
  2262                           ; switch strategies available:
  2263                           ; Name         Instructions Cycles
  2264                           ; simple_byte           37    19 (average)
  2265                           ;	Chosen strategy is simple_byte
  2266   001358  0A11               	xorlw	17	; case 17
  2267   00135A  B4D8               	btfsc	status,2,c
  2268   00135C  EF7A  F009         	goto	l1261
  2269   001360  0A03               	xorlw	3	; case 18
  2270   001362  B4D8               	btfsc	status,2,c
  2271   001364  EF7E  F009         	goto	l1267
  2272   001368  0A06               	xorlw	6	; case 20
  2273   00136A  B4D8               	btfsc	status,2,c
  2274   00136C  EF82  F009         	goto	l1273
  2275   001370  0A0C               	xorlw	12	; case 24
  2276   001372  B4D8               	btfsc	status,2,c
  2277   001374  EF86  F009         	goto	l1279
  2278   001378  0A39               	xorlw	57	; case 33
  2279   00137A  B4D8               	btfsc	status,2,c
  2280   00137C  EF8A  F009         	goto	l1285
  2281   001380  0A03               	xorlw	3	; case 34
  2282   001382  B4D8               	btfsc	status,2,c
  2283   001384  EF8E  F009         	goto	l1291
  2284   001388  0A06               	xorlw	6	; case 36
  2285   00138A  B4D8               	btfsc	status,2,c
  2286   00138C  EF92  F009         	goto	l1297
  2287   001390  0A0C               	xorlw	12	; case 40
  2288   001392  B4D8               	btfsc	status,2,c
  2289   001394  EF96  F009         	goto	l1303
  2290   001398  0A69               	xorlw	105	; case 65
  2291   00139A  B4D8               	btfsc	status,2,c
  2292   00139C  EF9A  F009         	goto	l1309
  2293   0013A0  0A03               	xorlw	3	; case 66
  2294   0013A2  B4D8               	btfsc	status,2,c
  2295   0013A4  EF9E  F009         	goto	l1315
  2296   0013A8  0A06               	xorlw	6	; case 68
  2297   0013AA  B4D8               	btfsc	status,2,c
  2298   0013AC  EFA2  F009         	goto	l1321
  2299   0013B0  0A0C               	xorlw	12	; case 72
  2300   0013B2  B4D8               	btfsc	status,2,c
  2301   0013B4  EFA6  F009         	goto	l1327
  2302   0013B8  EFDE  F009         	goto	l1337
  2303   0013BC                     l1337:
  2304   0013BC  FFFF               	dw	65535	; assembler added errata NOP
  2305                           
  2306                           ;keypad.c: 93:     return 0;
  2307   0013BE  0E00               	movlw	0
  2308   0013C0                     l244:
  2309   0013C0  FFFF               	dw	65535	; assembler added errata NOP
  2310   0013C2  0012               	return		;funcret
  2311   0013C4  FFFF               	dw	65535	; errata NOP
  2312   0013C6                     __end_of_keypad_value:
  2313                           	callstack 0
  2314                           
  2315 ;; *************** function _keypad_line_scan *****************
  2316 ;; Defined at:
  2317 ;;		line 41 in file "keypad.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;		None
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2331 ;;      Params:         0       0       0       0       0       0       0
  2332 ;;      Locals:         0       0       0       0       0       0       0
  2333 ;;      Temps:          0       0       0       0       0       0       0
  2334 ;;      Totals:         0       0       0       0       0       0       0
  2335 ;;Total ram usage:        0 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; Hardware stack levels required when called: 1
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_keypad_read
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text12
  2346   001A06                     __ptext12:
  2347                           	callstack 0
  2348   001A06                     _keypad_line_scan:
  2349                           	callstack 0
  2350   001A06  FFFF               	dw	65535	; assembler added errata NOP
  2351   001A08                     
  2352                           ;keypad.c: 42:     static uint8_t keypadScan = 0x01;;keypad.c: 43:     keypadScan =( key
      +                          padScan <<1);
  2353   001A08  5029               	movf	keypad_line_scan@keypadScan^0,w,c
  2354   001A0A  2429               	addwf	keypad_line_scan@keypadScan^0,w,c
  2355   001A0C  6E29               	movwf	keypad_line_scan@keypadScan^0,c
  2356                           
  2357                           ;keypad.c: 44:     if( keypadScan > 0x08){
  2358   001A0E  0E08               	movlw	8
  2359   001A10  6429               	cpfsgt	keypad_line_scan@keypadScan^0,c
  2360   001A12  EF0D  F00D         	goto	u361
  2361   001A16  EF10  F00D         	goto	u360
  2362   001A1A                     u361:
  2363   001A1A  FFFF               	dw	65535	; assembler added errata NOP
  2364   001A1C  EF13  F00D         	goto	l1257
  2365   001A20                     u360:
  2366   001A20  FFFF               	dw	65535	; assembler added errata NOP
  2367   001A22                     
  2368                           ;keypad.c: 45:         keypadScan = 0x01;
  2369   001A22  0E01               	movlw	1
  2370   001A24  6E29               	movwf	keypad_line_scan@keypadScan^0,c
  2371   001A26                     l1257:
  2372   001A26  FFFF               	dw	65535	; assembler added errata NOP
  2373                           
  2374                           ;keypad.c: 47:     PORTC = keypadScan;
  2375   001A28  C029  FF82         	movff	keypad_line_scan@keypadScan,3970	;volatile
  2376   001A2C  0012               	return		;funcret
  2377   001A2E  FFFF               	dw	65535	; errata NOP
  2378   001A30                     __end_of_keypad_line_scan:
  2379                           	callstack 0
  2380                           
  2381 ;; *************** function _keypad_init *****************
  2382 ;; Defined at:
  2383 ;;		line 12 in file "keypad.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;		None
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;		None
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, status,2, status,0, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2397 ;;      Params:         0       0       0       0       0       0       0
  2398 ;;      Locals:         0       0       0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0
  2400 ;;      Totals:         0       0       0       0       0       0       0
  2401 ;;Total ram usage:        0 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 2
  2404 ;; This function calls:
  2405 ;;		_DIO_SetPinDirection
  2406 ;; This function is called by:
  2407 ;;		_main
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text13
  2412   00185E                     __ptext13:
  2413                           	callstack 0
  2414   00185E                     _keypad_init:
  2415                           	callstack 0
  2416   00185E  FFFF               	dw	65535	; assembler added errata NOP
  2417   001860                     
  2418                           ;keypad.c: 14:   DIO_SetPinDirection(PORT_C,0,OUTPUT);
  2419   001860  0E00               	movlw	0
  2420   001862  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2421   001864  0E01               	movlw	1
  2422   001866  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2423   001868  0E02               	movlw	2
  2424   00186A  EC1A  F006         	call	_DIO_SetPinDirection
  2425                           
  2426                           ;keypad.c: 17:   DIO_SetPinDirection(PORT_C,1,OUTPUT);
  2427   00186E  0E01               	movlw	1
  2428   001870  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2429   001872  0E01               	movlw	1
  2430   001874  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2431   001876  0E02               	movlw	2
  2432   001878  EC1A  F006         	call	_DIO_SetPinDirection
  2433                           
  2434                           ;keypad.c: 20:   DIO_SetPinDirection(PORT_C,2,OUTPUT);
  2435   00187C  0E02               	movlw	2
  2436   00187E  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2437   001880  0E01               	movlw	1
  2438   001882  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2439   001884  0E02               	movlw	2
  2440   001886  EC1A  F006         	call	_DIO_SetPinDirection
  2441                           
  2442                           ;keypad.c: 23:   DIO_SetPinDirection(PORT_C,3,OUTPUT);
  2443   00188A  0E03               	movlw	3
  2444   00188C  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2445   00188E  0E01               	movlw	1
  2446   001890  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2447   001892  0E02               	movlw	2
  2448   001894  EC1A  F006         	call	_DIO_SetPinDirection
  2449                           
  2450                           ;keypad.c: 27:   DIO_SetPinDirection(PORT_C,4,INPUT);
  2451   001898  0E04               	movlw	4
  2452   00189A  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2453   00189C  0E00               	movlw	0
  2454   00189E  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2455   0018A0  0E02               	movlw	2
  2456   0018A2  EC1A  F006         	call	_DIO_SetPinDirection
  2457                           
  2458                           ;keypad.c: 31:   DIO_SetPinDirection(PORT_C,5,INPUT);
  2459   0018A6  0E05               	movlw	5
  2460   0018A8  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2461   0018AA  0E00               	movlw	0
  2462   0018AC  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2463   0018AE  0E02               	movlw	2
  2464   0018B0  EC1A  F006         	call	_DIO_SetPinDirection
  2465                           
  2466                           ;keypad.c: 35:   DIO_SetPinDirection(PORT_C,6,INPUT);
  2467   0018B4  0E06               	movlw	6
  2468   0018B6  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2469   0018B8  0E00               	movlw	0
  2470   0018BA  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2471   0018BC  0E02               	movlw	2
  2472   0018BE  EC1A  F006         	call	_DIO_SetPinDirection
  2473   0018C2  0012               	return		;funcret
  2474   0018C4  FFFF               	dw	65535	; errata NOP
  2475   0018C6                     __end_of_keypad_init:
  2476                           	callstack 0
  2477                           
  2478 ;; *************** function _buzzer_on *****************
  2479 ;; Defined at:
  2480 ;;		line 12 in file "buzzer.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  port            1    wreg     enum E2181
  2483 ;;  pinNo           1    5[COMRAM] unsigned char 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  port            1    6[COMRAM] enum E2181
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, status,2, status,0, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2495 ;;      Params:         1       0       0       0       0       0       0
  2496 ;;      Locals:         1       0       0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0
  2498 ;;      Totals:         2       0       0       0       0       0       0
  2499 ;;Total ram usage:        2 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; Hardware stack levels required when called: 2
  2502 ;; This function calls:
  2503 ;;		_DIO_SetPinValue
  2504 ;; This function is called by:
  2505 ;;		_main
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text14
  2510   001AA2                     __ptext14:
  2511                           	callstack 0
  2512   001AA2                     _buzzer_on:
  2513                           	callstack 0
  2514   001AA2  FFFF               	dw	65535	; assembler added errata NOP
  2515                           
  2516                           ;incstack = 0
  2517                           ;buzzer_on@port stored from wreg
  2518   001AA4  6E07               	movwf	buzzer_on@port^0,c
  2519   001AA6                     
  2520                           ;buzzer.c: 13:     DIO_SetPinValue(port,pinNo,HIGH);
  2521   001AA6  C006  F001         	movff	buzzer_on@pinNo,DIO_SetPinValue@pinNo
  2522   001AAA  0E01               	movlw	1
  2523   001AAC  6E02               	movwf	DIO_SetPinValue@value^0,c
  2524   001AAE  5007               	movf	buzzer_on@port^0,w,c
  2525   001AB0  EC39  F007         	call	_DIO_SetPinValue
  2526   001AB4  0012               	return		;funcret
  2527   001AB6  FFFF               	dw	65535	; errata NOP
  2528   001AB8                     __end_of_buzzer_on:
  2529                           	callstack 0
  2530                           
  2531 ;; *************** function _buzzer_off *****************
  2532 ;; Defined at:
  2533 ;;		line 15 in file "buzzer.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  port            1    wreg     enum E2181
  2536 ;;  pinNo           1    5[COMRAM] unsigned char 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  port            1    6[COMRAM] enum E2181
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0, cstack
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2548 ;;      Params:         1       0       0       0       0       0       0
  2549 ;;      Locals:         1       0       0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0       0       0
  2551 ;;      Totals:         2       0       0       0       0       0       0
  2552 ;;Total ram usage:        2 bytes
  2553 ;; Hardware stack levels used: 1
  2554 ;; Hardware stack levels required when called: 2
  2555 ;; This function calls:
  2556 ;;		_DIO_SetPinValue
  2557 ;; This function is called by:
  2558 ;;		_main
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text15
  2563   001AB8                     __ptext15:
  2564                           	callstack 0
  2565   001AB8                     _buzzer_off:
  2566                           	callstack 0
  2567   001AB8  FFFF               	dw	65535	; assembler added errata NOP
  2568                           
  2569                           ;incstack = 0
  2570                           ;buzzer_off@port stored from wreg
  2571   001ABA  6E07               	movwf	buzzer_off@port^0,c
  2572   001ABC                     
  2573                           ;buzzer.c: 16:     DIO_SetPinValue(port,pinNo,LOW);
  2574   001ABC  C006  F001         	movff	buzzer_off@pinNo,DIO_SetPinValue@pinNo
  2575   001AC0  0E00               	movlw	0
  2576   001AC2  6E02               	movwf	DIO_SetPinValue@value^0,c
  2577   001AC4  5007               	movf	buzzer_off@port^0,w,c
  2578   001AC6  EC39  F007         	call	_DIO_SetPinValue
  2579   001ACA  0012               	return		;funcret
  2580   001ACC  FFFF               	dw	65535	; errata NOP
  2581   001ACE                     __end_of_buzzer_off:
  2582                           	callstack 0
  2583                           
  2584 ;; *************** function _buzzer_init *****************
  2585 ;; Defined at:
  2586 ;;		line 9 in file "buzzer.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  port            1    wreg     enum E2181
  2589 ;;  pinNo           1    5[COMRAM] unsigned char 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  port            1    6[COMRAM] enum E2181
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2601 ;;      Params:         1       0       0       0       0       0       0
  2602 ;;      Locals:         1       0       0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0
  2604 ;;      Totals:         2       0       0       0       0       0       0
  2605 ;;Total ram usage:        2 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 2
  2608 ;; This function calls:
  2609 ;;		_DIO_SetPinDirection
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text16
  2616   001ACE                     __ptext16:
  2617                           	callstack 0
  2618   001ACE                     _buzzer_init:
  2619                           	callstack 0
  2620   001ACE  FFFF               	dw	65535	; assembler added errata NOP
  2621                           
  2622                           ;incstack = 0
  2623                           ;buzzer_init@port stored from wreg
  2624   001AD0  6E07               	movwf	buzzer_init@port^0,c
  2625   001AD2                     
  2626                           ;buzzer.c: 10:     DIO_SetPinDirection(port,pinNo,OUTPUT);
  2627   001AD2  C006  F001         	movff	buzzer_init@pinNo,DIO_SetPinDirection@pinNo
  2628   001AD6  0E01               	movlw	1
  2629   001AD8  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2630   001ADA  5007               	movf	buzzer_init@port^0,w,c
  2631   001ADC  EC1A  F006         	call	_DIO_SetPinDirection
  2632   001AE0  0012               	return		;funcret
  2633   001AE2  FFFF               	dw	65535	; errata NOP
  2634   001AE4                     __end_of_buzzer_init:
  2635                           	callstack 0
  2636                           
  2637 ;; *************** function _button_init *****************
  2638 ;; Defined at:
  2639 ;;		line 8 in file "button.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;  port            1    wreg     enum E2181
  2642 ;;  pinNo           1    5[COMRAM] unsigned char 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  port            1    6[COMRAM] enum E2181
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2654 ;;      Params:         1       0       0       0       0       0       0
  2655 ;;      Locals:         1       0       0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0
  2657 ;;      Totals:         2       0       0       0       0       0       0
  2658 ;;Total ram usage:        2 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 2
  2661 ;; This function calls:
  2662 ;;		_DIO_SetPinDirection
  2663 ;; This function is called by:
  2664 ;;		_main
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text17
  2669   001AE4                     __ptext17:
  2670                           	callstack 0
  2671   001AE4                     _button_init:
  2672                           	callstack 0
  2673   001AE4  FFFF               	dw	65535	; assembler added errata NOP
  2674                           
  2675                           ;incstack = 0
  2676                           ;button_init@port stored from wreg
  2677   001AE6  6E07               	movwf	button_init@port^0,c
  2678   001AE8                     
  2679                           ;button.c: 9:     DIO_SetPinDirection(port,pinNo,INPUT);
  2680   001AE8  C006  F001         	movff	button_init@pinNo,DIO_SetPinDirection@pinNo
  2681   001AEC  0E00               	movlw	0
  2682   001AEE  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2683   001AF0  5007               	movf	button_init@port^0,w,c
  2684   001AF2  EC1A  F006         	call	_DIO_SetPinDirection
  2685   001AF6  0012               	return		;funcret
  2686   001AF8  FFFF               	dw	65535	; errata NOP
  2687   001AFA                     __end_of_button_init:
  2688                           	callstack 0
  2689                           
  2690 ;; *************** function _button_getState *****************
  2691 ;; Defined at:
  2692 ;;		line 11 in file "button.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  port            1    wreg     enum E2181
  2695 ;;  pinNo           1    5[COMRAM] unsigned char 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  port            1    6[COMRAM] enum E2181
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      unsigned char 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0, cstack
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2707 ;;      Params:         1       0       0       0       0       0       0
  2708 ;;      Locals:         1       0       0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0       0       0
  2710 ;;      Totals:         2       0       0       0       0       0       0
  2711 ;;Total ram usage:        2 bytes
  2712 ;; Hardware stack levels used: 1
  2713 ;; Hardware stack levels required when called: 2
  2714 ;; This function calls:
  2715 ;;		_DIO_GetPinValue
  2716 ;; This function is called by:
  2717 ;;		_main
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           	psect	text18
  2722   001B22                     __ptext18:
  2723                           	callstack 0
  2724   001B22                     _button_getState:
  2725                           	callstack 0
  2726   001B22  FFFF               	dw	65535	; assembler added errata NOP
  2727                           
  2728                           ;incstack = 0
  2729                           ;button_getState@port stored from wreg
  2730   001B24  6E07               	movwf	button_getState@port^0,c
  2731   001B26                     
  2732                           ;button.c: 12:     return DIO_GetPinValue(port,pinNo);
  2733   001B26  C006  F001         	movff	button_getState@pinNo,DIO_GetPinValue@pinNo
  2734   001B2A  5007               	movf	button_getState@port^0,w,c
  2735   001B2C  EC58  F008         	call	_DIO_GetPinValue
  2736   001B30  0012               	return		;funcret
  2737   001B32  FFFF               	dw	65535	; errata NOP
  2738   001B34                     __end_of_button_getState:
  2739                           	callstack 0
  2740                           
  2741 ;; *************** function _DIO_GetPinValue *****************
  2742 ;; Defined at:
  2743 ;;		line 106 in file "gpio.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  portName        1    wreg     enum E2181
  2746 ;;  pinNo           1    0[COMRAM] unsigned char 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  portName        1    3[COMRAM] enum E2181
  2749 ;;  flush           1    4[COMRAM] unsigned char 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      unsigned char 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2759 ;;      Params:         1       0       0       0       0       0       0
  2760 ;;      Locals:         2       0       0       0       0       0       0
  2761 ;;      Temps:          2       0       0       0       0       0       0
  2762 ;;      Totals:         5       0       0       0       0       0       0
  2763 ;;Total ram usage:        5 bytes
  2764 ;; Hardware stack levels used: 1
  2765 ;; Hardware stack levels required when called: 1
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		_button_getState
  2770 ;;		_pir_getState
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text19
  2775   0010B0                     __ptext19:
  2776                           	callstack 0
  2777   0010B0                     _DIO_GetPinValue:
  2778                           	callstack 0
  2779   0010B0  FFFF               	dw	65535	; assembler added errata NOP
  2780                           
  2781                           ;incstack = 0
  2782                           ;DIO_GetPinValue@portName stored from wreg
  2783   0010B2  6E04               	movwf	DIO_GetPinValue@portName^0,c
  2784   0010B4                     
  2785                           ;gpio.c: 107:     uint8_t flush = PORTA;
  2786   0010B4  CF80 F005          	movff	3968,DIO_GetPinValue@flush	;volatile
  2787                           
  2788                           ;gpio.c: 108:     flush = PORTB;
  2789   0010B8  CF81 F005          	movff	3969,DIO_GetPinValue@flush	;volatile
  2790                           
  2791                           ;gpio.c: 109:     flush = PORTC;
  2792   0010BC  CF82 F005          	movff	3970,DIO_GetPinValue@flush	;volatile
  2793                           
  2794                           ;gpio.c: 110:     flush = PORTD;
  2795   0010C0  CF83 F005          	movff	3971,DIO_GetPinValue@flush	;volatile
  2796                           
  2797                           ;gpio.c: 111:     flush = PORTE;
  2798   0010C4  CF84 F005          	movff	3972,DIO_GetPinValue@flush	;volatile
  2799                           
  2800                           ;gpio.c: 112:     switch (portName){
  2801   0010C8  EFC5  F008         	goto	l1861
  2802   0010CC                     l1829:
  2803   0010CC  FFFF               	dw	65535	; assembler added errata NOP
  2804                           
  2805                           ;gpio.c: 114:             return (((PORTA)>>(pinNo)) & 1);
  2806   0010CE  C001  F002         	movff	DIO_GetPinValue@pinNo,??_DIO_GetPinValue
  2807   0010D2  CF80 F003          	movff	3968,??_DIO_GetPinValue+1	;volatile
  2808   0010D6  2A02               	incf	??_DIO_GetPinValue^0,f,c
  2809   0010D8  EF71  F008         	goto	u1114
  2810   0010DC                     u1115:
  2811   0010DC  FFFF               	dw	65535	; assembler added errata NOP
  2812   0010DE  90D8               	bcf	status,0,c
  2813   0010E0  3203               	rrcf	(??_DIO_GetPinValue+1)^0,f,c
  2814   0010E2                     u1114:
  2815   0010E2  FFFF               	dw	65535	; assembler added errata NOP
  2816   0010E4  2E02               	decfsz	??_DIO_GetPinValue^0,f,c
  2817   0010E6  EF6E  F008         	goto	u1115
  2818   0010EA  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2819   0010EC  0B01               	andlw	1
  2820   0010EE  EFEA  F008         	goto	l191
  2821   0010F2                     l1835:
  2822   0010F2  FFFF               	dw	65535	; assembler added errata NOP
  2823                           
  2824                           ;gpio.c: 117:             return (((PORTB)>>(pinNo)) & 1);
  2825   0010F4  C001  F002         	movff	DIO_GetPinValue@pinNo,??_DIO_GetPinValue
  2826   0010F8  CF81 F003          	movff	3969,??_DIO_GetPinValue+1	;volatile
  2827   0010FC  2A02               	incf	??_DIO_GetPinValue^0,f,c
  2828   0010FE  EF84  F008         	goto	u1124
  2829   001102                     u1125:
  2830   001102  FFFF               	dw	65535	; assembler added errata NOP
  2831   001104  90D8               	bcf	status,0,c
  2832   001106  3203               	rrcf	(??_DIO_GetPinValue+1)^0,f,c
  2833   001108                     u1124:
  2834   001108  FFFF               	dw	65535	; assembler added errata NOP
  2835   00110A  2E02               	decfsz	??_DIO_GetPinValue^0,f,c
  2836   00110C  EF81  F008         	goto	u1125
  2837   001110  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2838   001112  0B01               	andlw	1
  2839   001114  EFEA  F008         	goto	l191
  2840   001118                     l1841:
  2841   001118  FFFF               	dw	65535	; assembler added errata NOP
  2842                           
  2843                           ;gpio.c: 120:             return (((PORTC)>>(pinNo)) & 1);
  2844   00111A  C001  F002         	movff	DIO_GetPinValue@pinNo,??_DIO_GetPinValue
  2845   00111E  CF82 F003          	movff	3970,??_DIO_GetPinValue+1	;volatile
  2846   001122  2A02               	incf	??_DIO_GetPinValue^0,f,c
  2847   001124  EF97  F008         	goto	u1134
  2848   001128                     u1135:
  2849   001128  FFFF               	dw	65535	; assembler added errata NOP
  2850   00112A  90D8               	bcf	status,0,c
  2851   00112C  3203               	rrcf	(??_DIO_GetPinValue+1)^0,f,c
  2852   00112E                     u1134:
  2853   00112E  FFFF               	dw	65535	; assembler added errata NOP
  2854   001130  2E02               	decfsz	??_DIO_GetPinValue^0,f,c
  2855   001132  EF94  F008         	goto	u1135
  2856   001136  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2857   001138  0B01               	andlw	1
  2858   00113A  EFEA  F008         	goto	l191
  2859   00113E                     l1847:
  2860   00113E  FFFF               	dw	65535	; assembler added errata NOP
  2861                           
  2862                           ;gpio.c: 123:             return (((PORTD)>>(pinNo)) & 1);
  2863   001140  C001  F002         	movff	DIO_GetPinValue@pinNo,??_DIO_GetPinValue
  2864   001144  CF83 F003          	movff	3971,??_DIO_GetPinValue+1	;volatile
  2865   001148  2A02               	incf	??_DIO_GetPinValue^0,f,c
  2866   00114A  EFAA  F008         	goto	u1144
  2867   00114E                     u1145:
  2868   00114E  FFFF               	dw	65535	; assembler added errata NOP
  2869   001150  90D8               	bcf	status,0,c
  2870   001152  3203               	rrcf	(??_DIO_GetPinValue+1)^0,f,c
  2871   001154                     u1144:
  2872   001154  FFFF               	dw	65535	; assembler added errata NOP
  2873   001156  2E02               	decfsz	??_DIO_GetPinValue^0,f,c
  2874   001158  EFA7  F008         	goto	u1145
  2875   00115C  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2876   00115E  0B01               	andlw	1
  2877   001160  EFEA  F008         	goto	l191
  2878   001164                     l1853:
  2879   001164  FFFF               	dw	65535	; assembler added errata NOP
  2880                           
  2881                           ;gpio.c: 126:             return (((PORTE)>>(pinNo)) & 1);
  2882   001166  C001  F002         	movff	DIO_GetPinValue@pinNo,??_DIO_GetPinValue
  2883   00116A  CF84 F003          	movff	3972,??_DIO_GetPinValue+1	;volatile
  2884   00116E  2A02               	incf	??_DIO_GetPinValue^0,f,c
  2885   001170  EFBD  F008         	goto	u1154
  2886   001174                     u1155:
  2887   001174  FFFF               	dw	65535	; assembler added errata NOP
  2888   001176  90D8               	bcf	status,0,c
  2889   001178  3203               	rrcf	(??_DIO_GetPinValue+1)^0,f,c
  2890   00117A                     u1154:
  2891   00117A  FFFF               	dw	65535	; assembler added errata NOP
  2892   00117C  2E02               	decfsz	??_DIO_GetPinValue^0,f,c
  2893   00117E  EFBA  F008         	goto	u1155
  2894   001182  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2895   001184  0B01               	andlw	1
  2896   001186  EFEA  F008         	goto	l191
  2897   00118A                     l1861:
  2898   00118A  FFFF               	dw	65535	; assembler added errata NOP
  2899   00118C  5004               	movf	DIO_GetPinValue@portName^0,w,c
  2900   00118E  6E02               	movwf	??_DIO_GetPinValue^0,c
  2901   001190  6A03               	clrf	(??_DIO_GetPinValue+1)^0,c
  2902                           
  2903                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2904                           ; Switch size 1, requested type "simple"
  2905                           ; Number of cases is 1, Range of values is 0 to 0
  2906                           ; switch strategies available:
  2907                           ; Name         Instructions Cycles
  2908                           ; simple_byte            4     3 (average)
  2909                           ;	Chosen strategy is simple_byte
  2910   001192  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2911   001194  0A00               	xorlw	0	; case 0
  2912   001196  B4D8               	btfsc	status,2,c
  2913   001198  EFD0  F008         	goto	l2179
  2914   00119C  EFE8  F008         	goto	l1863
  2915   0011A0                     l2179:
  2916   0011A0  FFFF               	dw	65535	; assembler added errata NOP
  2917                           
  2918                           ; Switch size 1, requested type "simple"
  2919                           ; Number of cases is 5, Range of values is 0 to 4
  2920                           ; switch strategies available:
  2921                           ; Name         Instructions Cycles
  2922                           ; simple_byte           16     9 (average)
  2923                           ;	Chosen strategy is simple_byte
  2924   0011A2  5002               	movf	??_DIO_GetPinValue^0,w,c
  2925   0011A4  0A00               	xorlw	0	; case 0
  2926   0011A6  B4D8               	btfsc	status,2,c
  2927   0011A8  EF66  F008         	goto	l1829
  2928   0011AC  0A01               	xorlw	1	; case 1
  2929   0011AE  B4D8               	btfsc	status,2,c
  2930   0011B0  EF79  F008         	goto	l1835
  2931   0011B4  0A03               	xorlw	3	; case 2
  2932   0011B6  B4D8               	btfsc	status,2,c
  2933   0011B8  EF8C  F008         	goto	l1841
  2934   0011BC  0A01               	xorlw	1	; case 3
  2935   0011BE  B4D8               	btfsc	status,2,c
  2936   0011C0  EF9F  F008         	goto	l1847
  2937   0011C4  0A07               	xorlw	7	; case 4
  2938   0011C6  B4D8               	btfsc	status,2,c
  2939   0011C8  EFB2  F008         	goto	l1853
  2940   0011CC  EFE8  F008         	goto	l1863
  2941   0011D0                     l1863:
  2942   0011D0  FFFF               	dw	65535	; assembler added errata NOP
  2943                           
  2944                           ;gpio.c: 129:     return 1;
  2945   0011D2  0E01               	movlw	1
  2946   0011D4                     l191:
  2947   0011D4  FFFF               	dw	65535	; assembler added errata NOP
  2948   0011D6  0012               	return		;funcret
  2949   0011D8  FFFF               	dw	65535	; errata NOP
  2950   0011DA                     __end_of_DIO_GetPinValue:
  2951                           	callstack 0
  2952                           
  2953 ;; *************** function _Timer0_init *****************
  2954 ;; Defined at:
  2955 ;;		line 47 in file "main.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2969 ;;      Params:         0       0       0       0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0
  2972 ;;      Totals:         0       0       0       0       0       0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used: 1
  2975 ;; Hardware stack levels required when called: 1
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_main
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text20
  2984   001AFA                     __ptext20:
  2985                           	callstack 0
  2986   001AFA                     _Timer0_init:
  2987                           	callstack 0
  2988   001AFA  FFFF               	dw	65535	; assembler added errata NOP
  2989   001AFC                     
  2990                           ;main.c: 48:     T0CON = 0X87;
  2991   001AFC  0E87               	movlw	135
  2992   001AFE  6ED5               	movwf	213,c	;volatile
  2993                           
  2994                           ;main.c: 49:     TMR0H = 0xF0;
  2995   001B00  0EF0               	movlw	240
  2996   001B02  6ED7               	movwf	215,c	;volatile
  2997                           
  2998                           ;main.c: 50:     TMR0L = 0xBD;
  2999   001B04  0EBD               	movlw	189
  3000   001B06  6ED6               	movwf	214,c	;volatile
  3001   001B08                     
  3002                           ;main.c: 51:     TMR0IE = 1;
  3003   001B08  8AF2               	bsf	4082,5,c	;volatile
  3004   001B0A                     
  3005                           ;main.c: 52:     GIE =1;
  3006   001B0A  8EF2               	bsf	4082,7,c	;volatile
  3007   001B0C  0012               	return		;funcret
  3008   001B0E  FFFF               	dw	65535	; errata NOP
  3009   001B10                     __end_of_Timer0_init:
  3010                           	callstack 0
  3011                           
  3012 ;; *************** function _LCD_init *****************
  3013 ;; Defined at:
  3014 ;;		line 14 in file "lcd.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;		None
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, status,2, status,0, cstack
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3028 ;;      Params:         0       0       0       0       0       0       0
  3029 ;;      Locals:         0       0       0       0       0       0       0
  3030 ;;      Temps:          0       0       0       0       0       0       0
  3031 ;;      Totals:         0       0       0       0       0       0       0
  3032 ;;Total ram usage:        0 bytes
  3033 ;; Hardware stack levels used: 1
  3034 ;; Hardware stack levels required when called: 3
  3035 ;; This function calls:
  3036 ;;		_DIO_SetPinDirection
  3037 ;;		_DIO_SetPortValue
  3038 ;;		_LCD_sendCommand
  3039 ;; This function is called by:
  3040 ;;		_main
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text21
  3045   0015E4                     __ptext21:
  3046                           	callstack 0
  3047   0015E4                     _LCD_init:
  3048                           	callstack 0
  3049   0015E4  FFFF               	dw	65535	; assembler added errata NOP
  3050   0015E6                     
  3051                           ;lcd.c: 17:  DIO_SetPinDirection( PORT_D,3, OUTPUT);
  3052   0015E6  0E03               	movlw	3
  3053   0015E8  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3054   0015EA  0E01               	movlw	1
  3055   0015EC  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3056   0015EE  0E03               	movlw	3
  3057   0015F0  EC1A  F006         	call	_DIO_SetPinDirection
  3058                           
  3059                           ;lcd.c: 18:  DIO_SetPinDirection( PORT_D,1, OUTPUT);
  3060   0015F4  0E01               	movlw	1
  3061   0015F6  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3062   0015F8  0E01               	movlw	1
  3063   0015FA  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3064   0015FC  0E03               	movlw	3
  3065   0015FE  EC1A  F006         	call	_DIO_SetPinDirection
  3066                           
  3067                           ;lcd.c: 19:  DIO_SetPinDirection( PORT_D,2, OUTPUT);
  3068   001602  0E02               	movlw	2
  3069   001604  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3070   001606  0E01               	movlw	1
  3071   001608  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3072   00160A  0E03               	movlw	3
  3073   00160C  EC1A  F006         	call	_DIO_SetPinDirection
  3074                           
  3075                           ;lcd.c: 21:  DIO_SetPortValue(PORT_D, 0x00);
  3076   001610  0E00               	movlw	0
  3077   001612  6E01               	movwf	DIO_SetPortValue@value^0,c
  3078   001614  0E03               	movlw	3
  3079   001616  EC3C  F00B         	call	_DIO_SetPortValue
  3080                           
  3081                           ;lcd.c: 22:  DIO_SetPortValue(PORT_D, 0x00);
  3082   00161A  0E00               	movlw	0
  3083   00161C  6E01               	movwf	DIO_SetPortValue@value^0,c
  3084   00161E  0E03               	movlw	3
  3085   001620  EC3C  F00B         	call	_DIO_SetPortValue
  3086                           
  3087                           ;lcd.c: 25:     DIO_SetPinDirection(PORT_D, 4, OUTPUT);
  3088   001624  0E04               	movlw	4
  3089   001626  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3090   001628  0E01               	movlw	1
  3091   00162A  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3092   00162C  0E03               	movlw	3
  3093   00162E  EC1A  F006         	call	_DIO_SetPinDirection
  3094                           
  3095                           ;lcd.c: 26:     DIO_SetPinDirection(PORT_D, 5, OUTPUT);
  3096   001632  0E05               	movlw	5
  3097   001634  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3098   001636  0E01               	movlw	1
  3099   001638  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3100   00163A  0E03               	movlw	3
  3101   00163C  EC1A  F006         	call	_DIO_SetPinDirection
  3102                           
  3103                           ;lcd.c: 27:     DIO_SetPinDirection(PORT_D, 6, OUTPUT);
  3104   001640  0E06               	movlw	6
  3105   001642  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3106   001644  0E01               	movlw	1
  3107   001646  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3108   001648  0E03               	movlw	3
  3109   00164A  EC1A  F006         	call	_DIO_SetPinDirection
  3110                           
  3111                           ;lcd.c: 28:     DIO_SetPinDirection(PORT_D, 7, OUTPUT);
  3112   00164E  0E07               	movlw	7
  3113   001650  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3114   001652  0E01               	movlw	1
  3115   001654  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3116   001656  0E03               	movlw	3
  3117   001658  EC1A  F006         	call	_DIO_SetPinDirection
  3118                           
  3119                           ;lcd.c: 30:  LCD_sendCommand(0x02);
  3120   00165C  0E02               	movlw	2
  3121   00165E  EC44  F00A         	call	_LCD_sendCommand
  3122                           
  3123                           ;lcd.c: 31:  LCD_sendCommand(0x28);
  3124   001662  0E28               	movlw	40
  3125   001664  EC44  F00A         	call	_LCD_sendCommand
  3126                           
  3127                           ;lcd.c: 34:  LCD_sendCommand(0x0C);
  3128   001668  0E0C               	movlw	12
  3129   00166A  EC44  F00A         	call	_LCD_sendCommand
  3130                           
  3131                           ;lcd.c: 35:  LCD_sendCommand(0x01);
  3132   00166E  0E01               	movlw	1
  3133   001670  EC44  F00A         	call	_LCD_sendCommand
  3134   001674  0012               	return		;funcret
  3135   001676  FFFF               	dw	65535	; errata NOP
  3136   001678                     __end_of_LCD_init:
  3137                           	callstack 0
  3138                           
  3139 ;; *************** function _DIO_SetPortValue *****************
  3140 ;; Defined at:
  3141 ;;		line 132 in file "gpio.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;  portName        1    wreg     enum E2181
  3144 ;;  value           1    0[COMRAM] unsigned char 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;  portName        1    3[COMRAM] enum E2181
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3156 ;;      Params:         1       0       0       0       0       0       0
  3157 ;;      Locals:         1       0       0       0       0       0       0
  3158 ;;      Temps:          2       0       0       0       0       0       0
  3159 ;;      Totals:         4       0       0       0       0       0       0
  3160 ;;Total ram usage:        4 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 1
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_LCD_init
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text22
  3171   001678                     __ptext22:
  3172                           	callstack 0
  3173   001678                     _DIO_SetPortValue:
  3174                           	callstack 0
  3175   001678  FFFF               	dw	65535	; assembler added errata NOP
  3176                           
  3177                           ;incstack = 0
  3178                           ;DIO_SetPortValue@portName stored from wreg
  3179   00167A  6E04               	movwf	DIO_SetPortValue@portName^0,c
  3180   00167C                     
  3181                           ;gpio.c: 133:     switch (portName){
  3182   00167C  EF59  F00B         	goto	l1875
  3183   001680                     l200:
  3184   001680  FFFF               	dw	65535	; assembler added errata NOP
  3185                           
  3186                           ;gpio.c: 135:              PORTA = value;
  3187   001682  C001  FF80         	movff	DIO_SetPortValue@value,3968	;volatile
  3188                           
  3189                           ;gpio.c: 136:         break;
  3190   001686  EF7C  F00B         	goto	l206
  3191   00168A                     l202:
  3192   00168A  FFFF               	dw	65535	; assembler added errata NOP
  3193                           
  3194                           ;gpio.c: 138:              PORTB = value;
  3195   00168C  C001  FF81         	movff	DIO_SetPortValue@value,3969	;volatile
  3196                           
  3197                           ;gpio.c: 139:         break;
  3198   001690  EF7C  F00B         	goto	l206
  3199   001694                     l203:
  3200   001694  FFFF               	dw	65535	; assembler added errata NOP
  3201                           
  3202                           ;gpio.c: 141:              PORTC = value;
  3203   001696  C001  FF82         	movff	DIO_SetPortValue@value,3970	;volatile
  3204                           
  3205                           ;gpio.c: 142:         break;
  3206   00169A  EF7C  F00B         	goto	l206
  3207   00169E                     l204:
  3208   00169E  FFFF               	dw	65535	; assembler added errata NOP
  3209                           
  3210                           ;gpio.c: 144:              PORTD = value;
  3211   0016A0  C001  FF83         	movff	DIO_SetPortValue@value,3971	;volatile
  3212                           
  3213                           ;gpio.c: 145:         break;
  3214   0016A4  EF7C  F00B         	goto	l206
  3215   0016A8                     l205:
  3216   0016A8  FFFF               	dw	65535	; assembler added errata NOP
  3217                           
  3218                           ;gpio.c: 147:              PORTE = value;
  3219   0016AA  C001  FF84         	movff	DIO_SetPortValue@value,3972	;volatile
  3220                           
  3221                           ;gpio.c: 148:         break;
  3222   0016AE  EF7C  F00B         	goto	l206
  3223   0016B2                     l1875:
  3224   0016B2  FFFF               	dw	65535	; assembler added errata NOP
  3225   0016B4  5004               	movf	DIO_SetPortValue@portName^0,w,c
  3226   0016B6  6E02               	movwf	??_DIO_SetPortValue^0,c
  3227   0016B8  6A03               	clrf	(??_DIO_SetPortValue+1)^0,c
  3228                           
  3229                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3230                           ; Switch size 1, requested type "simple"
  3231                           ; Number of cases is 1, Range of values is 0 to 0
  3232                           ; switch strategies available:
  3233                           ; Name         Instructions Cycles
  3234                           ; simple_byte            4     3 (average)
  3235                           ;	Chosen strategy is simple_byte
  3236   0016BA  5003               	movf	(??_DIO_SetPortValue+1)^0,w,c
  3237   0016BC  0A00               	xorlw	0	; case 0
  3238   0016BE  B4D8               	btfsc	status,2,c
  3239   0016C0  EF64  F00B         	goto	l2181
  3240   0016C4  EF7C  F00B         	goto	l206
  3241   0016C8                     l2181:
  3242   0016C8  FFFF               	dw	65535	; assembler added errata NOP
  3243                           
  3244                           ; Switch size 1, requested type "simple"
  3245                           ; Number of cases is 5, Range of values is 0 to 4
  3246                           ; switch strategies available:
  3247                           ; Name         Instructions Cycles
  3248                           ; simple_byte           16     9 (average)
  3249                           ;	Chosen strategy is simple_byte
  3250   0016CA  5002               	movf	??_DIO_SetPortValue^0,w,c
  3251   0016CC  0A00               	xorlw	0	; case 0
  3252   0016CE  B4D8               	btfsc	status,2,c
  3253   0016D0  EF40  F00B         	goto	l200
  3254   0016D4  0A01               	xorlw	1	; case 1
  3255   0016D6  B4D8               	btfsc	status,2,c
  3256   0016D8  EF45  F00B         	goto	l202
  3257   0016DC  0A03               	xorlw	3	; case 2
  3258   0016DE  B4D8               	btfsc	status,2,c
  3259   0016E0  EF4A  F00B         	goto	l203
  3260   0016E4  0A01               	xorlw	1	; case 3
  3261   0016E6  B4D8               	btfsc	status,2,c
  3262   0016E8  EF4F  F00B         	goto	l204
  3263   0016EC  0A07               	xorlw	7	; case 4
  3264   0016EE  B4D8               	btfsc	status,2,c
  3265   0016F0  EF54  F00B         	goto	l205
  3266   0016F4  EF7C  F00B         	goto	l206
  3267   0016F8                     l206:
  3268   0016F8  FFFF               	dw	65535	; assembler added errata NOP
  3269   0016FA  0012               	return		;funcret
  3270   0016FC  FFFF               	dw	65535	; errata NOP
  3271   0016FE                     __end_of_DIO_SetPortValue:
  3272                           	callstack 0
  3273                           
  3274 ;; *************** function _DIO_SetPinDirection *****************
  3275 ;; Defined at:
  3276 ;;		line 15 in file "gpio.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  portName        1    wreg     enum E2181
  3279 ;;  pinNo           1    0[COMRAM] unsigned char 
  3280 ;;  direction       1    1[COMRAM] enum E2177
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  portName        1    4[COMRAM] enum E2181
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      void 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3292 ;;      Params:         2       0       0       0       0       0       0
  3293 ;;      Locals:         1       0       0       0       0       0       0
  3294 ;;      Temps:          2       0       0       0       0       0       0
  3295 ;;      Totals:         5       0       0       0       0       0       0
  3296 ;;Total ram usage:        5 bytes
  3297 ;; Hardware stack levels used: 1
  3298 ;; Hardware stack levels required when called: 1
  3299 ;; This function calls:
  3300 ;;		Nothing
  3301 ;; This function is called by:
  3302 ;;		_keypad_init
  3303 ;;		_LCD_init
  3304 ;;		_motor_init
  3305 ;;		_led_init
  3306 ;;		_buzzer_init
  3307 ;;		_button_init
  3308 ;;		_pir_init
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text23
  3313   000C34                     __ptext23:
  3314                           	callstack 0
  3315   000C34                     _DIO_SetPinDirection:
  3316                           	callstack 0
  3317   000C34  FFFF               	dw	65535	; assembler added errata NOP
  3318                           
  3319                           ;incstack = 0
  3320                           ;DIO_SetPinDirection@portName stored from wreg
  3321   000C36  6E05               	movwf	DIO_SetPinDirection@portName^0,c
  3322   000C38                     
  3323                           ;gpio.c: 16:     switch (portName){
  3324   000C38  EF13  F007         	goto	l1821
  3325   000C3C                     l1789:
  3326   000C3C  FFFF               	dw	65535	; assembler added errata NOP
  3327                           
  3328                           ;gpio.c: 18:             if(direction == OUTPUT){
  3329   000C3E  0402               	decf	DIO_SetPinDirection@direction^0,w,c
  3330   000C40  A4D8               	btfss	status,2,c
  3331   000C42  EF25  F006         	goto	u961
  3332   000C46  EF28  F006         	goto	u960
  3333   000C4A                     u961:
  3334   000C4A  FFFF               	dw	65535	; assembler added errata NOP
  3335   000C4C  EF3C  F006         	goto	l1793
  3336   000C50                     u960:
  3337   000C50  FFFF               	dw	65535	; assembler added errata NOP
  3338   000C52                     
  3339                           ;gpio.c: 19:                 (TRISA)&=~(1<<(pinNo));
  3340   000C52  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3341   000C56  0E01               	movlw	1
  3342   000C58  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3343   000C5A  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3344   000C5C  EF33  F006         	goto	u974
  3345   000C60                     u975:
  3346   000C60  FFFF               	dw	65535	; assembler added errata NOP
  3347   000C62  90D8               	bcf	status,0,c
  3348   000C64  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3349   000C66                     u974:
  3350   000C66  FFFF               	dw	65535	; assembler added errata NOP
  3351   000C68  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3352   000C6A  EF30  F006         	goto	u975
  3353   000C6E  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3354   000C70  0AFF               	xorlw	255
  3355   000C72  1692               	andwf	146,f,c	;volatile
  3356                           
  3357                           ;gpio.c: 20:             }
  3358   000C74  EF36  F007         	goto	l166
  3359   000C78                     l1793:
  3360   000C78  FFFF               	dw	65535	; assembler added errata NOP
  3361                           
  3362                           ;gpio.c: 22:                 (TRISA)|= 1<<(pinNo);
  3363   000C7A  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3364   000C7E  0E01               	movlw	1
  3365   000C80  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3366   000C82  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3367   000C84  EF47  F006         	goto	u984
  3368   000C88                     u985:
  3369   000C88  FFFF               	dw	65535	; assembler added errata NOP
  3370   000C8A  90D8               	bcf	status,0,c
  3371   000C8C  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3372   000C8E                     u984:
  3373   000C8E  FFFF               	dw	65535	; assembler added errata NOP
  3374   000C90  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3375   000C92  EF44  F006         	goto	u985
  3376   000C96  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3377   000C98  1292               	iorwf	146,f,c	;volatile
  3378   000C9A  EF36  F007         	goto	l166
  3379   000C9E                     l1795:
  3380   000C9E  FFFF               	dw	65535	; assembler added errata NOP
  3381                           
  3382                           ;gpio.c: 26:             if(direction == OUTPUT){
  3383   000CA0  0402               	decf	DIO_SetPinDirection@direction^0,w,c
  3384   000CA2  A4D8               	btfss	status,2,c
  3385   000CA4  EF56  F006         	goto	u991
  3386   000CA8  EF59  F006         	goto	u990
  3387   000CAC                     u991:
  3388   000CAC  FFFF               	dw	65535	; assembler added errata NOP
  3389   000CAE  EF6D  F006         	goto	l1799
  3390   000CB2                     u990:
  3391   000CB2  FFFF               	dw	65535	; assembler added errata NOP
  3392   000CB4                     
  3393                           ;gpio.c: 27:                 (TRISB)&=~(1<<(pinNo));
  3394   000CB4  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3395   000CB8  0E01               	movlw	1
  3396   000CBA  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3397   000CBC  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3398   000CBE  EF64  F006         	goto	u1004
  3399   000CC2                     u1005:
  3400   000CC2  FFFF               	dw	65535	; assembler added errata NOP
  3401   000CC4  90D8               	bcf	status,0,c
  3402   000CC6  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3403   000CC8                     u1004:
  3404   000CC8  FFFF               	dw	65535	; assembler added errata NOP
  3405   000CCA  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3406   000CCC  EF61  F006         	goto	u1005
  3407   000CD0  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3408   000CD2  0AFF               	xorlw	255
  3409   000CD4  1693               	andwf	147,f,c	;volatile
  3410                           
  3411                           ;gpio.c: 28:             }
  3412   000CD6  EF36  F007         	goto	l166
  3413   000CDA                     l1799:
  3414   000CDA  FFFF               	dw	65535	; assembler added errata NOP
  3415                           
  3416                           ;gpio.c: 30:                 (TRISB)|= 1<<(pinNo);
  3417   000CDC  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3418   000CE0  0E01               	movlw	1
  3419   000CE2  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3420   000CE4  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3421   000CE6  EF78  F006         	goto	u1014
  3422   000CEA                     u1015:
  3423   000CEA  FFFF               	dw	65535	; assembler added errata NOP
  3424   000CEC  90D8               	bcf	status,0,c
  3425   000CEE  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3426   000CF0                     u1014:
  3427   000CF0  FFFF               	dw	65535	; assembler added errata NOP
  3428   000CF2  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3429   000CF4  EF75  F006         	goto	u1015
  3430   000CF8  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3431   000CFA  1293               	iorwf	147,f,c	;volatile
  3432   000CFC  EF36  F007         	goto	l166
  3433   000D00                     l1801:
  3434   000D00  FFFF               	dw	65535	; assembler added errata NOP
  3435                           
  3436                           ;gpio.c: 34:             if(direction == OUTPUT){
  3437   000D02  0402               	decf	DIO_SetPinDirection@direction^0,w,c
  3438   000D04  A4D8               	btfss	status,2,c
  3439   000D06  EF87  F006         	goto	u1021
  3440   000D0A  EF8A  F006         	goto	u1020
  3441   000D0E                     u1021:
  3442   000D0E  FFFF               	dw	65535	; assembler added errata NOP
  3443   000D10  EF9E  F006         	goto	l1805
  3444   000D14                     u1020:
  3445   000D14  FFFF               	dw	65535	; assembler added errata NOP
  3446   000D16                     
  3447                           ;gpio.c: 35:                 (TRISC)&=~(1<<(pinNo));
  3448   000D16  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3449   000D1A  0E01               	movlw	1
  3450   000D1C  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3451   000D1E  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3452   000D20  EF95  F006         	goto	u1034
  3453   000D24                     u1035:
  3454   000D24  FFFF               	dw	65535	; assembler added errata NOP
  3455   000D26  90D8               	bcf	status,0,c
  3456   000D28  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3457   000D2A                     u1034:
  3458   000D2A  FFFF               	dw	65535	; assembler added errata NOP
  3459   000D2C  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3460   000D2E  EF92  F006         	goto	u1035
  3461   000D32  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3462   000D34  0AFF               	xorlw	255
  3463   000D36  1694               	andwf	148,f,c	;volatile
  3464                           
  3465                           ;gpio.c: 36:             }
  3466   000D38  EF36  F007         	goto	l166
  3467   000D3C                     l1805:
  3468   000D3C  FFFF               	dw	65535	; assembler added errata NOP
  3469                           
  3470                           ;gpio.c: 38:                 (TRISC)|= 1<<(pinNo);
  3471   000D3E  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3472   000D42  0E01               	movlw	1
  3473   000D44  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3474   000D46  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3475   000D48  EFA9  F006         	goto	u1044
  3476   000D4C                     u1045:
  3477   000D4C  FFFF               	dw	65535	; assembler added errata NOP
  3478   000D4E  90D8               	bcf	status,0,c
  3479   000D50  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3480   000D52                     u1044:
  3481   000D52  FFFF               	dw	65535	; assembler added errata NOP
  3482   000D54  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3483   000D56  EFA6  F006         	goto	u1045
  3484   000D5A  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3485   000D5C  1294               	iorwf	148,f,c	;volatile
  3486   000D5E  EF36  F007         	goto	l166
  3487   000D62                     l1807:
  3488   000D62  FFFF               	dw	65535	; assembler added errata NOP
  3489                           
  3490                           ;gpio.c: 42:             if(direction == OUTPUT){
  3491   000D64  0402               	decf	DIO_SetPinDirection@direction^0,w,c
  3492   000D66  A4D8               	btfss	status,2,c
  3493   000D68  EFB8  F006         	goto	u1051
  3494   000D6C  EFBB  F006         	goto	u1050
  3495   000D70                     u1051:
  3496   000D70  FFFF               	dw	65535	; assembler added errata NOP
  3497   000D72  EFCF  F006         	goto	l1811
  3498   000D76                     u1050:
  3499   000D76  FFFF               	dw	65535	; assembler added errata NOP
  3500   000D78                     
  3501                           ;gpio.c: 43:                 (TRISD)&=~(1<<(pinNo));
  3502   000D78  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3503   000D7C  0E01               	movlw	1
  3504   000D7E  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3505   000D80  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3506   000D82  EFC6  F006         	goto	u1064
  3507   000D86                     u1065:
  3508   000D86  FFFF               	dw	65535	; assembler added errata NOP
  3509   000D88  90D8               	bcf	status,0,c
  3510   000D8A  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3511   000D8C                     u1064:
  3512   000D8C  FFFF               	dw	65535	; assembler added errata NOP
  3513   000D8E  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3514   000D90  EFC3  F006         	goto	u1065
  3515   000D94  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3516   000D96  0AFF               	xorlw	255
  3517   000D98  1695               	andwf	149,f,c	;volatile
  3518                           
  3519                           ;gpio.c: 44:             }
  3520   000D9A  EF36  F007         	goto	l166
  3521   000D9E                     l1811:
  3522   000D9E  FFFF               	dw	65535	; assembler added errata NOP
  3523                           
  3524                           ;gpio.c: 46:                 (TRISD)|= 1<<(pinNo);
  3525   000DA0  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3526   000DA4  0E01               	movlw	1
  3527   000DA6  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3528   000DA8  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3529   000DAA  EFDA  F006         	goto	u1074
  3530   000DAE                     u1075:
  3531   000DAE  FFFF               	dw	65535	; assembler added errata NOP
  3532   000DB0  90D8               	bcf	status,0,c
  3533   000DB2  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3534   000DB4                     u1074:
  3535   000DB4  FFFF               	dw	65535	; assembler added errata NOP
  3536   000DB6  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3537   000DB8  EFD7  F006         	goto	u1075
  3538   000DBC  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3539   000DBE  1295               	iorwf	149,f,c	;volatile
  3540   000DC0  EF36  F007         	goto	l166
  3541   000DC4                     l1813:
  3542   000DC4  FFFF               	dw	65535	; assembler added errata NOP
  3543                           
  3544                           ;gpio.c: 50:             if(direction == OUTPUT){
  3545   000DC6  0402               	decf	DIO_SetPinDirection@direction^0,w,c
  3546   000DC8  A4D8               	btfss	status,2,c
  3547   000DCA  EFE9  F006         	goto	u1081
  3548   000DCE  EFEC  F006         	goto	u1080
  3549   000DD2                     u1081:
  3550   000DD2  FFFF               	dw	65535	; assembler added errata NOP
  3551   000DD4  EF00  F007         	goto	l1817
  3552   000DD8                     u1080:
  3553   000DD8  FFFF               	dw	65535	; assembler added errata NOP
  3554   000DDA                     
  3555                           ;gpio.c: 51:                 (TRISE)&=~(1<<(pinNo));
  3556   000DDA  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3557   000DDE  0E01               	movlw	1
  3558   000DE0  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3559   000DE2  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3560   000DE4  EFF7  F006         	goto	u1094
  3561   000DE8                     u1095:
  3562   000DE8  FFFF               	dw	65535	; assembler added errata NOP
  3563   000DEA  90D8               	bcf	status,0,c
  3564   000DEC  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3565   000DEE                     u1094:
  3566   000DEE  FFFF               	dw	65535	; assembler added errata NOP
  3567   000DF0  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3568   000DF2  EFF4  F006         	goto	u1095
  3569   000DF6  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3570   000DF8  0AFF               	xorlw	255
  3571   000DFA  1696               	andwf	150,f,c	;volatile
  3572                           
  3573                           ;gpio.c: 52:             }
  3574   000DFC  EF36  F007         	goto	l166
  3575   000E00                     l1817:
  3576   000E00  FFFF               	dw	65535	; assembler added errata NOP
  3577                           
  3578                           ;gpio.c: 54:                 (TRISE)|= 1<<(pinNo);
  3579   000E02  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3580   000E06  0E01               	movlw	1
  3581   000E08  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3582   000E0A  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3583   000E0C  EF0B  F007         	goto	u1104
  3584   000E10                     u1105:
  3585   000E10  FFFF               	dw	65535	; assembler added errata NOP
  3586   000E12  90D8               	bcf	status,0,c
  3587   000E14  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3588   000E16                     u1104:
  3589   000E16  FFFF               	dw	65535	; assembler added errata NOP
  3590   000E18  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3591   000E1A  EF08  F007         	goto	u1105
  3592   000E1E  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3593   000E20  1296               	iorwf	150,f,c	;volatile
  3594   000E22  EF36  F007         	goto	l166
  3595   000E26                     l1821:
  3596   000E26  FFFF               	dw	65535	; assembler added errata NOP
  3597   000E28  5005               	movf	DIO_SetPinDirection@portName^0,w,c
  3598   000E2A  6E03               	movwf	??_DIO_SetPinDirection^0,c
  3599   000E2C  6A04               	clrf	(??_DIO_SetPinDirection+1)^0,c
  3600                           
  3601                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3602                           ; Switch size 1, requested type "simple"
  3603                           ; Number of cases is 1, Range of values is 0 to 0
  3604                           ; switch strategies available:
  3605                           ; Name         Instructions Cycles
  3606                           ; simple_byte            4     3 (average)
  3607                           ;	Chosen strategy is simple_byte
  3608   000E2E  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3609   000E30  0A00               	xorlw	0	; case 0
  3610   000E32  B4D8               	btfsc	status,2,c
  3611   000E34  EF1E  F007         	goto	l2183
  3612   000E38  EF36  F007         	goto	l166
  3613   000E3C                     l2183:
  3614   000E3C  FFFF               	dw	65535	; assembler added errata NOP
  3615                           
  3616                           ; Switch size 1, requested type "simple"
  3617                           ; Number of cases is 5, Range of values is 0 to 4
  3618                           ; switch strategies available:
  3619                           ; Name         Instructions Cycles
  3620                           ; simple_byte           16     9 (average)
  3621                           ;	Chosen strategy is simple_byte
  3622   000E3E  5003               	movf	??_DIO_SetPinDirection^0,w,c
  3623   000E40  0A00               	xorlw	0	; case 0
  3624   000E42  B4D8               	btfsc	status,2,c
  3625   000E44  EF1E  F006         	goto	l1789
  3626   000E48  0A01               	xorlw	1	; case 1
  3627   000E4A  B4D8               	btfsc	status,2,c
  3628   000E4C  EF4F  F006         	goto	l1795
  3629   000E50  0A03               	xorlw	3	; case 2
  3630   000E52  B4D8               	btfsc	status,2,c
  3631   000E54  EF80  F006         	goto	l1801
  3632   000E58  0A01               	xorlw	1	; case 3
  3633   000E5A  B4D8               	btfsc	status,2,c
  3634   000E5C  EFB1  F006         	goto	l1807
  3635   000E60  0A07               	xorlw	7	; case 4
  3636   000E62  B4D8               	btfsc	status,2,c
  3637   000E64  EFE2  F006         	goto	l1813
  3638   000E68  EF36  F007         	goto	l166
  3639   000E6C                     l166:
  3640   000E6C  FFFF               	dw	65535	; assembler added errata NOP
  3641   000E6E  0012               	return		;funcret
  3642   000E70  FFFF               	dw	65535	; errata NOP
  3643   000E72                     __end_of_DIO_SetPinDirection:
  3644                           	callstack 0
  3645                           
  3646 ;; *************** function _LCD_displayStringRowColumn *****************
  3647 ;; Defined at:
  3648 ;;		line 157 in file "lcd.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  row             1    wreg     unsigned char 
  3651 ;;  col             1   10[COMRAM] unsigned char 
  3652 ;;  Str             1   11[COMRAM] PTR unsigned char 
  3653 ;;		 -> STR_9(12), STR_8(16), STR_7(12), STR_6(12), 
  3654 ;;		 -> STR_5(10), STR_4(13), STR_3(9), STR_1(12), 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;  row             1   12[COMRAM] unsigned char 
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  1    wreg      void 
  3659 ;; Registers used:
  3660 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3666 ;;      Params:         2       0       0       0       0       0       0
  3667 ;;      Locals:         1       0       0       0       0       0       0
  3668 ;;      Temps:          0       0       0       0       0       0       0
  3669 ;;      Totals:         3       0       0       0       0       0       0
  3670 ;;Total ram usage:        3 bytes
  3671 ;; Hardware stack levels used: 1
  3672 ;; Hardware stack levels required when called: 4
  3673 ;; This function calls:
  3674 ;;		_LCD_displayString
  3675 ;;		_LCD_goToRowColumn
  3676 ;; This function is called by:
  3677 ;;		_main
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           	psect	text24
  3682   001A30                     __ptext24:
  3683                           	callstack 0
  3684   001A30                     _LCD_displayStringRowColumn:
  3685                           	callstack 0
  3686   001A30  FFFF               	dw	65535	; assembler added errata NOP
  3687                           
  3688                           ;incstack = 0
  3689                           ;LCD_displayStringRowColumn@row stored from wreg
  3690   001A32  6E0D               	movwf	LCD_displayStringRowColumn@row^0,c
  3691   001A34                     
  3692                           ;lcd.c: 157: void LCD_displayStringRowColumn(uint8_t row,uint8_t col,char *Str);lcd.c: 1
      +                          58: {;lcd.c: 159:  LCD_goToRowColumn(row,col);
  3693   001A34  C00B  F008         	movff	LCD_displayStringRowColumn@col,LCD_goToRowColumn@col
  3694   001A38  500D               	movf	LCD_displayStringRowColumn@row^0,w,c
  3695   001A3A  ECF7  F00B         	call	_LCD_goToRowColumn
  3696   001A3E                     
  3697                           ;lcd.c: 160:  LCD_displayString(Str);
  3698   001A3E  C00C  F008         	movff	LCD_displayStringRowColumn@Str,LCD_displayString@Str
  3699   001A42  EC63  F00C         	call	_LCD_displayString	;wreg free
  3700   001A46  0012               	return		;funcret
  3701   001A48  FFFF               	dw	65535	; errata NOP
  3702   001A4A                     __end_of_LCD_displayStringRowColumn:
  3703                           	callstack 0
  3704                           
  3705 ;; *************** function _LCD_goToRowColumn *****************
  3706 ;; Defined at:
  3707 ;;		line 131 in file "lcd.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  row             1    wreg     unsigned char 
  3710 ;;  col             1    7[COMRAM] unsigned char 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  row             1    8[COMRAM] unsigned char 
  3713 ;;  Address         1    9[COMRAM] unsigned char 
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  1    wreg      void 
  3716 ;; Registers used:
  3717 ;;		wreg, status,2, status,0, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3723 ;;      Params:         1       0       0       0       0       0       0
  3724 ;;      Locals:         2       0       0       0       0       0       0
  3725 ;;      Temps:          0       0       0       0       0       0       0
  3726 ;;      Totals:         3       0       0       0       0       0       0
  3727 ;;Total ram usage:        3 bytes
  3728 ;; Hardware stack levels used: 1
  3729 ;; Hardware stack levels required when called: 3
  3730 ;; This function calls:
  3731 ;;		_LCD_sendCommand
  3732 ;; This function is called by:
  3733 ;;		_main
  3734 ;;		_LCD_displayStringRowColumn
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text25
  3739   0017EE                     __ptext25:
  3740                           	callstack 0
  3741   0017EE                     _LCD_goToRowColumn:
  3742                           	callstack 0
  3743   0017EE  FFFF               	dw	65535	; assembler added errata NOP
  3744                           
  3745                           ;incstack = 0
  3746                           ;LCD_goToRowColumn@row stored from wreg
  3747   0017F0  6E09               	movwf	LCD_goToRowColumn@row^0,c
  3748   0017F2                     
  3749                           ;lcd.c: 131: void LCD_goToRowColumn(uint8_t row,uint8_t col);lcd.c: 132:  {;lcd.c: 133: 
      +                           uint8_t Address = 0;
  3750   0017F2  0E00               	movlw	0
  3751   0017F4  6E0A               	movwf	LCD_goToRowColumn@Address^0,c
  3752                           
  3753                           ;lcd.c: 136:  switch(row)
  3754   0017F6  EF14  F00C         	goto	l1783
  3755   0017FA                     l291:
  3756   0017FA  FFFF               	dw	65535	; assembler added errata NOP
  3757                           
  3758                           ;lcd.c: 139:     Address=col;
  3759   0017FC  C008  F00A         	movff	LCD_goToRowColumn@col,LCD_goToRowColumn@Address
  3760                           
  3761                           ;lcd.c: 140:     break;
  3762   001800  EF28  F00C         	goto	l1785
  3763   001804                     l1775:
  3764   001804  FFFF               	dw	65535	; assembler added errata NOP
  3765                           
  3766                           ;lcd.c: 142:     Address=col+0x40;
  3767   001806  5008               	movf	LCD_goToRowColumn@col^0,w,c
  3768   001808  0F40               	addlw	64
  3769   00180A  6E0A               	movwf	LCD_goToRowColumn@Address^0,c
  3770                           
  3771                           ;lcd.c: 143:     break;
  3772   00180C  EF28  F00C         	goto	l1785
  3773   001810                     l1777:
  3774   001810  FFFF               	dw	65535	; assembler added errata NOP
  3775                           
  3776                           ;lcd.c: 145:     Address=col+0x10;
  3777   001812  5008               	movf	LCD_goToRowColumn@col^0,w,c
  3778   001814  0F10               	addlw	16
  3779   001816  6E0A               	movwf	LCD_goToRowColumn@Address^0,c
  3780                           
  3781                           ;lcd.c: 146:     break;
  3782   001818  EF28  F00C         	goto	l1785
  3783   00181C                     l1779:
  3784   00181C  FFFF               	dw	65535	; assembler added errata NOP
  3785                           
  3786                           ;lcd.c: 148:     Address=col+0x50;
  3787   00181E  5008               	movf	LCD_goToRowColumn@col^0,w,c
  3788   001820  0F50               	addlw	80
  3789   001822  6E0A               	movwf	LCD_goToRowColumn@Address^0,c
  3790                           
  3791                           ;lcd.c: 149:     break;
  3792   001824  EF28  F00C         	goto	l1785
  3793   001828                     l1783:
  3794   001828  FFFF               	dw	65535	; assembler added errata NOP
  3795   00182A  5009               	movf	LCD_goToRowColumn@row^0,w,c
  3796                           
  3797                           ; Switch size 1, requested type "simple"
  3798                           ; Number of cases is 4, Range of values is 0 to 3
  3799                           ; switch strategies available:
  3800                           ; Name         Instructions Cycles
  3801                           ; simple_byte           13     7 (average)
  3802                           ;	Chosen strategy is simple_byte
  3803   00182C  0A00               	xorlw	0	; case 0
  3804   00182E  B4D8               	btfsc	status,2,c
  3805   001830  EFFD  F00B         	goto	l291
  3806   001834  0A01               	xorlw	1	; case 1
  3807   001836  B4D8               	btfsc	status,2,c
  3808   001838  EF02  F00C         	goto	l1775
  3809   00183C  0A03               	xorlw	3	; case 2
  3810   00183E  B4D8               	btfsc	status,2,c
  3811   001840  EF08  F00C         	goto	l1777
  3812   001844  0A01               	xorlw	1	; case 3
  3813   001846  B4D8               	btfsc	status,2,c
  3814   001848  EF0E  F00C         	goto	l1779
  3815   00184C  EF28  F00C         	goto	l1785
  3816   001850                     l1785:
  3817   001850  FFFF               	dw	65535	; assembler added errata NOP
  3818                           
  3819                           ;lcd.c: 154:  LCD_sendCommand(Address | 0x80);
  3820   001852  500A               	movf	LCD_goToRowColumn@Address^0,w,c
  3821   001854  0980               	iorlw	128
  3822   001856  EC44  F00A         	call	_LCD_sendCommand
  3823   00185A  0012               	return		;funcret
  3824   00185C  FFFF               	dw	65535	; errata NOP
  3825   00185E                     __end_of_LCD_goToRowColumn:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function _LCD_displayString *****************
  3829 ;; Defined at:
  3830 ;;		line 121 in file "lcd.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  Str             1    7[COMRAM] PTR unsigned char 
  3833 ;;		 -> STR_9(12), STR_8(16), STR_7(12), STR_6(12), 
  3834 ;;		 -> STR_5(10), STR_4(13), STR_3(9), STR_1(12), 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;  i               1    9[COMRAM] unsigned char 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3846 ;;      Params:         1       0       0       0       0       0       0
  3847 ;;      Locals:         1       0       0       0       0       0       0
  3848 ;;      Temps:          1       0       0       0       0       0       0
  3849 ;;      Totals:         3       0       0       0       0       0       0
  3850 ;;Total ram usage:        3 bytes
  3851 ;; Hardware stack levels used: 1
  3852 ;; Hardware stack levels required when called: 3
  3853 ;; This function calls:
  3854 ;;		_LCD_displayCharacter
  3855 ;; This function is called by:
  3856 ;;		_LCD_displayStringRowColumn
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text26
  3861   0018C6                     __ptext26:
  3862                           	callstack 0
  3863   0018C6                     _LCD_displayString:
  3864                           	callstack 0
  3865   0018C6  FFFF               	dw	65535	; assembler added errata NOP
  3866   0018C8                     
  3867                           ;lcd.c: 121: void LCD_displayString(char *Str);lcd.c: 122: {;lcd.c: 123:  uint8_t i = 0;
  3868   0018C8  0E00               	movlw	0
  3869   0018CA  6E0A               	movwf	LCD_displayString@i^0,c
  3870                           
  3871                           ;lcd.c: 124:  while(Str[i] != '\0')
  3872   0018CC  EF76  F00C         	goto	l1887
  3873   0018D0                     l1883:
  3874   0018D0  FFFF               	dw	65535	; assembler added errata NOP
  3875                           
  3876                           ;lcd.c: 125:  {;lcd.c: 126:   LCD_displayCharacter(Str[i]);
  3877   0018D2  5008               	movf	LCD_displayString@Str^0,w,c
  3878   0018D4  240A               	addwf	LCD_displayString@i^0,w,c
  3879   0018D6  6E09               	movwf	??_LCD_displayString^0,c
  3880   0018D8  C009  FFF6         	movff	??_LCD_displayString,tblptrl
  3881   0018DC                     	if	1	;There is more than 1 active tblptr byte
  3882   0018DC  0E06               	movlw	high __smallconst
  3883   0018DE  6EF7               	movwf	tblptrh,c
  3884   0018E0                     	endif
  3885   0018E0                     	if	0	;tblptru may be non-zero
  3886   0018E0                     	endif
  3887   0018E0                     	if	0	;tblptru may be non-zero
  3888   0018E0                     	endif
  3889   0018E0  0008               	tblrd		*
  3890   0018E2  FFFF               	dw	65535	; errata NOP
  3891   0018E4  50F5               	movf	tablat,w,c
  3892   0018E6  ECE3  F009         	call	_LCD_displayCharacter
  3893   0018EA                     
  3894                           ;lcd.c: 127:   i++;
  3895   0018EA  2A0A               	incf	LCD_displayString@i^0,f,c
  3896   0018EC                     l1887:
  3897   0018EC  FFFF               	dw	65535	; assembler added errata NOP
  3898                           
  3899                           ;lcd.c: 124:  while(Str[i] != '\0')
  3900   0018EE  5008               	movf	LCD_displayString@Str^0,w,c
  3901   0018F0  240A               	addwf	LCD_displayString@i^0,w,c
  3902   0018F2  6E09               	movwf	??_LCD_displayString^0,c
  3903   0018F4  C009  FFF6         	movff	??_LCD_displayString,tblptrl
  3904   0018F8                     	if	1	;There is more than 1 active tblptr byte
  3905   0018F8  0E06               	movlw	high __smallconst
  3906   0018FA  6EF7               	movwf	tblptrh,c
  3907   0018FC                     	endif
  3908   0018FC                     	if	0	;tblptru may be non-zero
  3909   0018FC                     	endif
  3910   0018FC                     	if	0	;tblptru may be non-zero
  3911   0018FC                     	endif
  3912   0018FC  0008               	tblrd		*
  3913   0018FE  FFFF               	dw	65535	; errata NOP
  3914   001900  50F5               	movf	tablat,w,c
  3915   001902  0900               	iorlw	0
  3916   001904  A4D8               	btfss	status,2,c
  3917   001906  EF87  F00C         	goto	u1161
  3918   00190A  EF8A  F00C         	goto	u1160
  3919   00190E                     u1161:
  3920   00190E  FFFF               	dw	65535	; assembler added errata NOP
  3921   001910  EF68  F00C         	goto	l1883
  3922   001914                     u1160:
  3923   001914  FFFF               	dw	65535	; assembler added errata NOP
  3924   001916  0012               	return		;funcret
  3925   001918  FFFF               	dw	65535	; errata NOP
  3926   00191A                     __end_of_LCD_displayString:
  3927                           	callstack 0
  3928                           
  3929 ;; *************** function _LCD_displayCharacter *****************
  3930 ;; Defined at:
  3931 ;;		line 89 in file "lcd.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  data            1    wreg     unsigned char 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  data            1    6[COMRAM] unsigned char 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      void 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0, cstack
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3945 ;;      Params:         0       0       0       0       0       0       0
  3946 ;;      Locals:         1       0       0       0       0       0       0
  3947 ;;      Temps:          1       0       0       0       0       0       0
  3948 ;;      Totals:         2       0       0       0       0       0       0
  3949 ;;Total ram usage:        2 bytes
  3950 ;; Hardware stack levels used: 1
  3951 ;; Hardware stack levels required when called: 2
  3952 ;; This function calls:
  3953 ;;		_DIO_SetPinValue
  3954 ;;		_DIO_SetUpperHalfPortValue
  3955 ;; This function is called by:
  3956 ;;		_main
  3957 ;;		_LCD_displayString
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text27
  3962   0013C6                     __ptext27:
  3963                           	callstack 0
  3964   0013C6                     _LCD_displayCharacter:
  3965                           	callstack 0
  3966   0013C6  FFFF               	dw	65535	; assembler added errata NOP
  3967                           
  3968                           ;incstack = 0
  3969                           ;LCD_displayCharacter@data stored from wreg
  3970   0013C8  6E07               	movwf	LCD_displayCharacter@data^0,c
  3971   0013CA                     
  3972                           ;lcd.c: 89: void LCD_displayCharacter(uint8_t data);lcd.c: 90: {;lcd.c: 91:  DIO_SetPinV
      +                          alue(PORT_D,1, HIGH);
  3973   0013CA  0E01               	movlw	1
  3974   0013CC  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  3975   0013CE  0E01               	movlw	1
  3976   0013D0  6E02               	movwf	DIO_SetPinValue@value^0,c
  3977   0013D2  0E03               	movlw	3
  3978   0013D4  EC39  F007         	call	_DIO_SetPinValue
  3979                           
  3980                           ;lcd.c: 93:  DIO_SetPinValue(PORT_D,2, LOW);
  3981   0013D8  0E02               	movlw	2
  3982   0013DA  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  3983   0013DC  0E00               	movlw	0
  3984   0013DE  6E02               	movwf	DIO_SetPinValue@value^0,c
  3985   0013E0  0E03               	movlw	3
  3986   0013E2  EC39  F007         	call	_DIO_SetPinValue
  3987   0013E6                     
  3988                           ;lcd.c: 95:  _delay((unsigned long)((1)*(4000000/4000.0)));
  3989   0013E6  0EC8               	movlw	200
  3990   0013E8                     u1597:
  3991   0013E8  FFFF               	dw	65535	; errata NOP
  3992   0013EA  0000               	nop	
  3993   0013EC  2EE8               	decfsz	wreg,f,c
  3994   0013EE  D7FC               	bra	u1597
  3995   0013F0                     
  3996                           ;lcd.c: 97:     DIO_SetPinValue(PORT_D,3, HIGH);
  3997   0013F0  0E03               	movlw	3
  3998   0013F2  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  3999   0013F4  0E01               	movlw	1
  4000   0013F6  6E02               	movwf	DIO_SetPinValue@value^0,c
  4001   0013F8  0E03               	movlw	3
  4002   0013FA  EC39  F007         	call	_DIO_SetPinValue
  4003                           
  4004                           ;lcd.c: 98:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4005   0013FE  0EC8               	movlw	200
  4006   001400                     u1607:
  4007   001400  FFFF               	dw	65535	; errata NOP
  4008   001402  0000               	nop	
  4009   001404  2EE8               	decfsz	wreg,f,c
  4010   001406  D7FC               	bra	u1607
  4011   001408                     
  4012                           ;lcd.c: 101:  DIO_SetUpperHalfPortValue(PORT_D, (data & 0xF0));
  4013   001408  5007               	movf	LCD_displayCharacter@data^0,w,c
  4014   00140A  0BF0               	andlw	240
  4015   00140C  6E01               	movwf	DIO_SetUpperHalfPortValue@value^0,c
  4016   00140E  0E03               	movlw	3
  4017   001410  ECA5  F00A         	call	_DIO_SetUpperHalfPortValue
  4018   001414                     
  4019                           ;lcd.c: 103:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4020   001414  0EC8               	movlw	200
  4021   001416                     u1617:
  4022   001416  FFFF               	dw	65535	; errata NOP
  4023   001418  0000               	nop	
  4024   00141A  2EE8               	decfsz	wreg,f,c
  4025   00141C  D7FC               	bra	u1617
  4026                           
  4027                           ;lcd.c: 105:  DIO_SetPinValue( PORT_D,3, LOW);
  4028   00141E  0E03               	movlw	3
  4029   001420  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4030   001422  0E00               	movlw	0
  4031   001424  6E02               	movwf	DIO_SetPinValue@value^0,c
  4032   001426  0E03               	movlw	3
  4033   001428  EC39  F007         	call	_DIO_SetPinValue
  4034   00142C                     
  4035                           ;lcd.c: 107:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4036   00142C  0EC8               	movlw	200
  4037   00142E                     u1627:
  4038   00142E  FFFF               	dw	65535	; errata NOP
  4039   001430  0000               	nop	
  4040   001432  2EE8               	decfsz	wreg,f,c
  4041   001434  D7FC               	bra	u1627
  4042   001436                     
  4043                           ;lcd.c: 108:  DIO_SetPinValue( PORT_D,3, HIGH);
  4044   001436  0E03               	movlw	3
  4045   001438  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4046   00143A  0E01               	movlw	1
  4047   00143C  6E02               	movwf	DIO_SetPinValue@value^0,c
  4048   00143E  0E03               	movlw	3
  4049   001440  EC39  F007         	call	_DIO_SetPinValue
  4050                           
  4051                           ;lcd.c: 110:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4052   001444  0EC8               	movlw	200
  4053   001446                     u1637:
  4054   001446  FFFF               	dw	65535	; errata NOP
  4055   001448  0000               	nop	
  4056   00144A  2EE8               	decfsz	wreg,f,c
  4057   00144C  D7FC               	bra	u1637
  4058   00144E                     
  4059                           ;lcd.c: 113:  DIO_SetUpperHalfPortValue(PORT_D, ((data & 0x0F) << 4));
  4060   00144E  C007  F006         	movff	LCD_displayCharacter@data,??_LCD_displayCharacter
  4061   001452  0E0F               	movlw	15
  4062   001454  1606               	andwf	??_LCD_displayCharacter^0,f,c
  4063   001456  3806               	swapf	??_LCD_displayCharacter^0,w,c
  4064   001458  0BF0               	andlw	240
  4065   00145A  6E01               	movwf	DIO_SetUpperHalfPortValue@value^0,c
  4066   00145C  0E03               	movlw	3
  4067   00145E  ECA5  F00A         	call	_DIO_SetUpperHalfPortValue
  4068   001462                     
  4069                           ;lcd.c: 114:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4070   001462  0EC8               	movlw	200
  4071   001464                     u1647:
  4072   001464  FFFF               	dw	65535	; errata NOP
  4073   001466  0000               	nop	
  4074   001468  2EE8               	decfsz	wreg,f,c
  4075   00146A  D7FC               	bra	u1647
  4076                           
  4077                           ;lcd.c: 115:  DIO_SetPinValue( PORT_D,3, LOW);
  4078   00146C  0E03               	movlw	3
  4079   00146E  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4080   001470  0E00               	movlw	0
  4081   001472  6E02               	movwf	DIO_SetPinValue@value^0,c
  4082   001474  0E03               	movlw	3
  4083   001476  EC39  F007         	call	_DIO_SetPinValue
  4084   00147A                     
  4085                           ;lcd.c: 116:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4086   00147A  0EC8               	movlw	200
  4087   00147C                     u1657:
  4088   00147C  FFFF               	dw	65535	; errata NOP
  4089   00147E  0000               	nop	
  4090   001480  2EE8               	decfsz	wreg,f,c
  4091   001482  D7FC               	bra	u1657
  4092   001484  0012               	return		;funcret
  4093   001486  FFFF               	dw	65535	; errata NOP
  4094   001488                     __end_of_LCD_displayCharacter:
  4095                           	callstack 0
  4096                           
  4097 ;; *************** function _LCD_clearScreen *****************
  4098 ;; Defined at:
  4099 ;;		line 163 in file "lcd.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;		None
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1    wreg      void 
  4106 ;; Registers used:
  4107 ;;		wreg, status,2, status,0, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4113 ;;      Params:         0       0       0       0       0       0       0
  4114 ;;      Locals:         0       0       0       0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0
  4116 ;;      Totals:         0       0       0       0       0       0       0
  4117 ;;Total ram usage:        0 bytes
  4118 ;; Hardware stack levels used: 1
  4119 ;; Hardware stack levels required when called: 3
  4120 ;; This function calls:
  4121 ;;		_LCD_sendCommand
  4122 ;; This function is called by:
  4123 ;;		_main
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text28
  4128   001B34                     __ptext28:
  4129                           	callstack 0
  4130   001B34                     _LCD_clearScreen:
  4131                           	callstack 0
  4132   001B34  FFFF               	dw	65535	; assembler added errata NOP
  4133   001B36                     
  4134                           ;lcd.c: 165:  LCD_sendCommand(0x01);
  4135   001B36  0E01               	movlw	1
  4136   001B38  EC44  F00A         	call	_LCD_sendCommand
  4137   001B3C  0012               	return		;funcret
  4138   001B3E  FFFF               	dw	65535	; errata NOP
  4139   001B40                     __end_of_LCD_clearScreen:
  4140                           	callstack 0
  4141                           
  4142 ;; *************** function _LCD_sendCommand *****************
  4143 ;; Defined at:
  4144 ;;		line 38 in file "lcd.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  command         1    wreg     unsigned char 
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;  command         1    6[COMRAM] unsigned char 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      void 
  4151 ;; Registers used:
  4152 ;;		wreg, status,2, status,0, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4158 ;;      Params:         0       0       0       0       0       0       0
  4159 ;;      Locals:         1       0       0       0       0       0       0
  4160 ;;      Temps:          1       0       0       0       0       0       0
  4161 ;;      Totals:         2       0       0       0       0       0       0
  4162 ;;Total ram usage:        2 bytes
  4163 ;; Hardware stack levels used: 1
  4164 ;; Hardware stack levels required when called: 2
  4165 ;; This function calls:
  4166 ;;		_DIO_SetPinValue
  4167 ;;		_DIO_SetUpperHalfPortValue
  4168 ;; This function is called by:
  4169 ;;		_LCD_init
  4170 ;;		_LCD_goToRowColumn
  4171 ;;		_LCD_clearScreen
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text29
  4176   001488                     __ptext29:
  4177                           	callstack 0
  4178   001488                     _LCD_sendCommand:
  4179                           	callstack 0
  4180   001488  FFFF               	dw	65535	; assembler added errata NOP
  4181                           
  4182                           ;incstack = 0
  4183                           ;LCD_sendCommand@command stored from wreg
  4184   00148A  6E07               	movwf	LCD_sendCommand@command^0,c
  4185   00148C                     
  4186                           ;lcd.c: 38: void LCD_sendCommand(uint8_t command);lcd.c: 39: {;lcd.c: 41:  DIO_SetPinVal
      +                          ue(PORT_D,1, LOW);
  4187   00148C  0E01               	movlw	1
  4188   00148E  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4189   001490  0E00               	movlw	0
  4190   001492  6E02               	movwf	DIO_SetPinValue@value^0,c
  4191   001494  0E03               	movlw	3
  4192   001496  EC39  F007         	call	_DIO_SetPinValue
  4193                           
  4194                           ;lcd.c: 44:  DIO_SetPinValue(PORT_D,2, LOW);
  4195   00149A  0E02               	movlw	2
  4196   00149C  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4197   00149E  0E00               	movlw	0
  4198   0014A0  6E02               	movwf	DIO_SetPinValue@value^0,c
  4199   0014A2  0E03               	movlw	3
  4200   0014A4  EC39  F007         	call	_DIO_SetPinValue
  4201   0014A8                     
  4202                           ;lcd.c: 45:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4203   0014A8  0EC8               	movlw	200
  4204   0014AA                     u1667:
  4205   0014AA  FFFF               	dw	65535	; errata NOP
  4206   0014AC  0000               	nop	
  4207   0014AE  2EE8               	decfsz	wreg,f,c
  4208   0014B0  D7FC               	bra	u1667
  4209   0014B2                     
  4210                           ;lcd.c: 49:  DIO_SetPinValue(PORT_D,3, HIGH);
  4211   0014B2  0E03               	movlw	3
  4212   0014B4  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4213   0014B6  0E01               	movlw	1
  4214   0014B8  6E02               	movwf	DIO_SetPinValue@value^0,c
  4215   0014BA  0E03               	movlw	3
  4216   0014BC  EC39  F007         	call	_DIO_SetPinValue
  4217                           
  4218                           ;lcd.c: 52:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4219   0014C0  0EC8               	movlw	200
  4220   0014C2                     u1677:
  4221   0014C2  FFFF               	dw	65535	; errata NOP
  4222   0014C4  0000               	nop	
  4223   0014C6  2EE8               	decfsz	wreg,f,c
  4224   0014C8  D7FC               	bra	u1677
  4225   0014CA                     
  4226                           ;lcd.c: 57:     DIO_SetUpperHalfPortValue(PORT_D, (command & 0xF0));
  4227   0014CA  5007               	movf	LCD_sendCommand@command^0,w,c
  4228   0014CC  0BF0               	andlw	240
  4229   0014CE  6E01               	movwf	DIO_SetUpperHalfPortValue@value^0,c
  4230   0014D0  0E03               	movlw	3
  4231   0014D2  ECA5  F00A         	call	_DIO_SetUpperHalfPortValue
  4232   0014D6                     
  4233                           ;lcd.c: 60:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4234   0014D6  0EC8               	movlw	200
  4235   0014D8                     u1687:
  4236   0014D8  FFFF               	dw	65535	; errata NOP
  4237   0014DA  0000               	nop	
  4238   0014DC  2EE8               	decfsz	wreg,f,c
  4239   0014DE  D7FC               	bra	u1687
  4240                           
  4241                           ;lcd.c: 63:  DIO_SetPinValue( PORT_D,3, LOW);
  4242   0014E0  0E03               	movlw	3
  4243   0014E2  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4244   0014E4  0E00               	movlw	0
  4245   0014E6  6E02               	movwf	DIO_SetPinValue@value^0,c
  4246   0014E8  0E03               	movlw	3
  4247   0014EA  EC39  F007         	call	_DIO_SetPinValue
  4248   0014EE                     
  4249                           ;lcd.c: 66:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4250   0014EE  0EC8               	movlw	200
  4251   0014F0                     u1697:
  4252   0014F0  FFFF               	dw	65535	; errata NOP
  4253   0014F2  0000               	nop	
  4254   0014F4  2EE8               	decfsz	wreg,f,c
  4255   0014F6  D7FC               	bra	u1697
  4256   0014F8                     
  4257                           ;lcd.c: 69:  DIO_SetPinValue( PORT_D,3, HIGH);
  4258   0014F8  0E03               	movlw	3
  4259   0014FA  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4260   0014FC  0E01               	movlw	1
  4261   0014FE  6E02               	movwf	DIO_SetPinValue@value^0,c
  4262   001500  0E03               	movlw	3
  4263   001502  EC39  F007         	call	_DIO_SetPinValue
  4264                           
  4265                           ;lcd.c: 71:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4266   001506  0EC8               	movlw	200
  4267   001508                     u1707:
  4268   001508  FFFF               	dw	65535	; errata NOP
  4269   00150A  0000               	nop	
  4270   00150C  2EE8               	decfsz	wreg,f,c
  4271   00150E  D7FC               	bra	u1707
  4272   001510                     
  4273                           ;lcd.c: 75:  DIO_SetUpperHalfPortValue(PORT_D, ((command & 0x0F) << 4));
  4274   001510  C007  F006         	movff	LCD_sendCommand@command,??_LCD_sendCommand
  4275   001514  0E0F               	movlw	15
  4276   001516  1606               	andwf	??_LCD_sendCommand^0,f,c
  4277   001518  3806               	swapf	??_LCD_sendCommand^0,w,c
  4278   00151A  0BF0               	andlw	240
  4279   00151C  6E01               	movwf	DIO_SetUpperHalfPortValue@value^0,c
  4280   00151E  0E03               	movlw	3
  4281   001520  ECA5  F00A         	call	_DIO_SetUpperHalfPortValue
  4282   001524                     
  4283                           ;lcd.c: 78:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4284   001524  0EC8               	movlw	200
  4285   001526                     u1717:
  4286   001526  FFFF               	dw	65535	; errata NOP
  4287   001528  0000               	nop	
  4288   00152A  2EE8               	decfsz	wreg,f,c
  4289   00152C  D7FC               	bra	u1717
  4290                           
  4291                           ;lcd.c: 81:  DIO_SetPinValue(PORT_D,3, LOW);
  4292   00152E  0E03               	movlw	3
  4293   001530  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4294   001532  0E00               	movlw	0
  4295   001534  6E02               	movwf	DIO_SetPinValue@value^0,c
  4296   001536  0E03               	movlw	3
  4297   001538  EC39  F007         	call	_DIO_SetPinValue
  4298   00153C                     
  4299                           ;lcd.c: 84:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4300   00153C  0EC8               	movlw	200
  4301   00153E                     u1727:
  4302   00153E  FFFF               	dw	65535	; errata NOP
  4303   001540  0000               	nop	
  4304   001542  2EE8               	decfsz	wreg,f,c
  4305   001544  D7FC               	bra	u1727
  4306   001546  0012               	return		;funcret
  4307   001548  FFFF               	dw	65535	; errata NOP
  4308   00154A                     __end_of_LCD_sendCommand:
  4309                           	callstack 0
  4310                           
  4311 ;; *************** function _DIO_SetUpperHalfPortValue *****************
  4312 ;; Defined at:
  4313 ;;		line 152 in file "gpio.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  portName        1    wreg     enum E2181
  4316 ;;  value           1    0[COMRAM] unsigned char 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  portName        1    3[COMRAM] enum E2181
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		wreg, status,2, status,0
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4328 ;;      Params:         1       0       0       0       0       0       0
  4329 ;;      Locals:         1       0       0       0       0       0       0
  4330 ;;      Temps:          2       0       0       0       0       0       0
  4331 ;;      Totals:         4       0       0       0       0       0       0
  4332 ;;Total ram usage:        4 bytes
  4333 ;; Hardware stack levels used: 1
  4334 ;; Hardware stack levels required when called: 1
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_LCD_sendCommand
  4339 ;;		_LCD_displayCharacter
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text30
  4344   00154A                     __ptext30:
  4345                           	callstack 0
  4346   00154A                     _DIO_SetUpperHalfPortValue:
  4347                           	callstack 0
  4348   00154A  FFFF               	dw	65535	; assembler added errata NOP
  4349                           
  4350                           ;incstack = 0
  4351                           ;DIO_SetUpperHalfPortValue@portName stored from wreg
  4352   00154C  6E04               	movwf	DIO_SetUpperHalfPortValue@portName^0,c
  4353   00154E                     
  4354                           ;gpio.c: 153:  switch(portName) {
  4355   00154E  EFCC  F00A         	goto	l1727
  4356   001552                     l1715:
  4357   001552  FFFF               	dw	65535	; assembler added errata NOP
  4358                           
  4359                           ;gpio.c: 155:   PORTA = (PORTA & 0x0F) | value ;
  4360   001554  5080               	movf	128,w,c	;volatile
  4361   001556  0B0F               	andlw	15
  4362   001558  1001               	iorwf	DIO_SetUpperHalfPortValue@value^0,w,c
  4363   00155A  6E80               	movwf	128,c	;volatile
  4364                           
  4365                           ;gpio.c: 156:   break;
  4366   00155C  EFEF  F00A         	goto	l216
  4367   001560                     l1717:
  4368   001560  FFFF               	dw	65535	; assembler added errata NOP
  4369                           
  4370                           ;gpio.c: 159:   PORTB = (PORTB & 0x0F) | value ;
  4371   001562  5081               	movf	129,w,c	;volatile
  4372   001564  0B0F               	andlw	15
  4373   001566  1001               	iorwf	DIO_SetUpperHalfPortValue@value^0,w,c
  4374   001568  6E81               	movwf	129,c	;volatile
  4375                           
  4376                           ;gpio.c: 160:   break;
  4377   00156A  EFEF  F00A         	goto	l216
  4378   00156E                     l1719:
  4379   00156E  FFFF               	dw	65535	; assembler added errata NOP
  4380                           
  4381                           ;gpio.c: 163:   PORTC = (PORTC & 0x0F) | value ;
  4382   001570  5082               	movf	130,w,c	;volatile
  4383   001572  0B0F               	andlw	15
  4384   001574  1001               	iorwf	DIO_SetUpperHalfPortValue@value^0,w,c
  4385   001576  6E82               	movwf	130,c	;volatile
  4386                           
  4387                           ;gpio.c: 164:   break;
  4388   001578  EFEF  F00A         	goto	l216
  4389   00157C                     l1721:
  4390   00157C  FFFF               	dw	65535	; assembler added errata NOP
  4391                           
  4392                           ;gpio.c: 167:   PORTD = (PORTD & 0x0F) | value ;
  4393   00157E  5083               	movf	131,w,c	;volatile
  4394   001580  0B0F               	andlw	15
  4395   001582  1001               	iorwf	DIO_SetUpperHalfPortValue@value^0,w,c
  4396   001584  6E83               	movwf	131,c	;volatile
  4397                           
  4398                           ;gpio.c: 168:   break;
  4399   001586  EFEF  F00A         	goto	l216
  4400   00158A                     l1723:
  4401   00158A  FFFF               	dw	65535	; assembler added errata NOP
  4402                           
  4403                           ;gpio.c: 171:   PORTE = (PORTE & 0x0F) | value ;
  4404   00158C  5084               	movf	132,w,c	;volatile
  4405   00158E  0B0F               	andlw	15
  4406   001590  1001               	iorwf	DIO_SetUpperHalfPortValue@value^0,w,c
  4407   001592  6E84               	movwf	132,c	;volatile
  4408                           
  4409                           ;gpio.c: 172:   break;
  4410   001594  EFEF  F00A         	goto	l216
  4411   001598                     l1727:
  4412   001598  FFFF               	dw	65535	; assembler added errata NOP
  4413   00159A  5004               	movf	DIO_SetUpperHalfPortValue@portName^0,w,c
  4414   00159C  6E02               	movwf	??_DIO_SetUpperHalfPortValue^0,c
  4415   00159E  6A03               	clrf	(??_DIO_SetUpperHalfPortValue+1)^0,c
  4416                           
  4417                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4418                           ; Switch size 1, requested type "simple"
  4419                           ; Number of cases is 1, Range of values is 0 to 0
  4420                           ; switch strategies available:
  4421                           ; Name         Instructions Cycles
  4422                           ; simple_byte            4     3 (average)
  4423                           ;	Chosen strategy is simple_byte
  4424   0015A0  5003               	movf	(??_DIO_SetUpperHalfPortValue+1)^0,w,c
  4425   0015A2  0A00               	xorlw	0	; case 0
  4426   0015A4  B4D8               	btfsc	status,2,c
  4427   0015A6  EFD7  F00A         	goto	l2185
  4428   0015AA  EFEF  F00A         	goto	l216
  4429   0015AE                     l2185:
  4430   0015AE  FFFF               	dw	65535	; assembler added errata NOP
  4431                           
  4432                           ; Switch size 1, requested type "simple"
  4433                           ; Number of cases is 5, Range of values is 0 to 4
  4434                           ; switch strategies available:
  4435                           ; Name         Instructions Cycles
  4436                           ; simple_byte           16     9 (average)
  4437                           ;	Chosen strategy is simple_byte
  4438   0015B0  5002               	movf	??_DIO_SetUpperHalfPortValue^0,w,c
  4439   0015B2  0A00               	xorlw	0	; case 0
  4440   0015B4  B4D8               	btfsc	status,2,c
  4441   0015B6  EFA9  F00A         	goto	l1715
  4442   0015BA  0A01               	xorlw	1	; case 1
  4443   0015BC  B4D8               	btfsc	status,2,c
  4444   0015BE  EFB0  F00A         	goto	l1717
  4445   0015C2  0A03               	xorlw	3	; case 2
  4446   0015C4  B4D8               	btfsc	status,2,c
  4447   0015C6  EFB7  F00A         	goto	l1719
  4448   0015CA  0A01               	xorlw	1	; case 3
  4449   0015CC  B4D8               	btfsc	status,2,c
  4450   0015CE  EFBE  F00A         	goto	l1721
  4451   0015D2  0A07               	xorlw	7	; case 4
  4452   0015D4  B4D8               	btfsc	status,2,c
  4453   0015D6  EFC5  F00A         	goto	l1723
  4454   0015DA  EFEF  F00A         	goto	l216
  4455   0015DE                     l216:
  4456   0015DE  FFFF               	dw	65535	; assembler added errata NOP
  4457   0015E0  0012               	return		;funcret
  4458   0015E2  FFFF               	dw	65535	; errata NOP
  4459   0015E4                     __end_of_DIO_SetUpperHalfPortValue:
  4460                           	callstack 0
  4461                           
  4462 ;; *************** function _DIO_SetPinValue *****************
  4463 ;; Defined at:
  4464 ;;		line 62 in file "gpio.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  portName        1    wreg     enum E2181
  4467 ;;  pinNo           1    0[COMRAM] unsigned char 
  4468 ;;  value           1    1[COMRAM] enum E2188
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  portName        1    4[COMRAM] enum E2181
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4480 ;;      Params:         2       0       0       0       0       0       0
  4481 ;;      Locals:         1       0       0       0       0       0       0
  4482 ;;      Temps:          2       0       0       0       0       0       0
  4483 ;;      Totals:         5       0       0       0       0       0       0
  4484 ;;Total ram usage:        5 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; Hardware stack levels required when called: 1
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_LCD_sendCommand
  4491 ;;		_LCD_displayCharacter
  4492 ;;		_motor_init
  4493 ;;		_motor_on
  4494 ;;		_motor_off
  4495 ;;		_led_on
  4496 ;;		_led_off
  4497 ;;		_buzzer_on
  4498 ;;		_buzzer_off
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text31
  4503   000E72                     __ptext31:
  4504                           	callstack 0
  4505   000E72                     _DIO_SetPinValue:
  4506                           	callstack 0
  4507   000E72  FFFF               	dw	65535	; assembler added errata NOP
  4508                           
  4509                           ;incstack = 0
  4510                           ;DIO_SetPinValue@portName stored from wreg
  4511   000E74  6E05               	movwf	DIO_SetPinValue@portName^0,c
  4512   000E76                     
  4513                           ;gpio.c: 63:     switch (portName){
  4514   000E76  EF32  F008         	goto	l1707
  4515   000E7A                     l1675:
  4516   000E7A  FFFF               	dw	65535	; assembler added errata NOP
  4517                           
  4518                           ;gpio.c: 65:             if(value == LOW){
  4519   000E7C  5002               	movf	DIO_SetPinValue@value^0,w,c
  4520   000E7E  A4D8               	btfss	status,2,c
  4521   000E80  EF44  F007         	goto	u811
  4522   000E84  EF47  F007         	goto	u810
  4523   000E88                     u811:
  4524   000E88  FFFF               	dw	65535	; assembler added errata NOP
  4525   000E8A  EF5B  F007         	goto	l1679
  4526   000E8E                     u810:
  4527   000E8E  FFFF               	dw	65535	; assembler added errata NOP
  4528   000E90                     
  4529                           ;gpio.c: 66:                 (PORTA)&=~(1<<(pinNo));
  4530   000E90  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4531   000E94  0E01               	movlw	1
  4532   000E96  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4533   000E98  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4534   000E9A  EF52  F007         	goto	u824
  4535   000E9E                     u825:
  4536   000E9E  FFFF               	dw	65535	; assembler added errata NOP
  4537   000EA0  90D8               	bcf	status,0,c
  4538   000EA2  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4539   000EA4                     u824:
  4540   000EA4  FFFF               	dw	65535	; assembler added errata NOP
  4541   000EA6  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4542   000EA8  EF4F  F007         	goto	u825
  4543   000EAC  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4544   000EAE  0AFF               	xorlw	255
  4545   000EB0  1680               	andwf	128,f,c	;volatile
  4546                           
  4547                           ;gpio.c: 67:             }
  4548   000EB2  EF55  F008         	goto	l186
  4549   000EB6                     l1679:
  4550   000EB6  FFFF               	dw	65535	; assembler added errata NOP
  4551                           
  4552                           ;gpio.c: 69:                 (PORTA)|= 1<<(pinNo);
  4553   000EB8  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4554   000EBC  0E01               	movlw	1
  4555   000EBE  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4556   000EC0  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4557   000EC2  EF66  F007         	goto	u834
  4558   000EC6                     u835:
  4559   000EC6  FFFF               	dw	65535	; assembler added errata NOP
  4560   000EC8  90D8               	bcf	status,0,c
  4561   000ECA  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4562   000ECC                     u834:
  4563   000ECC  FFFF               	dw	65535	; assembler added errata NOP
  4564   000ECE  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4565   000ED0  EF63  F007         	goto	u835
  4566   000ED4  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4567   000ED6  1280               	iorwf	128,f,c	;volatile
  4568   000ED8  EF55  F008         	goto	l186
  4569   000EDC                     l1681:
  4570   000EDC  FFFF               	dw	65535	; assembler added errata NOP
  4571                           
  4572                           ;gpio.c: 73:             if(value == LOW){
  4573   000EDE  5002               	movf	DIO_SetPinValue@value^0,w,c
  4574   000EE0  A4D8               	btfss	status,2,c
  4575   000EE2  EF75  F007         	goto	u841
  4576   000EE6  EF78  F007         	goto	u840
  4577   000EEA                     u841:
  4578   000EEA  FFFF               	dw	65535	; assembler added errata NOP
  4579   000EEC  EF8C  F007         	goto	l1685
  4580   000EF0                     u840:
  4581   000EF0  FFFF               	dw	65535	; assembler added errata NOP
  4582   000EF2                     
  4583                           ;gpio.c: 74:                 (PORTB)&=~(1<<(pinNo));
  4584   000EF2  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4585   000EF6  0E01               	movlw	1
  4586   000EF8  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4587   000EFA  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4588   000EFC  EF83  F007         	goto	u854
  4589   000F00                     u855:
  4590   000F00  FFFF               	dw	65535	; assembler added errata NOP
  4591   000F02  90D8               	bcf	status,0,c
  4592   000F04  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4593   000F06                     u854:
  4594   000F06  FFFF               	dw	65535	; assembler added errata NOP
  4595   000F08  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4596   000F0A  EF80  F007         	goto	u855
  4597   000F0E  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4598   000F10  0AFF               	xorlw	255
  4599   000F12  1681               	andwf	129,f,c	;volatile
  4600                           
  4601                           ;gpio.c: 75:             }
  4602   000F14  EF55  F008         	goto	l186
  4603   000F18                     l1685:
  4604   000F18  FFFF               	dw	65535	; assembler added errata NOP
  4605                           
  4606                           ;gpio.c: 77:                 (PORTB)|= 1<<(pinNo);
  4607   000F1A  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4608   000F1E  0E01               	movlw	1
  4609   000F20  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4610   000F22  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4611   000F24  EF97  F007         	goto	u864
  4612   000F28                     u865:
  4613   000F28  FFFF               	dw	65535	; assembler added errata NOP
  4614   000F2A  90D8               	bcf	status,0,c
  4615   000F2C  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4616   000F2E                     u864:
  4617   000F2E  FFFF               	dw	65535	; assembler added errata NOP
  4618   000F30  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4619   000F32  EF94  F007         	goto	u865
  4620   000F36  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4621   000F38  1281               	iorwf	129,f,c	;volatile
  4622   000F3A  EF55  F008         	goto	l186
  4623   000F3E                     l1687:
  4624   000F3E  FFFF               	dw	65535	; assembler added errata NOP
  4625                           
  4626                           ;gpio.c: 81:             if(value == LOW){
  4627   000F40  5002               	movf	DIO_SetPinValue@value^0,w,c
  4628   000F42  A4D8               	btfss	status,2,c
  4629   000F44  EFA6  F007         	goto	u871
  4630   000F48  EFA9  F007         	goto	u870
  4631   000F4C                     u871:
  4632   000F4C  FFFF               	dw	65535	; assembler added errata NOP
  4633   000F4E  EFBD  F007         	goto	l1691
  4634   000F52                     u870:
  4635   000F52  FFFF               	dw	65535	; assembler added errata NOP
  4636   000F54                     
  4637                           ;gpio.c: 82:                 (PORTC)&=~(1<<(pinNo));
  4638   000F54  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4639   000F58  0E01               	movlw	1
  4640   000F5A  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4641   000F5C  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4642   000F5E  EFB4  F007         	goto	u884
  4643   000F62                     u885:
  4644   000F62  FFFF               	dw	65535	; assembler added errata NOP
  4645   000F64  90D8               	bcf	status,0,c
  4646   000F66  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4647   000F68                     u884:
  4648   000F68  FFFF               	dw	65535	; assembler added errata NOP
  4649   000F6A  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4650   000F6C  EFB1  F007         	goto	u885
  4651   000F70  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4652   000F72  0AFF               	xorlw	255
  4653   000F74  1682               	andwf	130,f,c	;volatile
  4654                           
  4655                           ;gpio.c: 83:             }
  4656   000F76  EF55  F008         	goto	l186
  4657   000F7A                     l1691:
  4658   000F7A  FFFF               	dw	65535	; assembler added errata NOP
  4659                           
  4660                           ;gpio.c: 85:                 (PORTC)|= 1<<(pinNo);
  4661   000F7C  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4662   000F80  0E01               	movlw	1
  4663   000F82  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4664   000F84  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4665   000F86  EFC8  F007         	goto	u894
  4666   000F8A                     u895:
  4667   000F8A  FFFF               	dw	65535	; assembler added errata NOP
  4668   000F8C  90D8               	bcf	status,0,c
  4669   000F8E  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4670   000F90                     u894:
  4671   000F90  FFFF               	dw	65535	; assembler added errata NOP
  4672   000F92  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4673   000F94  EFC5  F007         	goto	u895
  4674   000F98  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4675   000F9A  1282               	iorwf	130,f,c	;volatile
  4676   000F9C  EF55  F008         	goto	l186
  4677   000FA0                     l1693:
  4678   000FA0  FFFF               	dw	65535	; assembler added errata NOP
  4679                           
  4680                           ;gpio.c: 89:             if(value == LOW){
  4681   000FA2  5002               	movf	DIO_SetPinValue@value^0,w,c
  4682   000FA4  A4D8               	btfss	status,2,c
  4683   000FA6  EFD7  F007         	goto	u901
  4684   000FAA  EFDA  F007         	goto	u900
  4685   000FAE                     u901:
  4686   000FAE  FFFF               	dw	65535	; assembler added errata NOP
  4687   000FB0  EFEE  F007         	goto	l1697
  4688   000FB4                     u900:
  4689   000FB4  FFFF               	dw	65535	; assembler added errata NOP
  4690   000FB6                     
  4691                           ;gpio.c: 90:                 (PORTD)&=~(1<<(pinNo));
  4692   000FB6  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4693   000FBA  0E01               	movlw	1
  4694   000FBC  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4695   000FBE  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4696   000FC0  EFE5  F007         	goto	u914
  4697   000FC4                     u915:
  4698   000FC4  FFFF               	dw	65535	; assembler added errata NOP
  4699   000FC6  90D8               	bcf	status,0,c
  4700   000FC8  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4701   000FCA                     u914:
  4702   000FCA  FFFF               	dw	65535	; assembler added errata NOP
  4703   000FCC  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4704   000FCE  EFE2  F007         	goto	u915
  4705   000FD2  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4706   000FD4  0AFF               	xorlw	255
  4707   000FD6  1683               	andwf	131,f,c	;volatile
  4708                           
  4709                           ;gpio.c: 91:             }
  4710   000FD8  EF55  F008         	goto	l186
  4711   000FDC                     l1697:
  4712   000FDC  FFFF               	dw	65535	; assembler added errata NOP
  4713                           
  4714                           ;gpio.c: 93:                 (PORTD)|= 1<<(pinNo);
  4715   000FDE  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4716   000FE2  0E01               	movlw	1
  4717   000FE4  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4718   000FE6  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4719   000FE8  EFF9  F007         	goto	u924
  4720   000FEC                     u925:
  4721   000FEC  FFFF               	dw	65535	; assembler added errata NOP
  4722   000FEE  90D8               	bcf	status,0,c
  4723   000FF0  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4724   000FF2                     u924:
  4725   000FF2  FFFF               	dw	65535	; assembler added errata NOP
  4726   000FF4  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4727   000FF6  EFF6  F007         	goto	u925
  4728   000FFA  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4729   000FFC  1283               	iorwf	131,f,c	;volatile
  4730   000FFE  EF55  F008         	goto	l186
  4731   001002                     l1699:
  4732   001002  FFFF               	dw	65535	; assembler added errata NOP
  4733                           
  4734                           ;gpio.c: 97:             if(value == LOW){
  4735   001004  5002               	movf	DIO_SetPinValue@value^0,w,c
  4736   001006  A4D8               	btfss	status,2,c
  4737   001008  EF08  F008         	goto	u931
  4738   00100C  EF0B  F008         	goto	u930
  4739   001010                     u931:
  4740   001010  FFFF               	dw	65535	; assembler added errata NOP
  4741   001012  EF1F  F008         	goto	l1703
  4742   001016                     u930:
  4743   001016  FFFF               	dw	65535	; assembler added errata NOP
  4744   001018                     
  4745                           ;gpio.c: 98:                 (PORTE)&=~(1<<(pinNo));
  4746   001018  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4747   00101C  0E01               	movlw	1
  4748   00101E  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4749   001020  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4750   001022  EF16  F008         	goto	u944
  4751   001026                     u945:
  4752   001026  FFFF               	dw	65535	; assembler added errata NOP
  4753   001028  90D8               	bcf	status,0,c
  4754   00102A  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4755   00102C                     u944:
  4756   00102C  FFFF               	dw	65535	; assembler added errata NOP
  4757   00102E  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4758   001030  EF13  F008         	goto	u945
  4759   001034  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4760   001036  0AFF               	xorlw	255
  4761   001038  1684               	andwf	132,f,c	;volatile
  4762                           
  4763                           ;gpio.c: 99:             }
  4764   00103A  EF55  F008         	goto	l186
  4765   00103E                     l1703:
  4766   00103E  FFFF               	dw	65535	; assembler added errata NOP
  4767                           
  4768                           ;gpio.c: 101:                 (PORTE)|= 1<<(pinNo);
  4769   001040  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4770   001044  0E01               	movlw	1
  4771   001046  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4772   001048  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4773   00104A  EF2A  F008         	goto	u954
  4774   00104E                     u955:
  4775   00104E  FFFF               	dw	65535	; assembler added errata NOP
  4776   001050  90D8               	bcf	status,0,c
  4777   001052  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4778   001054                     u954:
  4779   001054  FFFF               	dw	65535	; assembler added errata NOP
  4780   001056  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4781   001058  EF27  F008         	goto	u955
  4782   00105C  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4783   00105E  1284               	iorwf	132,f,c	;volatile
  4784   001060  EF55  F008         	goto	l186
  4785   001064                     l1707:
  4786   001064  FFFF               	dw	65535	; assembler added errata NOP
  4787   001066  5005               	movf	DIO_SetPinValue@portName^0,w,c
  4788   001068  6E03               	movwf	??_DIO_SetPinValue^0,c
  4789   00106A  6A04               	clrf	(??_DIO_SetPinValue+1)^0,c
  4790                           
  4791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4792                           ; Switch size 1, requested type "simple"
  4793                           ; Number of cases is 1, Range of values is 0 to 0
  4794                           ; switch strategies available:
  4795                           ; Name         Instructions Cycles
  4796                           ; simple_byte            4     3 (average)
  4797                           ;	Chosen strategy is simple_byte
  4798   00106C  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4799   00106E  0A00               	xorlw	0	; case 0
  4800   001070  B4D8               	btfsc	status,2,c
  4801   001072  EF3D  F008         	goto	l2187
  4802   001076  EF55  F008         	goto	l186
  4803   00107A                     l2187:
  4804   00107A  FFFF               	dw	65535	; assembler added errata NOP
  4805                           
  4806                           ; Switch size 1, requested type "simple"
  4807                           ; Number of cases is 5, Range of values is 0 to 4
  4808                           ; switch strategies available:
  4809                           ; Name         Instructions Cycles
  4810                           ; simple_byte           16     9 (average)
  4811                           ;	Chosen strategy is simple_byte
  4812   00107C  5003               	movf	??_DIO_SetPinValue^0,w,c
  4813   00107E  0A00               	xorlw	0	; case 0
  4814   001080  B4D8               	btfsc	status,2,c
  4815   001082  EF3D  F007         	goto	l1675
  4816   001086  0A01               	xorlw	1	; case 1
  4817   001088  B4D8               	btfsc	status,2,c
  4818   00108A  EF6E  F007         	goto	l1681
  4819   00108E  0A03               	xorlw	3	; case 2
  4820   001090  B4D8               	btfsc	status,2,c
  4821   001092  EF9F  F007         	goto	l1687
  4822   001096  0A01               	xorlw	1	; case 3
  4823   001098  B4D8               	btfsc	status,2,c
  4824   00109A  EFD0  F007         	goto	l1693
  4825   00109E  0A07               	xorlw	7	; case 4
  4826   0010A0  B4D8               	btfsc	status,2,c
  4827   0010A2  EF01  F008         	goto	l1699
  4828   0010A6  EF55  F008         	goto	l186
  4829   0010AA                     l186:
  4830   0010AA  FFFF               	dw	65535	; assembler added errata NOP
  4831   0010AC  0012               	return		;funcret
  4832   0010AE  FFFF               	dw	65535	; errata NOP
  4833   0010B0                     __end_of_DIO_SetPinValue:
  4834                           	callstack 0
  4835                           
  4836 ;; *************** function _DIO_TogglePin *****************
  4837 ;; Defined at:
  4838 ;;		line 178 in file "gpio.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;  portName        1    wreg     enum E2181
  4841 ;;  pinNo           1    0[COMRAM] unsigned char 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  portName        1    3[COMRAM] enum E2181
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  1    wreg      void 
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4853 ;;      Params:         1       0       0       0       0       0       0
  4854 ;;      Locals:         1       0       0       0       0       0       0
  4855 ;;      Temps:          2       0       0       0       0       0       0
  4856 ;;      Totals:         4       0       0       0       0       0       0
  4857 ;;Total ram usage:        4 bytes
  4858 ;; Hardware stack levels used: 1
  4859 ;; Hardware stack levels required when called: 1
  4860 ;; This function calls:
  4861 ;;		Nothing
  4862 ;; This function is called by:
  4863 ;;		_main
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text32
  4868   0011DA                     __ptext32:
  4869                           	callstack 0
  4870   0011DA                     _DIO_TogglePin:
  4871                           	callstack 0
  4872   0011DA  FFFF               	dw	65535	; assembler added errata NOP
  4873                           
  4874                           ;incstack = 0
  4875                           ;DIO_TogglePin@portName stored from wreg
  4876   0011DC  6E04               	movwf	DIO_TogglePin@portName^0,c
  4877   0011DE                     
  4878                           ;gpio.c: 179:  switch(portName) {
  4879   0011DE  EF50  F009         	goto	l1945
  4880   0011E2                     l1933:
  4881   0011E2  FFFF               	dw	65535	; assembler added errata NOP
  4882                           
  4883                           ;gpio.c: 181:             (PORTA)^= 1<<(pinNo);
  4884   0011E4  C001  F002         	movff	DIO_TogglePin@pinNo,??_DIO_TogglePin
  4885   0011E8  0E01               	movlw	1
  4886   0011EA  6E03               	movwf	(??_DIO_TogglePin+1)^0,c
  4887   0011EC  2A02               	incf	??_DIO_TogglePin^0,f,c
  4888   0011EE  EFFC  F008         	goto	u1194
  4889   0011F2                     u1195:
  4890   0011F2  FFFF               	dw	65535	; assembler added errata NOP
  4891   0011F4  90D8               	bcf	status,0,c
  4892   0011F6  3603               	rlcf	(??_DIO_TogglePin+1)^0,f,c
  4893   0011F8                     u1194:
  4894   0011F8  FFFF               	dw	65535	; assembler added errata NOP
  4895   0011FA  2E02               	decfsz	??_DIO_TogglePin^0,f,c
  4896   0011FC  EFF9  F008         	goto	u1195
  4897   001200  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  4898   001202  1A80               	xorwf	128,f,c	;volatile
  4899                           
  4900                           ;gpio.c: 182:   break;
  4901   001204  EF73  F009         	goto	l226
  4902   001208                     l1935:
  4903   001208  FFFF               	dw	65535	; assembler added errata NOP
  4904                           
  4905                           ;gpio.c: 185:             (PORTB)^= 1<<(pinNo);
  4906   00120A  C001  F002         	movff	DIO_TogglePin@pinNo,??_DIO_TogglePin
  4907   00120E  0E01               	movlw	1
  4908   001210  6E03               	movwf	(??_DIO_TogglePin+1)^0,c
  4909   001212  2A02               	incf	??_DIO_TogglePin^0,f,c
  4910   001214  EF0F  F009         	goto	u1204
  4911   001218                     u1205:
  4912   001218  FFFF               	dw	65535	; assembler added errata NOP
  4913   00121A  90D8               	bcf	status,0,c
  4914   00121C  3603               	rlcf	(??_DIO_TogglePin+1)^0,f,c
  4915   00121E                     u1204:
  4916   00121E  FFFF               	dw	65535	; assembler added errata NOP
  4917   001220  2E02               	decfsz	??_DIO_TogglePin^0,f,c
  4918   001222  EF0C  F009         	goto	u1205
  4919   001226  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  4920   001228  1A81               	xorwf	129,f,c	;volatile
  4921                           
  4922                           ;gpio.c: 186:   break;
  4923   00122A  EF73  F009         	goto	l226
  4924   00122E                     l1937:
  4925   00122E  FFFF               	dw	65535	; assembler added errata NOP
  4926                           
  4927                           ;gpio.c: 189:             (PORTC)^= 1<<(pinNo);
  4928   001230  C001  F002         	movff	DIO_TogglePin@pinNo,??_DIO_TogglePin
  4929   001234  0E01               	movlw	1
  4930   001236  6E03               	movwf	(??_DIO_TogglePin+1)^0,c
  4931   001238  2A02               	incf	??_DIO_TogglePin^0,f,c
  4932   00123A  EF22  F009         	goto	u1214
  4933   00123E                     u1215:
  4934   00123E  FFFF               	dw	65535	; assembler added errata NOP
  4935   001240  90D8               	bcf	status,0,c
  4936   001242  3603               	rlcf	(??_DIO_TogglePin+1)^0,f,c
  4937   001244                     u1214:
  4938   001244  FFFF               	dw	65535	; assembler added errata NOP
  4939   001246  2E02               	decfsz	??_DIO_TogglePin^0,f,c
  4940   001248  EF1F  F009         	goto	u1215
  4941   00124C  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  4942   00124E  1A82               	xorwf	130,f,c	;volatile
  4943                           
  4944                           ;gpio.c: 190:   break;
  4945   001250  EF73  F009         	goto	l226
  4946   001254                     l1939:
  4947   001254  FFFF               	dw	65535	; assembler added errata NOP
  4948                           
  4949                           ;gpio.c: 193:             (PORTD)^= 1<<(pinNo);
  4950   001256  C001  F002         	movff	DIO_TogglePin@pinNo,??_DIO_TogglePin
  4951   00125A  0E01               	movlw	1
  4952   00125C  6E03               	movwf	(??_DIO_TogglePin+1)^0,c
  4953   00125E  2A02               	incf	??_DIO_TogglePin^0,f,c
  4954   001260  EF35  F009         	goto	u1224
  4955   001264                     u1225:
  4956   001264  FFFF               	dw	65535	; assembler added errata NOP
  4957   001266  90D8               	bcf	status,0,c
  4958   001268  3603               	rlcf	(??_DIO_TogglePin+1)^0,f,c
  4959   00126A                     u1224:
  4960   00126A  FFFF               	dw	65535	; assembler added errata NOP
  4961   00126C  2E02               	decfsz	??_DIO_TogglePin^0,f,c
  4962   00126E  EF32  F009         	goto	u1225
  4963   001272  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  4964   001274  1A83               	xorwf	131,f,c	;volatile
  4965                           
  4966                           ;gpio.c: 194:   break;
  4967   001276  EF73  F009         	goto	l226
  4968   00127A                     l1941:
  4969   00127A  FFFF               	dw	65535	; assembler added errata NOP
  4970                           
  4971                           ;gpio.c: 197:             (PORTE)^= 1<<(pinNo);
  4972   00127C  C001  F002         	movff	DIO_TogglePin@pinNo,??_DIO_TogglePin
  4973   001280  0E01               	movlw	1
  4974   001282  6E03               	movwf	(??_DIO_TogglePin+1)^0,c
  4975   001284  2A02               	incf	??_DIO_TogglePin^0,f,c
  4976   001286  EF48  F009         	goto	u1234
  4977   00128A                     u1235:
  4978   00128A  FFFF               	dw	65535	; assembler added errata NOP
  4979   00128C  90D8               	bcf	status,0,c
  4980   00128E  3603               	rlcf	(??_DIO_TogglePin+1)^0,f,c
  4981   001290                     u1234:
  4982   001290  FFFF               	dw	65535	; assembler added errata NOP
  4983   001292  2E02               	decfsz	??_DIO_TogglePin^0,f,c
  4984   001294  EF45  F009         	goto	u1235
  4985   001298  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  4986   00129A  1A84               	xorwf	132,f,c	;volatile
  4987                           
  4988                           ;gpio.c: 198:   break;
  4989   00129C  EF73  F009         	goto	l226
  4990   0012A0                     l1945:
  4991   0012A0  FFFF               	dw	65535	; assembler added errata NOP
  4992   0012A2  5004               	movf	DIO_TogglePin@portName^0,w,c
  4993   0012A4  6E02               	movwf	??_DIO_TogglePin^0,c
  4994   0012A6  6A03               	clrf	(??_DIO_TogglePin+1)^0,c
  4995                           
  4996                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4997                           ; Switch size 1, requested type "simple"
  4998                           ; Number of cases is 1, Range of values is 0 to 0
  4999                           ; switch strategies available:
  5000                           ; Name         Instructions Cycles
  5001                           ; simple_byte            4     3 (average)
  5002                           ;	Chosen strategy is simple_byte
  5003   0012A8  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  5004   0012AA  0A00               	xorlw	0	; case 0
  5005   0012AC  B4D8               	btfsc	status,2,c
  5006   0012AE  EF5B  F009         	goto	l2189
  5007   0012B2  EF73  F009         	goto	l226
  5008   0012B6                     l2189:
  5009   0012B6  FFFF               	dw	65535	; assembler added errata NOP
  5010                           
  5011                           ; Switch size 1, requested type "simple"
  5012                           ; Number of cases is 5, Range of values is 0 to 4
  5013                           ; switch strategies available:
  5014                           ; Name         Instructions Cycles
  5015                           ; simple_byte           16     9 (average)
  5016                           ;	Chosen strategy is simple_byte
  5017   0012B8  5002               	movf	??_DIO_TogglePin^0,w,c
  5018   0012BA  0A00               	xorlw	0	; case 0
  5019   0012BC  B4D8               	btfsc	status,2,c
  5020   0012BE  EFF1  F008         	goto	l1933
  5021   0012C2  0A01               	xorlw	1	; case 1
  5022   0012C4  B4D8               	btfsc	status,2,c
  5023   0012C6  EF04  F009         	goto	l1935
  5024   0012CA  0A03               	xorlw	3	; case 2
  5025   0012CC  B4D8               	btfsc	status,2,c
  5026   0012CE  EF17  F009         	goto	l1937
  5027   0012D2  0A01               	xorlw	1	; case 3
  5028   0012D4  B4D8               	btfsc	status,2,c
  5029   0012D6  EF2A  F009         	goto	l1939
  5030   0012DA  0A07               	xorlw	7	; case 4
  5031   0012DC  B4D8               	btfsc	status,2,c
  5032   0012DE  EF3D  F009         	goto	l1941
  5033   0012E2  EF73  F009         	goto	l226
  5034   0012E6                     l226:
  5035   0012E6  FFFF               	dw	65535	; assembler added errata NOP
  5036   0012E8  0012               	return		;funcret
  5037   0012EA  FFFF               	dw	65535	; errata NOP
  5038   0012EC                     __end_of_DIO_TogglePin:
  5039                           	callstack 0
  5040                           
  5041 ;; *************** function _Timer0_ISR *****************
  5042 ;; Defined at:
  5043 ;;		line 33 in file "main.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;		None
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1    wreg      void 
  5050 ;; Registers used:
  5051 ;;		wreg, status,2, status,0
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5057 ;;      Params:         0       0       0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0
  5060 ;;      Totals:         0       0       0       0       0       0       0
  5061 ;;Total ram usage:        0 bytes
  5062 ;; Hardware stack levels used: 1
  5063 ;; This function calls:
  5064 ;;		Nothing
  5065 ;; This function is called by:
  5066 ;;		Interrupt level 2
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	intcode
  5071   000008                     __pintcode:
  5072                           	callstack 0
  5073   000008                     _Timer0_ISR:
  5074                           	callstack 0
  5075   000008  FFFF               	dw	65535	; assembler added errata NOP
  5076                           
  5077                           ;incstack = 0
  5078   00000A  822A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5079   00000C                     
  5080                           ;main.c: 34:     if(TMR0IF){
  5081   00000C  A4F2               	btfss	4082,2,c	;volatile
  5082   00000E  EF0B  F000         	goto	i2u46_41
  5083   000012  EF0E  F000         	goto	i2u46_40
  5084   000016                     i2u46_41:
  5085   000016  FFFF               	dw	65535	; assembler added errata NOP
  5086   000018  EF1C  F000         	goto	i2l74
  5087   00001C                     i2u46_40:
  5088   00001C  FFFF               	dw	65535	; assembler added errata NOP
  5089   00001E                     
  5090                           ;main.c: 35:         TMR0IF = 0;
  5091   00001E  94F2               	bcf	4082,2,c	;volatile
  5092   000020                     
  5093                           ;main.c: 36:         TMR0H = 0xF0;
  5094   000020  0EF0               	movlw	240
  5095   000022  6ED7               	movwf	215,c	;volatile
  5096                           
  5097                           ;main.c: 37:         TMR0L = 0xBD;
  5098   000024  0EBD               	movlw	189
  5099   000026  6ED6               	movwf	214,c	;volatile
  5100   000028                     
  5101                           ;main.c: 40:         sysButtonTimer++;
  5102   000028  4A25               	infsnz	_sysButtonTimer^0,f,c
  5103   00002A  2A26               	incf	(_sysButtonTimer+1)^0,f,c
  5104   00002C                     
  5105                           ;main.c: 41:         activatedStateTimer++;
  5106   00002C  4A23               	infsnz	_activatedStateTimer^0,f,c
  5107   00002E  2A24               	incf	(_activatedStateTimer+1)^0,f,c
  5108   000030                     
  5109                           ;main.c: 42:         GateCloseTimer++;
  5110   000030  4A27               	infsnz	_GateCloseTimer^0,f,c
  5111   000032  2A28               	incf	(_GateCloseTimer+1)^0,f,c
  5112   000034                     
  5113                           ;main.c: 43:         emergencyTimer++;
  5114   000034  4A21               	infsnz	_emergencyTimer^0,f,c
  5115   000036  2A22               	incf	(_emergencyTimer+1)^0,f,c
  5116   000038                     i2l74:
  5117   000038  FFFF               	dw	65535	; assembler added errata NOP
  5118   00003A  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5119   00003C  0011               	retfie		f
  5120   00003E  FFFF               	dw	65535	; errata NOP
  5121   000040                     __end_of_Timer0_ISR:
  5122                           	callstack 0
  5123                           
  5124                           	psect	rparam
  5125   000000                     
  5126                           	psect	temp
  5127   00002A                     btemp:
  5128                           	callstack 0
  5129   00002A                     	ds	1
  5130   000000                     int$flags	set	btemp
  5131   000000                     wtemp8	set	btemp+1
  5132   000000                     ttemp5	set	btemp+1
  5133   000000                     ttemp6	set	btemp+4
  5134   000000                     ttemp7	set	btemp+8
  5135                           tosu	equ	0xFFF
  5136                           tosh	equ	0xFFE
  5137                           tosl	equ	0xFFD
  5138                           stkptr	equ	0xFFC
  5139                           pclatu	equ	0xFFB
  5140                           pclath	equ	0xFFA
  5141                           pcl	equ	0xFF9
  5142                           tblptru	equ	0xFF8
  5143                           tblptrh	equ	0xFF7
  5144                           tblptrl	equ	0xFF6
  5145                           tablat	equ	0xFF5
  5146                           prodh	equ	0xFF4
  5147                           prodl	equ	0xFF3
  5148                           indf0	equ	0xFEF
  5149                           postinc0	equ	0xFEE
  5150                           postdec0	equ	0xFED
  5151                           preinc0	equ	0xFEC
  5152                           plusw0	equ	0xFEB
  5153                           fsr0h	equ	0xFEA
  5154                           fsr0l	equ	0xFE9
  5155                           wreg	equ	0xFE8
  5156                           indf1	equ	0xFE7
  5157                           postinc1	equ	0xFE6
  5158                           postdec1	equ	0xFE5
  5159                           preinc1	equ	0xFE4
  5160                           plusw1	equ	0xFE3
  5161                           fsr1h	equ	0xFE2
  5162                           fsr1l	equ	0xFE1
  5163                           bsr	equ	0xFE0
  5164                           indf2	equ	0xFDF
  5165                           postinc2	equ	0xFDE
  5166                           postdec2	equ	0xFDD
  5167                           preinc2	equ	0xFDC
  5168                           plusw2	equ	0xFDB
  5169                           fsr2h	equ	0xFDA
  5170                           fsr2l	equ	0xFD9
  5171                           status	equ	0xFD8

Data Sizes:
    Strings     101
    Constant    0
    Data        3
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     27      41
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    LCD_displayString@Str	PTR unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[12]), STR_3(CODE[9]), STR_4(CODE[13]), STR_5(CODE[10]), 
		 -> STR_6(CODE[12]), STR_7(CODE[12]), STR_8(CODE[16]), STR_9(CODE[12]), 

    LCD_displayStringRowColumn@Str	PTR unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[12]), STR_3(CODE[9]), STR_4(CODE[13]), STR_5(CODE[10]), 
		 -> STR_6(CODE[12]), STR_7(CODE[12]), STR_8(CODE[16]), STR_9(CODE[12]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> main@passCode(COMRAM[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_LCD_displayStringRowColumn
    _pir_init->_DIO_SetPinDirection
    _pir_getState->_DIO_GetPinValue
    _motor_on->_DIO_SetPinValue
    _motor_off->_DIO_SetPinValue
    _motor_init->_DIO_SetPinDirection
    _motor_init->_DIO_SetPinValue
    _led_on->_DIO_SetPinValue
    _led_off->_DIO_SetPinValue
    _led_init->_DIO_SetPinDirection
    _keypad_read->_keypad_value
    _keypad_init->_DIO_SetPinDirection
    _buzzer_on->_DIO_SetPinValue
    _buzzer_off->_DIO_SetPinValue
    _buzzer_init->_DIO_SetPinDirection
    _button_init->_DIO_SetPinDirection
    _button_getState->_DIO_GetPinValue
    _LCD_init->_LCD_sendCommand
    _LCD_displayStringRowColumn->_LCD_displayString
    _LCD_displayStringRowColumn->_LCD_goToRowColumn
    _LCD_goToRowColumn->_LCD_sendCommand
    _LCD_displayString->_LCD_displayCharacter
    _LCD_displayCharacter->_DIO_SetPinValue
    _LCD_clearScreen->_LCD_sendCommand
    _LCD_sendCommand->_DIO_SetPinValue

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   94679
                                             13 COMRAM    14    14      0
                      _DIO_TogglePin
                    _LCD_clearScreen
               _LCD_displayCharacter
         _LCD_displayStringRowColumn
                  _LCD_goToRowColumn
                           _LCD_init
                        _Timer0_init
                    _button_getState
                        _button_init
                        _buzzer_init
                         _buzzer_off
                          _buzzer_on
                        _keypad_init
                        _keypad_read
                           _led_init
                            _led_off
                             _led_on
                         _motor_init
                          _motor_off
                           _motor_on
                       _pir_getState
                           _pir_init
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               3     1      2     264
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _pir_init                                             2     1      1    3816
                                              5 COMRAM     2     1      1
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _pir_getState                                         2     1      1     409
                                              5 COMRAM     2     1      1
                    _DIO_GetPinValue
 ---------------------------------------------------------------------------------
 (1) _motor_on                                             0     0      0    4608
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _motor_off                                            0     0      0    4608
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _motor_init                                           0     0      0    8304
                _DIO_SetPinDirection
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _led_on                                               2     1      1    4880
                                              5 COMRAM     2     1      1
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _led_off                                              2     1      1    4728
                                              5 COMRAM     2     1      1
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _led_init                                             2     1      1    3892
                                              5 COMRAM     2     1      1
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _keypad_read                                          2     2      0      30
                                              1 COMRAM     2     2      0
                   _keypad_line_scan
                       _keypad_value
 ---------------------------------------------------------------------------------
 (2) _keypad_value                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _keypad_line_scan                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0    3696
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _buzzer_on                                            2     1      1    4804
                                              5 COMRAM     2     1      1
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _buzzer_off                                           2     1      1    4804
                                              5 COMRAM     2     1      1
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _buzzer_init                                          2     1      1    3816
                                              5 COMRAM     2     1      1
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _button_init                                          2     1      1    3968
                                              5 COMRAM     2     1      1
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _button_getState                                      2     1      1     637
                                              5 COMRAM     2     1      1
                    _DIO_GetPinValue
 ---------------------------------------------------------------------------------
 (2) _DIO_GetPinValue                                      5     4      1     289
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0    9068
                _DIO_SetPinDirection
                   _DIO_SetPortValue
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (2) _DIO_SetPortValue                                     4     3      1     284
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _DIO_SetPinDirection                                  5     3      2    3696
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCD_displayStringRowColumn                           3     1      2   11913
                                             10 COMRAM     3     1      2
                  _LCD_displayString
                  _LCD_goToRowColumn
 ---------------------------------------------------------------------------------
 (1) _LCD_goToRowColumn                                    3     2      1    5377
                                              7 COMRAM     3     2      1
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (2) _LCD_displayString                                    3     2      1    5254
                                              7 COMRAM     3     2      1
               _LCD_displayCharacter
 ---------------------------------------------------------------------------------
 (3) _LCD_displayCharacter                                 2     2      0    5088
                                              5 COMRAM     2     2      0
                    _DIO_SetPinValue
          _DIO_SetUpperHalfPortValue
 ---------------------------------------------------------------------------------
 (1) _LCD_clearScreen                                      0     0      0    5088
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (2) _LCD_sendCommand                                      2     2      0    5088
                                              5 COMRAM     2     2      0
                    _DIO_SetPinValue
          _DIO_SetUpperHalfPortValue
 ---------------------------------------------------------------------------------
 (3) _DIO_SetUpperHalfPortValue                            4     3      1     436
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _DIO_SetPinValue                                      5     3      2    4608
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _DIO_TogglePin                                        4     3      1     208
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer0_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DIO_TogglePin
   _LCD_clearScreen
     _LCD_sendCommand
       _DIO_SetPinValue
       _DIO_SetUpperHalfPortValue
   _LCD_displayCharacter
     _DIO_SetPinValue
     _DIO_SetUpperHalfPortValue
   _LCD_displayStringRowColumn
     _LCD_displayString
       _LCD_displayCharacter
     _LCD_goToRowColumn
       _LCD_sendCommand
   _LCD_goToRowColumn
   _LCD_init
     _DIO_SetPinDirection
     _DIO_SetPortValue
     _LCD_sendCommand
   _Timer0_init
   _button_getState
     _DIO_GetPinValue
   _button_init
     _DIO_SetPinDirection
   _buzzer_init
     _DIO_SetPinDirection
   _buzzer_off
     _DIO_SetPinValue
   _buzzer_on
     _DIO_SetPinValue
   _keypad_init
     _DIO_SetPinDirection
   _keypad_read
     _keypad_line_scan
     _keypad_value
   _led_init
     _DIO_SetPinDirection
   _led_off
     _DIO_SetPinValue
   _led_on
     _DIO_SetPinValue
   _motor_init
     _DIO_SetPinDirection
     _DIO_SetPinValue
   _motor_off
     _DIO_SetPinValue
   _motor_on
     _DIO_SetPinValue
   _pir_getState
     _DIO_GetPinValue
   _pir_init
     _DIO_SetPinDirection
   _strcmp

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1B      29       1       32.5%
BITBIGSFRlllh       2A      0       0      19        0.0%
BITBIGSFRlh         1A      0       0      17        0.0%
BITBIGSFRllh        13      0       0      18        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllll        D      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      29      21        0.0%
DATA                 0      0      29       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Apr 16 17:46:43 2024

                                                    l90 079E  
                                                    l77 1B0C  
                                     ??_DIO_GetPinValue 0002  
                                                   l200 1680  
                                                   l202 168A  
                                                   l203 1694  
                                                   l204 169E  
                                                   l205 16A8  
                                                   l109 0BA2  
                                                   l117 0B4C  
                                                   l302 1B3C  
                                                   l206 16F8  
                                                   l216 15DE  
                                                   l312 1954  
                                                   l233 18C2  
                                                   l226 12E6  
                                                   l322 1A9E  
                                                   l315 1992  
                                                   l244 13C0  
                                                   l260 1A00  
                                                   l341 1ACA  
                                                   l325 1A72  
                                                   l309 17EA  
                                                   l166 0E6C  
                                                   l191 11D4  
                                                   l351 1B30  
                                                   l335 1AE0  
                                                   l239 1A2C  
                                                   l328 1A88  
                                                   l281 1484  
                                                   l361 1B1E  
                                                   l186 10AA  
                                                   l338 1AB4  
                                                   l291 17FA  
                                                   l275 1674  
                                                   l348 1AF6  
                                                   l278 1546  
                                                   l358 1A5C  
                                                   l287 1916  
                                                   l296 185A  
                                                   l299 1A46  
                                                   _GIE 7F97  
                                                   u360 1A20  
                                                   u361 1A1A  
                                                   u380 19EC  
                                                   u381 19E6  
                                                   u810 0E8E  
                                                   u811 0E88  
                                                   u900 0FB4  
                                                   u901 0FAE  
                                                   u840 0EF0  
                                                   u824 0EA4  
                                                   u841 0EEA  
                                                   u825 0E9E  
                                                   u930 1016  
                                                   u914 0FCA  
                                                   u834 0ECC  
                                                   u931 1010  
                                                   u915 0FC4  
                                                   u835 0EC6  
                                                   u924 0FF2  
                                                   u925 0FEC  
                                                   u870 0F52  
                                                   u854 0F06  
                                                   u871 0F4C  
                                                   u855 0F00  
                                                   u944 102C  
                                                   u864 0F2E  
                                                   u960 0C50  
                                                   u945 1026  
                                                   u865 0F28  
                                                   u961 0C4A  
                                                   u954 1054  
                                                   u955 104E  
                                                   u884 0F68  
                                                   u885 0F62  
                                                   u894 0F90  
                                                   u990 0CB2  
                                                   u974 0C66  
                                                   u895 0F8A  
                                                   u991 0CAC  
                                                   u975 0C60  
                                                   u984 0C8E  
                                                   u985 0C88  
                                                   wreg 0FE8  
                                     ??_button_getState 0007  
                                        _GateCloseTimer 0027  
                                                  l2001 071E  
                                                  l1043 1774  
                                                  l2011 0792  
                                                  l2003 0740  
                                                  l2101 0A40  
                                                  l2021 07CE  
                                                  l2013 0796  
                                                  l2005 074C  
                                                  l1303 132C  
                                                  l2111 0A84  
                                                  l2103 0A4E  
                                                  l2031 0820  
                                                  l2023 07E4  
                                                  l2015 079A  
                                                  l2007 0754  
                                                  l1321 1344  
                                                  l2121 0AF2  
                                                  l2113 0AA4  
                                                  l2105 0A6E  
                                                  l2041 0868  
                                                  l2033 0824  
                                                  l2025 07F2  
                                                  l2017 07BE  
                                                  l2009 0772  
                                                  l1315 133C  
                                                  l2131 0B44  
                                                  l2123 0B12  
                                                  l2115 0AB8  
                                                  l2107 0A76  
                                                  l2051 08B8  
                                                  l2043 0878  
                                                  l2035 083A  
                                                  l2027 0806  
                                                  l2019 07CA  
                                                  l1253 1A08  
                                                  l1309 1334  
                                                  l1261 12F4  
                                                  l2141 0BBE  
                                                  l2133 0B5C  
                                                  l2125 0B26  
                                                  l2117 0AC6  
                                                  l2109 0A80  
                                                  l2053 08CC  
                                                  l2061 0904  
                                                  l2045 0884  
                                                  l2037 084E  
                                                  l2029 080C  
                                                  l1351 1B08  
                                                  l1255 1A22  
                                                  l1327 134C  
                                                  l1335 1354  
                                                  l2151 0C1C  
                                                  l2143 0BD2  
                                                  l2135 0B7C  
                                                  l2127 0B34  
                                                  l2119 0AD0  
                                                  l2071 093C  
                                                  l2063 090A  
                                                  l2055 08D4  
                                                  l2039 0864  
                                                  l2047 088A  
                                                  l1353 1B0A  
                                                  l1257 1A26  
                                                  l1337 13BC  
                                                  l1273 1304  
                                                  l2153 0C28  
                                                  l2145 0BE6  
                                                  l2137 0B90  
                                                  l2129 0B40  
                                                  l2081 0982  
                                                  l2073 0940  
                                                  l2065 0918  
                                                  l2057 08EA  
                                                  l2049 0896  
                                                  l1291 131C  
                                                  l1267 12FC  
                                                  l1259 12F0  
                                                  l2147 0BF8  
                                                  l2091 09EE  
                                                  l2083 0990  
                                                  l2139 0BA8  
                                                  l2059 08F2  
                                                  l2067 0932  
                                                  l2075 0944  
                                                  l1701 1018  
                                                  l2181 16C8  
                                                  l1349 1AFC  
                                                  l1285 1314  
                                                  l1381 19D0  
                                                  l2149 0C0E  
                                                  l2093 09F8  
                                                  l2085 09B2  
                                                  l2077 095A  
                                                  l2069 0938  
                                                  l1703 103E  
                                                  l2183 0E3C  
                                                  l1279 130C  
                                                  l1391 19FC  
                                                  l1383 19D4  
                                                  l2095 0A00  
                                                  l2087 09C0  
                                                  l2079 096E  
                                                  l2185 15AE  
                                                  l1721 157C  
                                                  l1713 154E  
                                                  l1801 0D00  
                                                  l1297 1324  
                                                  l1385 19EE  
                                                  l2089 09CC  
                                                  l2097 0A0A  
                                                  l2187 107A  
                                                  l1707 1064  
                                                  l1723 158A  
                                                  l1715 1552  
                                                  l1811 0D9E  
                                                  l1803 0D16  
                                                  l2179 11A0  
                                                  l1387 19F6  
                                                  l2099 0A2C  
                                                  l2189 12B6  
                                                  l1717 1560  
                                                  l1741 1414  
                                                  l1733 13CA  
                                                  l1813 0DC4  
                                                  l1805 0D3C  
                                                  l1821 0E26  
                                                  l1901 1A90  
                                                  l1719 156E  
                                                  l1727 1598  
                                                  l1751 147A  
                                                  l1743 142C  
                                                  l1735 13E6  
                                                  l1911 1A34  
                                                  l1815 0DDA  
                                                  l1807 0D62  
                                                  l1903 1A64  
                                                  l1681 0EDC  
                                                  l1673 0E76  
                                                  l1761 14D6  
                                                  l1753 148C  
                                                  l1745 1436  
                                                  l1737 13F0  
                                                  l1913 1A3E  
                                                  l1817 0E00  
                                                  l1809 0D78  
                                                  l1841 1118  
                                                  l1905 1B26  
                                                  l1921 1738  
                                                  l1931 11DE  
                                                  l1691 0F7A  
                                                  l1683 0EF2  
                                                  l1675 0E7A  
                                                  l1771 153C  
                                                  l1763 14EE  
                                                  l1755 14A8  
                                                  l1747 144E  
                                                  l1739 1408  
                                                  l1835 10F2  
                                                  l1827 10B4  
                                                  l1923 1750  
                                                  l1915 1700  
                                                  l1941 127A  
                                                  l1933 11E2  
                                                  l1693 0FA0  
                                                  l1685 0F18  
                                                  l1677 0E90  
                                                  l1765 14F8  
                                                  l1757 14B2  
                                                  l1909 1B36  
                                                  l1749 1462  
                                                  l1773 17F2  
                                                  l1853 1164  
                                                  l1829 10CC  
                                                  l1861 118A  
                                                  l1917 1704  
                                                  l1935 1208  
                                                  l1695 0FB6  
                                                  l1687 0F3E  
                                                  l1679 0EB6  
                                                  l1767 1510  
                                                  l1759 14CA  
                                                  l1775 1804  
                                                  l1783 1828  
                                                  l1791 0C52  
                                                  l1871 167C  
                                                  l1863 11D0  
                                                  l1847 113E  
                                                  l1927 1AA6  
                                                  l1951 191C  
                                                  l1919 170A  
                                                  l1937 122E  
                                                  l1945 12A0  
                                                  l1697 0FDC  
                                                  l1689 0F54  
                                                  l1769 1524  
                                                  l1881 18C8  
                                                  l1777 1810  
                                                  l1785 1850  
                                                  l1793 0C78  
                                                  l1929 1ABC  
                                                  l1953 1B14  
                                                  l1961 0668  
                                                  l1939 1254  
                                                  l1699 1002  
                                                  l1883 18D0  
                                                  l1779 181C  
                                                  l1795 0C9E  
                                                  l1787 0C38  
                                                  l1875 16B2  
                                                  l1891 1860  
                                                  l1971 068E  
                                                  l1963 0676  
                                                  l1885 18EA  
                                                  l1797 0CB4  
                                                  l1789 0C3C  
                                                  l1957 1A7A  
                                                  l1893 177A  
                                                  l1981 06A8  
                                                  l1973 0692  
                                                  l1965 0682  
                                                  l1887 18EC  
                                                  l1799 0CDA  
                                                  l1895 1AE8  
                                                  l1959 195A  
                                                  l1991 06DA  
                                                  l1983 06B2  
                                                  l1975 0696  
                                                  l1967 0686  
                                                  l1889 15E6  
                                                  l1897 1A4E  
                                                  l1993 06E4  
                                                  l1985 06BC  
                                                  l1977 069A  
                                                  l1969 068A  
                                                  l1899 1AD2  
                                                  l1995 06EE  
                                                  l1987 06C6  
                                                  l1979 069E  
                                                  l1997 06F2  
                                                  l1989 06D0  
                                                  l1999 0712  
                                                  STR_1 061E  
                                                  STR_2 0661  
                                                  STR_3 0658  
                                                  STR_4 0611  
                                                  STR_5 064E  
                                                  STR_6 062A  
                                                  STR_7 0636  
                                                  STR_8 0601  
                                                  STR_9 0642  
                                                  u1020 0D14  
                                                  u1004 0CC8  
                                                  u1021 0D0E  
                                                  u1005 0CC2  
                                                  u1014 0CF0  
                                                  u1015 0CEA  
                                                  u1104 0E16  
                                                  u1105 0E10  
                                                  u1050 0D76  
                                                  u1034 0D2A  
                                                  u1114 10E2  
                                                  u1051 0D70  
                                                  u1035 0D24  
                                                  u1115 10DC  
                                                  u1204 121E  
                                                  u1044 0D52  
                                                  u1124 1108  
                                                  u1300 07E2  
                                                  u1205 1218  
                                                  u1045 0D4C  
                                                  u1125 1102  
                                                  u1301 07DC  
                                                  u1214 1244  
                                                  u1134 112E  
                                                  u1310 0804  
                                                  u1215 123E  
                                                  u1135 1128  
                                                  u1311 07FE  
                                                  u1224 126A  
                                                  u1160 1914  
                                                  u1080 0DD8  
                                                  u1064 0D8C  
                                                  u1144 1154  
                                                  u1400 096C  
                                                  u1320 081E  
                                                  u1225 1264  
                                                  u1161 190E  
                                                  u1081 0DD2  
                                                  u1065 0D86  
                                                  u1145 114E  
                                                  u1401 0966  
                                                  u1321 0818  
                                                  u1241 067C  
                                                  u1234 1290  
                                                  u1074 0DB4  
                                                  u1154 117A  
                                                  u1170 1736  
                                                  u1410 0980  
                                                  u1330 0838  
                                                  u1250 0710  
                                                  u1235 128A  
                                                  u1075 0DAE  
                                                  u1155 1174  
                                                  u1171 1730  
                                                  u1411 097A  
                                                  u1331 0832  
                                                  u1251 070A  
                                                  u1180 1750  
                                                  u1500 0B10  
                                                  u1420 09B0  
                                                  u1340 084C  
                                                  u1260 073E  
                                                  u1181 174A  
                                                  u1501 0B0A  
                                                  u1421 09AA  
                                                  u1341 0846  
                                                  u1261 0738  
                                                  u1094 0DEE  
                                                  u1510 0B24  
                                                  u1430 09EC  
                                                  u1350 0862  
                                                  u1270 0772  
                                                  u1095 0DE8  
                                                  u1511 0B1E  
                                                  u1431 09E6  
                                                  u1351 085C  
                                                  u1271 076C  
                                                  u1520 0B7A  
                                                  u1440 0A2A  
                                                  u1360 08B6  
                                                  u1280 0790  
                                                  u1521 0B74  
                                                  u1441 0A24  
                                                  u1361 08B0  
                                                  u1281 078A  
                                                  u1194 11F8  
                                                  u1530 0B8E  
                                                  u1450 0A3E  
                                                  u1370 08CA  
                                                  u1290 07BC  
                                                  u1195 11F2  
                                                  u1531 0B88  
                                                  u1451 0A38  
                                                  u1371 08C4  
                                                  u1291 07B6  
                                                  u1540 0BBC  
                                                  u1460 0A6C  
                                                  u1380 08E8  
                                                  u1541 0BB6  
                                                  u1461 0A66  
                                                  u1381 08E2  
                                                  u1550 0BD0  
                                                  u1470 0AA2  
                                                  u1390 0958  
                                                  u1607 1400  
                                                  u1551 0BCA  
                                                  u1471 0A9C  
                                                  u1391 0952  
                                                  u1560 0BE4  
                                                  u1480 0AB6  
                                                  u1617 1416  
                                                  u1561 0BDE  
                                                  u1481 0AB0  
                                                  u1570 0C0C  
                                                  u1490 0AF0  
                                                  u1707 1508  
                                                  u1627 142E  
                                                  u1571 0C06  
                                                  u1491 0AEA  
                                                  u1717 1526  
                                                  u1637 1446  
                                                  u1727 153E  
                                                  u1647 1464  
                                                  u1657 147C  
                                                  u1667 14AA  
                                                  u1587 0922  
                                                  u1677 14C2  
                                                  u1597 13E8  
                                                  u1687 14D8  
                                                  u1697 14F0  
                                                  i2l74 0038  
                                                  _main 0668  
                                                  fsr2h 0FDA  
                                                  indf2 0FDF  
                                                  fsr2l 0FD9  
                                                  btemp 002A  
                                           led_on@pinNo 0006  
                                           led_off@port 0007  
                                                  start 0040  
                              DIO_SetPortValue@portName 0004  
                                          ___param_bank 0000  
                                       ??_DIO_TogglePin 0002  
                                      __end_of_LCD_init 1678  
                                                 ?_main 0001  
                                                 _T0CON 0FD5  
                                                 _TMR0H 0FD7  
                                                 _TMR0L 0FD6  
                                                 _PORTA 0F80  
                                                 _PORTB 0F81  
                                                 _PORTC 0F82  
                                                 _PORTD 0F83  
                                                 _PORTE 0F84  
                                                 _TRISA 0F92  
                                                 _TRISB 0F93  
                                                 _TRISC 0F94  
                                                 _TRISD 0F95  
                                                 _TRISE 0F96  
                                          ?_button_init 0006  
                                          main@passCode 0010  
                                    LCD_displayString@i 000A  
                                       __end_of_led_off 1A8C  
                                          ?_keypad_init 0001  
                                          ?_keypad_read 0001  
                                          led_off@pinNo 0006  
                                                 tablat 0FF5  
                                                 ttemp5 002B  
                                                 ttemp6 002E  
                                                 ttemp7 0032  
                                                 status 0FD8  
                                                 wtemp8 002B  
                              __end_of_keypad_line_scan 1A30  
                                          led_init@port 0007  
                                          ?_buzzer_init 0006  
                                       __initialization 1996  
                                     ??_LCD_clearScreen 0008  
                                          __end_of_main 0C34  
                                   button_getState@port 0007  
                                         buzzer_on@port 0007  
                                                ??_main 000E  
                                         __activetblptr 0002  
                           DIO_SetPinDirection@portName 0005  
                                                _ADCON1 0FC1  
                              LCD_goToRowColumn@Address 000A  
                                                i2l1441 000C  
                                                i2l1451 0030  
                                                i2l1443 001E  
                                                i2l1453 0034  
                                                i2l1445 0020  
                                                i2l1447 0028  
                                                i2l1449 002C  
                                                _TMR0IE 7F95  
                                                _TMR0IF 7F92  
                                    main@keypad_reading 001A  
                                            _Timer0_ISR 0008  
                              __end_of_DIO_SetPortValue 16FE  
                                         main@buzzerSet 0015  
                                         ??_Timer0_init 0001  
                                      __end_of_led_init 1AA2  
                                      buzzer_init@pinNo 0006  
                                                _led_on 1A60  
                                         ?_keypad_value 0001  
                                                clear_0 19BA  
                                                isa$std 0001  
                                                _strcmp 16FE  
                                             ??_led_off 0007  
                                     ??_DIO_SetPinValue 0003  
                                      __end_of_pir_init 1A60  
                                          __pdataCOMRAM 0027  
                                      __end_of_motor_on 1958  
                                          __mediumconst 0000  
                                                tblptrh 0FF7  
                                                tblptrl 0FF6  
                                                tblptru 0FF8  
                                         led_init@pinNo 0006  
                                            __accesstop 0080  
                               __end_of__initialization 19C0  
                                             ?_LCD_init 0001  
                                         ___rparam_used 0001  
                                       _DIO_GetPinValue 10B0  
                                        __pcstackCOMRAM 0001  
                                        ??_keypad_value 0001  
                                       _button_getState 1B22  
                                   __end_of_Timer0_init 1B10  
                                  button_getState@pinNo 0006  
                                        buzzer_on@pinNo 0006  
                                        buzzer_off@port 0007  
                                      button_init@pinNo 0006  
                                            ??_LCD_init 0008  
                            keypad_line_scan@keypadScan 0029  
                                           ?_Timer0_ISR 0001  
                                         ?_pir_getState 0006  
                                               ?_led_on 0006  
                                    main@emergencyState 0017  
                                               ?_strcmp 0001  
                                     ??_LCD_sendCommand 0006  
                                               i2u46_40 001C  
                                               i2u46_41 0016  
                                             ?_led_init 0006  
                                       _LCD_clearScreen 1B34  
                               __end_of_DIO_GetPinValue 11DA  
                                   keypad_read@keyValue 0003  
                                     ?_keypad_line_scan 0001  
                               __end_of_button_getState 1B34  
                                  LCD_displayString@Str 0008  
                                               __Hparam 0000  
                                             ?_pir_init 0006  
                                               __Lparam 0000  
                                    ??_keypad_line_scan 0001  
                                        ??_pir_getState 0007  
                                           _Timer0_init 1AFA  
                                             ?_motor_on 0001  
                                LCD_sendCommand@command 0007  
                                          __psmallconst 0600  
                                               __pcinit 1996  
                                               __ramtop 0600  
                                   _DIO_SetPinDirection 0C34  
                                               __ptext0 0668  
                                               __ptext1 16FE  
                                               __ptext2 1A4A  
                                               __ptext3 1B10  
                                               __ptext4 191A  
                                               __ptext5 1958  
                                               __ptext6 1778  
                                               __ptext7 1A60  
                                               __ptext8 1A76  
                                               __ptext9 1A8C  
                                 __end_of_DIO_TogglePin 12EC  
                                               _led_off 1A76  
                                            _buzzer_off 1AB8  
                     DIO_SetUpperHalfPortValue@portName 0004  
                                     __end_of_buzzer_on 1AB8  
                                   _activatedStateTimer 0023  
                                            ??_led_init 0007  
                                  end_of_initialization 19C0  
                                  __end_of_keypad_value 13C6  
                                  ?_DIO_SetPinDirection 0001  
                                         __Lmediumconst 0000  
                                     __end_of_motor_off 1996  
                                        _sysButtonTimer 0025  
                                  DIO_GetPinValue@flush 0005  
                                  DIO_GetPinValue@pinNo 0001  
                                  DIO_SetPinValue@pinNo 0001  
                                            ??_pir_init 0007  
                                  DIO_SetPinValue@value 0002  
                                     ?_DIO_SetPortValue 0001  
                                       _DIO_SetPinValue 0E72  
                                            ??_motor_on 0006  
                                               postinc0 0FEE  
                                               postinc2 0FDE  
                                    ??_DIO_SetPortValue 0002  
                                            _motor_init 1778  
                          ??_LCD_displayStringRowColumn 000D  
                                               strcmp@l 0001  
                                               strcmp@r 0002  
                                      main@last_reading 0016  
                               __end_of_LCD_clearScreen 1B40  
                                 ??_DIO_SetPinDirection 0003  
                                      ?_DIO_GetPinValue 0001  
                         LCD_displayStringRowColumn@Str 000C  
                         LCD_displayStringRowColumn@col 000B  
                         LCD_displayStringRowColumn@row 000D  
                                      ?_button_getState 0006  
                                            led_on@port 0007  
                                         pir_init@pinNo 0006  
                                         __pidataCOMRAM 1B40  
                                        __end_of_led_on 1A76  
                                        __end_of_strcmp 1778  
                                   start_initialization 1996  
                                           ?_buzzer_off 0006  
                                  __end_of_pir_getState 1B22  
                            ?_DIO_SetUpperHalfPortValue 0001  
                               __end_of_DIO_SetPinValue 10B0  
                                    DIO_TogglePin@pinNo 0001  
                                       buzzer_off@pinNo 0006  
                                      main@inputCounter 0019  
                                          ??_Timer0_ISR 0001  
                                       _LCD_sendCommand 1488  
                                       buzzer_init@port 0007  
                                           ?_motor_init 0001  
                                              ??_led_on 0007  
                                              ??_strcmp 0003  
                                         ??_button_init 0007  
                                           __pbssCOMRAM 001C  
                                      ?_LCD_clearScreen 0001  
                          __end_of_LCD_displayCharacter 1488  
                                         ??_keypad_init 0006  
                                         ??_keypad_read 0002  
                                    __end_of_Timer0_ISR 0040  
                                     _LCD_goToRowColumn 17EE  
                     __end_of_DIO_SetUpperHalfPortValue 15E4  
                                    ?_LCD_goToRowColumn 0008  
                                       button_init@port 0007  
                                         ??_buzzer_init 0007  
                                          ?_Timer0_init 0001  
                                   ??_LCD_goToRowColumn 0009  
                                             __pintcode 0008  
                    __end_of_LCD_displayStringRowColumn 1A4A  
                            _LCD_displayStringRowColumn 1A30  
                                          _keypad_value 12EC  
                                              ?_led_off 0006  
                                           __smallconst 0600  
                             __end_of_LCD_goToRowColumn 185E  
                               DIO_GetPinValue@portName 0004  
                                 DIO_TogglePin@portName 0004  
                               DIO_SetPinValue@portName 0005  
                                   __end_of_button_init 1AFA  
                                             _buzzer_on 1AA2  
                                      ?_DIO_SetPinValue 0001  
                               __end_of_LCD_sendCommand 154A  
                                   __end_of_keypad_init 18C6  
                                   __end_of_keypad_read 1A06  
                                              _LCD_init 15E4  
                                 keypad_value@portValue 0001  
                                             main@F2447 001C  
                                             _motor_off 1958  
                                   __end_of_buzzer_init 1AE4  
                                 DIO_SetPortValue@value 0001  
                                          pir_init@port 0007  
                                       main@passCodeReq 001B  
                                            ?_buzzer_on 0006  
                                              __Hrparam 0000  
                                              __Lrparam 0000  
                                            ?_motor_off 0001  
                                          _pir_getState 1B10  
                                  _LCD_displayCharacter 13C6  
                                          ??_buzzer_off 0007  
                                           _button_init 1AE4  
                           __end_of_DIO_SetPinDirection 0E72  
                                              __ptext10 19CE  
                                              __ptext11 12EC  
                                              __ptext20 1AFA  
                                              __ptext12 1A06  
                                              __ptext21 15E4  
                                              __ptext13 185E  
                                              __ptext30 154A  
                                              __ptext22 1678  
                                              __ptext14 1AA2  
                                              __ptext31 0E72  
                                              __ptext23 0C34  
                                              __ptext15 1AB8  
                                              __ptext32 11DA  
                                              __ptext24 1A30  
                                              __ptext16 1ACE  
                                              __ptext25 17EE  
                                              __ptext17 1AE4  
                                              __ptext26 18C6  
                                              __ptext18 1B22  
                                              __ptext27 13C6  
                                              __ptext19 10B0  
                                              __ptext28 1B34  
                                              __ptext29 1488  
                                           _keypad_init 185E  
                                           _keypad_read 19CE  
                                              _led_init 1A8C  
                           ??_DIO_SetUpperHalfPortValue 0002  
                              DIO_SetPinDirection@pinNo 0001  
                                      ?_LCD_sendCommand 0001  
                          DIO_SetPinDirection@direction 0002  
                                           _buzzer_init 1ACE  
                                     pir_getState@pinNo 0006  
                                              _pir_init 1A4A  
                                     _LCD_displayString 18C6  
                                              _motor_on 191A  
                                 ?_LCD_displayCharacter 0001  
                                              isa$xinst 0000  
                                    __end_of_buzzer_off 1ACE  
                                    ?_LCD_displayString 0008  
                                              int$flags 002A  
                                          ??_motor_init 0006  
                                              main@mode 0018  
                                      _keypad_line_scan 1A06  
                                        _emergencyTimer 0021  
                                   ??_LCD_displayString 0009  
                                  LCD_goToRowColumn@col 0008  
                                  LCD_goToRowColumn@row 0009  
                                         _DIO_TogglePin 11DA  
                              LCD_displayCharacter@data 0007  
                                              intlevel2 1B44  
                        DIO_SetUpperHalfPortValue@value 0001  
                                           ??_buzzer_on 0007  
                                    __end_of_motor_init 17EE  
                             __end_of_LCD_displayString 191A  
                                      pir_getState@port 0007  
                                           ??_motor_off 0006  
                           ?_LCD_displayStringRowColumn 000B  
                             _DIO_SetUpperHalfPortValue 154A  
                                        ?_DIO_TogglePin 0001  
                                      _DIO_SetPortValue 1678  
                                ??_LCD_displayCharacter 0006  
