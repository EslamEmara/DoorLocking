

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Apr 16 19:05:37 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    48   000000                     
    49                           ; Generated 17/10/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F452 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     
    84                           	psect	idataCOMRAM
    85   001B84                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for _GateCloseTimer
    89   001B84  0014               	dw	20
    90                           
    91                           ;initializer for keypad_line_scan@keypadScan
    92   001B86  01                 	db	1
    93   000000                     _GIE	set	32663
    94   000000                     _TMR0IE	set	32661
    95   000000                     _PORTE	set	3972
    96   000000                     _PORTD	set	3971
    97   000000                     _PORTC	set	3970
    98   000000                     _PORTB	set	3969
    99   000000                     _PORTA	set	3968
   100   000000                     _TRISA	set	3986
   101   000000                     _ADCON1	set	4033
   102   000000                     _T0CON	set	4053
   103   000000                     _TMR0L	set	4054
   104   000000                     _TMR0H	set	4055
   105   000000                     _TMR0IF	set	32658
   106   000000                     _TRISE	set	3990
   107   000000                     _TRISD	set	3989
   108   000000                     _TRISC	set	3988
   109   000000                     _TRISB	set	3987
   110                           
   111                           	psect	smallconst
   112   000600                     __psmallconst:
   113                           	callstack 0
   114   000600  00                 	db	0
   115   000601                     STR_8:
   116   000601  4E                 	db	78	;'N'
   117   000602  4F                 	db	79	;'O'
   118   000603  20                 	db	32
   119   000604  45                 	db	69	;'E'
   120   000605  52                 	db	82	;'R'
   121   000606  3A                 	db	58	;':'
   122   000607  20                 	db	32
   123   000608  44                 	db	68	;'D'
   124   000609  45                 	db	69	;'E'
   125   00060A  41                 	db	65	;'A'
   126   00060B  43                 	db	67	;'C'
   127   00060C  54                 	db	84	;'T'
   128   00060D  49                 	db	73	;'I'
   129   00060E  56                 	db	86	;'V'
   130   00060F  45                 	db	69	;'E'
   131   000610  00                 	db	0
   132   000611                     STR_4:
   133   000611  39                 	db	57	;'9'
   134   000612  39                 	db	57	;'9'
   135   000613  3A                 	db	58	;':'
   136   000614  47                 	db	71	;'G'
   137   000615  41                 	db	65	;'A'
   138   000616  54                 	db	84	;'T'
   139   000617  45                 	db	69	;'E'
   140   000618  20                 	db	32
   141   000619  4F                 	db	79	;'O'
   142   00061A  50                 	db	80	;'P'
   143   00061B  45                 	db	69	;'E'
   144   00061C  4E                 	db	78	;'N'
   145   00061D  00                 	db	0
   146   00061E                     STR_1:
   147   00061E  50                 	db	80	;'P'
   148   00061F  61                 	db	97	;'a'
   149   000620  73                 	db	115	;'s'
   150   000621  73                 	db	115	;'s'
   151   000622  20                 	db	32
   152   000623  63                 	db	99	;'c'
   153   000624  6F                 	db	111	;'o'
   154   000625  64                 	db	100	;'d'
   155   000626  65                 	db	101	;'e'
   156   000627  3A                 	db	58	;':'
   157   000628  20                 	db	32
   158   000629  00                 	db	0
   159   00062A                     STR_6:
   160   00062A  47                 	db	71	;'G'
   161   00062B  41                 	db	65	;'A'
   162   00062C  54                 	db	84	;'T'
   163   00062D  45                 	db	69	;'E'
   164   00062E  20                 	db	32
   165   00062F  4F                 	db	79	;'O'
   166   000630  50                 	db	80	;'P'
   167   000631  45                 	db	69	;'E'
   168   000632  4E                 	db	78	;'N'
   169   000633  45                 	db	69	;'E'
   170   000634  44                 	db	68	;'D'
   171   000635  00                 	db	0
   172   000636                     STR_7:
   173   000636  47                 	db	71	;'G'
   174   000637  41                 	db	65	;'A'
   175   000638  54                 	db	84	;'T'
   176   000639  45                 	db	69	;'E'
   177   00063A  20                 	db	32
   178   00063B  43                 	db	67	;'C'
   179   00063C  4C                 	db	76	;'L'
   180   00063D  4F                 	db	79	;'O'
   181   00063E  53                 	db	83	;'S'
   182   00063F  45                 	db	69	;'E'
   183   000640  44                 	db	68	;'D'
   184   000641  00                 	db	0
   185   000642                     STR_9:
   186   000642  44                 	db	68	;'D'
   187   000643  65                 	db	101	;'e'
   188   000644  61                 	db	97	;'a'
   189   000645  63                 	db	99	;'c'
   190   000646  74                 	db	116	;'t'
   191   000647  69                 	db	105	;'i'
   192   000648  76                 	db	118	;'v'
   193   000649  61                 	db	97	;'a'
   194   00064A  74                 	db	116	;'t'
   195   00064B  65                 	db	101	;'e'
   196   00064C  64                 	db	100	;'d'
   197   00064D  00                 	db	0
   198   00064E                     STR_5:
   199   00064E  41                 	db	65	;'A'
   200   00064F  63                 	db	99	;'c'
   201   000650  74                 	db	116	;'t'
   202   000651  69                 	db	105	;'i'
   203   000652  76                 	db	118	;'v'
   204   000653  61                 	db	97	;'a'
   205   000654  74                 	db	116	;'t'
   206   000655  65                 	db	101	;'e'
   207   000656  64                 	db	100	;'d'
   208   000657  00                 	db	0
   209   000658                     STR_3:
   210   000658  50                 	db	80	;'P'
   211   000659  41                 	db	65	;'A'
   212   00065A  53                 	db	83	;'S'
   213   00065B  53                 	db	83	;'S'
   214   00065C  20                 	db	32
   215   00065D  45                 	db	69	;'E'
   216   00065E  52                 	db	82	;'R'
   217   00065F  52                 	db	82	;'R'
   218   000660  00                 	db	0
   219   000661                     STR_2:
   220   000661  31                 	db	49	;'1'
   221   000662  32                 	db	50	;'2'
   222   000663  33                 	db	51	;'3'
   223   000664  34                 	db	52	;'4'
   224   000665  00                 	db	0
   225   000666  00                 	db	0	; dummy byte at the end
   226   000000                     
   227                           ; #config settings
   228                           
   229                           	psect	cinit
   230   0019DA                     __pcinit:
   231                           	callstack 0
   232   0019DA                     start_initialization:
   233                           	callstack 0
   234   0019DA                     __initialization:
   235                           	callstack 0
   236                           
   237                           ; Initialize objects allocated to COMRAM (3 bytes)
   238                           ; load TBLPTR registers with __pidataCOMRAM
   239   0019DA  0E84               	movlw	low __pidataCOMRAM
   240   0019DC  6EF6               	movwf	tblptrl,c
   241   0019DE  0E1B               	movlw	high __pidataCOMRAM
   242   0019E0  6EF7               	movwf	tblptrh,c
   243   0019E2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   244   0019E4  6EF8               	movwf	tblptru,c
   245   0019E6  0009               	tblrd		*+	;fetch initializer
   246   0019E8  CFF5 F02B          	movff	tablat,__pdataCOMRAM
   247   0019EC  0009               	tblrd		*+	;fetch initializer
   248   0019EE  CFF5 F02C          	movff	tablat,__pdataCOMRAM+1
   249   0019F2  0009               	tblrd		*+	;fetch initializer
   250   0019F4  CFF5 F02D          	movff	tablat,__pdataCOMRAM+2
   251                           
   252                           ; Clear objects allocated to COMRAM (13 bytes)
   253   0019F8  EE00  F01E         	lfsr	0,__pbssCOMRAM
   254   0019FC  0E0D               	movlw	13
   255   0019FE                     clear_0:
   256   0019FE  6AEE               	clrf	postinc0,c
   257   001A00  06E8               	decf	wreg,f,c
   258   001A02  E1FD               	bnz	clear_0
   259   001A04                     end_of_initialization:
   260                           	callstack 0
   261   001A04                     __end_of__initialization:
   262                           	callstack 0
   263   001A04  902E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   264   001A06  922E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   265   001A08  0E00               	movlw	low (__Lmediumconst shr (0+16))
   266   001A0A  6EF8               	movwf	tblptru,c
   267   001A0C  0100               	movlb	0
   268   001A0E  EF34  F003         	goto	_main	;jump to C main() function
   269                           
   270                           	psect	bssCOMRAM
   271   00001E                     __pbssCOMRAM:
   272                           	callstack 0
   273   00001E                     	ds	5
   274   000023                     _rstButtonTimer:
   275                           	callstack 0
   276   000023                     	ds	2
   277   000025                     _emergencyTimer:
   278                           	callstack 0
   279   000025                     	ds	2
   280   000027                     _activatedStateTimer:
   281                           	callstack 0
   282   000027                     	ds	2
   283   000029                     _sysButtonTimer:
   284                           	callstack 0
   285   000029                     	ds	2
   286                           
   287                           	psect	dataCOMRAM
   288   00002B                     __pdataCOMRAM:
   289                           	callstack 0
   290   00002B                     _GateCloseTimer:
   291                           	callstack 0
   292   00002B                     	ds	2
   293   00002D                     keypad_line_scan@keypadScan:
   294                           	callstack 0
   295   00002D                     	ds	1
   296                           
   297                           	psect	cstackCOMRAM
   298   000001                     __pcstackCOMRAM:
   299                           	callstack 0
   300   000001                     ?_strcmp:
   301                           	callstack 0
   302   000001                     DIO_SetPinDirection@pinNo:
   303                           	callstack 0
   304   000001                     DIO_SetPinValue@pinNo:
   305                           	callstack 0
   306   000001                     DIO_GetPinValue@pinNo:
   307                           	callstack 0
   308   000001                     DIO_SetPortValue@value:
   309                           	callstack 0
   310   000001                     DIO_SetUpperHalfPortValue@value:
   311                           	callstack 0
   312   000001                     DIO_TogglePin@pinNo:
   313                           	callstack 0
   314   000001                     keypad_value@portValue:
   315                           	callstack 0
   316   000001                     strcmp@l:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x0
   320   000001                     	ds	1
   321   000002                     ??_keypad_read:
   322   000002                     ??_DIO_TogglePin:
   323   000002                     ??_DIO_GetPinValue:
   324   000002                     ??_DIO_SetPortValue:
   325   000002                     ??_DIO_SetUpperHalfPortValue:
   326   000002                     DIO_SetPinDirection@direction:
   327                           	callstack 0
   328   000002                     DIO_SetPinValue@value:
   329                           	callstack 0
   330   000002                     strcmp@r:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x1
   334   000002                     	ds	1
   335   000003                     ??_strcmp:
   336   000003                     ??_DIO_SetPinDirection:
   337   000003                     ??_DIO_SetPinValue:
   338   000003                     keypad_read@keyValue:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x2
   342   000003                     	ds	1
   343   000004                     DIO_GetPinValue@portName:
   344                           	callstack 0
   345   000004                     DIO_SetPortValue@portName:
   346                           	callstack 0
   347   000004                     DIO_SetUpperHalfPortValue@portName:
   348                           	callstack 0
   349   000004                     DIO_TogglePin@portName:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x3
   353   000004                     	ds	1
   354   000005                     DIO_SetPinDirection@portName:
   355                           	callstack 0
   356   000005                     DIO_SetPinValue@portName:
   357                           	callstack 0
   358   000005                     DIO_GetPinValue@flush:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0x4
   362   000005                     	ds	1
   363   000006                     ??_LCD_displayCharacter:
   364   000006                     ??_LCD_sendCommand:
   365   000006                     led_init@pinNo:
   366                           	callstack 0
   367   000006                     led_on@pinNo:
   368                           	callstack 0
   369   000006                     led_off@pinNo:
   370                           	callstack 0
   371   000006                     buzzer_init@pinNo:
   372                           	callstack 0
   373   000006                     buzzer_on@pinNo:
   374                           	callstack 0
   375   000006                     buzzer_off@pinNo:
   376                           	callstack 0
   377   000006                     button_init@pinNo:
   378                           	callstack 0
   379   000006                     button_getState@pinNo:
   380                           	callstack 0
   381   000006                     pir_init@pinNo:
   382                           	callstack 0
   383   000006                     pir_getState@pinNo:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x5
   387   000006                     	ds	1
   388   000007                     LCD_sendCommand@command:
   389                           	callstack 0
   390   000007                     LCD_displayCharacter@data:
   391                           	callstack 0
   392   000007                     led_init@port:
   393                           	callstack 0
   394   000007                     led_on@port:
   395                           	callstack 0
   396   000007                     led_off@port:
   397                           	callstack 0
   398   000007                     buzzer_init@port:
   399                           	callstack 0
   400   000007                     buzzer_on@port:
   401                           	callstack 0
   402   000007                     buzzer_off@port:
   403                           	callstack 0
   404   000007                     button_init@port:
   405                           	callstack 0
   406   000007                     button_getState@port:
   407                           	callstack 0
   408   000007                     pir_init@port:
   409                           	callstack 0
   410   000007                     pir_getState@port:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x6
   414   000007                     	ds	1
   415   000008                     LCD_displayString@Str:
   416                           	callstack 0
   417   000008                     LCD_goToRowColumn@col:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0x7
   421   000008                     	ds	1
   422   000009                     ??_LCD_displayString:
   423   000009                     LCD_goToRowColumn@row:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x8
   427   000009                     	ds	1
   428   00000A                     LCD_displayString@i:
   429                           	callstack 0
   430   00000A                     LCD_goToRowColumn@Address:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x9
   434   00000A                     	ds	1
   435   00000B                     LCD_displayStringRowColumn@col:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0xA
   439   00000B                     	ds	1
   440   00000C                     LCD_displayStringRowColumn@Str:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0xB
   444   00000C                     	ds	1
   445   00000D                     LCD_displayStringRowColumn@row:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0xC
   449   00000D                     	ds	1
   450   00000E                     ??_main:
   451                           
   452                           ; 1 bytes @ 0xD
   453   00000E                     	ds	2
   454   000010                     main@passCode:
   455                           	callstack 0
   456                           
   457                           ; 5 bytes @ 0xF
   458   000010                     	ds	5
   459   000015                     main@buzzerSet:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x14
   463   000015                     	ds	1
   464   000016                     main@last_reading:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x15
   468   000016                     	ds	1
   469   000017                     main@rstFirstPress:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x16
   473   000017                     	ds	1
   474   000018                     main@sysFirstPress:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x17
   478   000018                     	ds	1
   479   000019                     main@emergencyState:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x18
   483   000019                     	ds	1
   484   00001A                     main@mode:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x19
   488   00001A                     	ds	1
   489   00001B                     main@inputCounter:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x1A
   493   00001B                     	ds	1
   494   00001C                     main@keypad_reading:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x1B
   498   00001C                     	ds	1
   499   00001D                     main@passCodeReq:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x1C
   503   00001D                     	ds	1
   504                           
   505 ;;
   506 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   507 ;;
   508 ;; *************** function _main *****************
   509 ;; Defined at:
   510 ;;		line 56 in file "main.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;  passCode        5   15[COMRAM] unsigned char [5]
   515 ;;  passCodeReq     1   28[COMRAM] unsigned char 
   516 ;;  keypad_readi    1   27[COMRAM] unsigned char 
   517 ;;  inputCounter    1   26[COMRAM] unsigned char 
   518 ;;  mode            1   25[COMRAM] enum E2432
   519 ;;  emergencySta    1   24[COMRAM] unsigned char 
   520 ;;  sysFirstPres    1   23[COMRAM] unsigned char 
   521 ;;  rstFirstPres    1   22[COMRAM] unsigned char 
   522 ;;  last_reading    1   21[COMRAM] unsigned char 
   523 ;;  buzzerSet       1   20[COMRAM] unsigned char 
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   533 ;;      Params:         0       0       0       0       0       0       0
   534 ;;      Locals:        14       0       0       0       0       0       0
   535 ;;      Temps:          2       0       0       0       0       0       0
   536 ;;      Totals:        16       0       0       0       0       0       0
   537 ;;Total ram usage:       16 bytes
   538 ;; Hardware stack levels required when called: 5
   539 ;; This function calls:
   540 ;;		_DIO_TogglePin
   541 ;;		_LCD_clearScreen
   542 ;;		_LCD_displayCharacter
   543 ;;		_LCD_displayStringRowColumn
   544 ;;		_LCD_goToRowColumn
   545 ;;		_LCD_init
   546 ;;		_Timer0_init
   547 ;;		_button_getState
   548 ;;		_button_init
   549 ;;		_buzzer_init
   550 ;;		_buzzer_off
   551 ;;		_buzzer_on
   552 ;;		_keypad_init
   553 ;;		_keypad_read
   554 ;;		_led_init
   555 ;;		_led_off
   556 ;;		_led_on
   557 ;;		_motor_init
   558 ;;		_motor_off
   559 ;;		_motor_on
   560 ;;		_pir_getState
   561 ;;		_pir_init
   562 ;;		_strcmp
   563 ;; This function is called by:
   564 ;;		Startup code after reset
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           	psect	text0
   569   000668                     __ptext0:
   570                           	callstack 0
   571   000668                     _main:
   572                           	callstack 26
   573   000668  FFFF               	dw	65535	; assembler added errata NOP
   574                           
   575                           ;main.c: 58:     uint8_t inputCounter = 0;
   576   00066A  0E00               	movlw	0
   577   00066C  6E1B               	movwf	main@inputCounter^0,c
   578                           
   579                           ;main.c: 59:     uint8_t emergencyState = 0;
   580   00066E  0E00               	movlw	0
   581   000670  6E19               	movwf	main@emergencyState^0,c
   582                           
   583                           ;main.c: 60:     uint8_t buzzerSet = 0;
   584   000672  0E00               	movlw	0
   585   000674  6E15               	movwf	main@buzzerSet^0,c
   586                           
   587                           ;main.c: 61:     uint8_t rstFirstPress = 0;
   588   000676  0E00               	movlw	0
   589   000678  6E17               	movwf	main@rstFirstPress^0,c
   590                           
   591                           ;main.c: 62:     uint8_t sysFirstPress = 0;
   592   00067A  0E00               	movlw	0
   593   00067C  6E18               	movwf	main@sysFirstPress^0,c
   594   00067E                     
   595                           ;main.c: 64:     char passCode[5] = {0};
   596   00067E  EE20  F010         	lfsr	2,main@passCode
   597   000682  0E04               	movlw	4
   598   000684                     u1261:
   599   000684  6ADE               	clrf	postinc2,c
   600   000686  06E8               	decf	wreg,f,c
   601   000688  E2FD               	bc	u1261
   602   00068A                     
   603                           ;main.c: 66:     uint8_t passCodeReq = 0;
   604   00068A  0E00               	movlw	0
   605   00068C  6E1D               	movwf	main@passCodeReq^0,c
   606   00068E                     
   607                           ;main.c: 67:     Modes_t mode = ACTIVATED;
   608   00068E  0E00               	movlw	0
   609   000690  6E1A               	movwf	main@mode^0,c
   610   000692                     
   611                           ;main.c: 69:     ADCON1 = 0x07;
   612   000692  0E07               	movlw	7
   613   000694  6EC1               	movwf	193,c	;volatile
   614   000696                     
   615                           ;main.c: 70:     Timer0_init();
   616   000696  EC9F  F00D         	call	_Timer0_init	;wreg free
   617   00069A                     
   618                           ;main.c: 73:     LCD_init();
   619   00069A  EC14  F00B         	call	_LCD_init	;wreg free
   620   00069E                     
   621                           ;main.c: 74:     keypad_init();
   622   00069E  EC51  F00C         	call	_keypad_init	;wreg free
   623   0006A2                     
   624                           ;main.c: 75:     motor_init();
   625   0006A2  ECDE  F00B         	call	_motor_init	;wreg free
   626   0006A6                     
   627                           ;main.c: 76:     button_init(PORT_A,4);
   628   0006A6  0E04               	movlw	4
   629   0006A8  6E06               	movwf	button_init@pinNo^0,c
   630   0006AA  0E00               	movlw	0
   631   0006AC  EC94  F00D         	call	_button_init
   632   0006B0                     
   633                           ;main.c: 77:     button_init(PORT_A,3);
   634   0006B0  0E03               	movlw	3
   635   0006B2  6E06               	movwf	button_init@pinNo^0,c
   636   0006B4  0E00               	movlw	0
   637   0006B6  EC94  F00D         	call	_button_init
   638   0006BA                     
   639                           ;main.c: 78:     button_init(PORT_A,5);
   640   0006BA  0E05               	movlw	5
   641   0006BC  6E06               	movwf	button_init@pinNo^0,c
   642   0006BE  0E00               	movlw	0
   643   0006C0  EC94  F00D         	call	_button_init
   644   0006C4                     
   645                           ;main.c: 79:     pir_init(PORT_A,2);
   646   0006C4  0E02               	movlw	2
   647   0006C6  6E06               	movwf	pir_init@pinNo^0,c
   648   0006C8  0E00               	movlw	0
   649   0006CA  EC47  F00D         	call	_pir_init
   650   0006CE                     
   651                           ;main.c: 80:     buzzer_init(PORT_A,0);
   652   0006CE  0E00               	movlw	0
   653   0006D0  6E06               	movwf	buzzer_init@pinNo^0,c
   654   0006D2  0E00               	movlw	0
   655   0006D4  EC89  F00D         	call	_buzzer_init
   656   0006D8                     
   657                           ;main.c: 81:     led_init(PORT_B,4);
   658   0006D8  0E04               	movlw	4
   659   0006DA  6E06               	movwf	led_init@pinNo^0,c
   660   0006DC  0E01               	movlw	1
   661   0006DE  EC68  F00D         	call	_led_init
   662   0006E2                     
   663                           ;main.c: 82:     led_init(PORT_B,5);
   664   0006E2  0E05               	movlw	5
   665   0006E4  6E06               	movwf	led_init@pinNo^0,c
   666   0006E6  0E01               	movlw	1
   667   0006E8  EC68  F00D         	call	_led_init
   668   0006EC                     
   669                           ;main.c: 83:     led_on(PORT_B,4);
   670   0006EC  0E04               	movlw	4
   671   0006EE  6E06               	movwf	led_on@pinNo^0,c
   672   0006F0  0E01               	movlw	1
   673   0006F2  EC52  F00D         	call	_led_on
   674   0006F6                     
   675                           ;main.c: 85:     uint8_t last_reading = 0;
   676   0006F6  0E00               	movlw	0
   677   0006F8  6E16               	movwf	main@last_reading^0,c
   678   0006FA                     l2015:
   679   0006FA  FFFF               	dw	65535	; assembler added errata NOP
   680                           
   681                           ;main.c: 87:         if(button_getState(PORT_A,3)== HIGH){
   682   0006FC  0E03               	movlw	3
   683   0006FE  6E06               	movwf	button_getState@pinNo^0,c
   684   000700  0E00               	movlw	0
   685   000702  ECB3  F00D         	call	_button_getState
   686   000706  06E8               	decf	wreg,f,c
   687   000708  A4D8               	btfss	status,2,c
   688   00070A  EF89  F003         	goto	u1271
   689   00070E  EF8C  F003         	goto	u1270
   690   000712                     u1271:
   691   000712  FFFF               	dw	65535	; assembler added errata NOP
   692   000714  EFB6  F003         	goto	l2027
   693   000718                     u1270:
   694   000718  FFFF               	dw	65535	; assembler added errata NOP
   695   00071A                     
   696                           ;main.c: 88:             if(sysFirstPress){
   697   00071A  5018               	movf	main@sysFirstPress^0,w,c
   698   00071C  B4D8               	btfsc	status,2,c
   699   00071E  EF93  F003         	goto	u1281
   700   000722  EF96  F003         	goto	u1280
   701   000726                     u1281:
   702   000726  FFFF               	dw	65535	; assembler added errata NOP
   703   000728  EF9D  F003         	goto	l2021
   704   00072C                     u1280:
   705   00072C  FFFF               	dw	65535	; assembler added errata NOP
   706   00072E                     
   707                           ;main.c: 89:                sysButtonTimer = 0;
   708   00072E  0E00               	movlw	0
   709   000730  6E2A               	movwf	(_sysButtonTimer+1)^0,c
   710   000732  0E00               	movlw	0
   711   000734  6E29               	movwf	_sysButtonTimer^0,c
   712                           
   713                           ;main.c: 90:                sysFirstPress = 0;
   714   000736  0E00               	movlw	0
   715   000738  6E18               	movwf	main@sysFirstPress^0,c
   716   00073A                     l2021:
   717   00073A  FFFF               	dw	65535	; assembler added errata NOP
   718                           
   719                           ;main.c: 92:             if(sysButtonTimer >=3){
   720   00073C  BE2A               	btfsc	(_sysButtonTimer+1)^0,7,c
   721   00073E  EFAA  F003         	goto	u1291
   722   000742  502A               	movf	(_sysButtonTimer+1)^0,w,c
   723   000744  E10A               	bnz	u1290
   724   000746  0E03               	movlw	3
   725   000748  5C29               	subwf	_sysButtonTimer^0,w,c
   726   00074A  A0D8               	btfss	status,0,c
   727   00074C  EFAA  F003         	goto	u1291
   728   000750  EFAD  F003         	goto	u1290
   729   000754                     u1291:
   730   000754  FFFF               	dw	65535	; assembler added errata NOP
   731   000756  EFB9  F003         	goto	l2031
   732   00075A                     u1290:
   733   00075A  FFFF               	dw	65535	; assembler added errata NOP
   734   00075C                     
   735                           ;main.c: 93:                 passCodeReq = 1;
   736   00075C  0E01               	movlw	1
   737   00075E  6E1D               	movwf	main@passCodeReq^0,c
   738                           
   739                           ;main.c: 94:                 passCode[0] = '\0';
   740   000760  0E00               	movlw	0
   741   000762  6E10               	movwf	main@passCode^0,c
   742                           
   743                           ;main.c: 95:                 inputCounter = 0;
   744   000764  0E00               	movlw	0
   745   000766  6E1B               	movwf	main@inputCounter^0,c
   746   000768                     
   747                           ;main.c: 96:                 LCD_clearScreen();
   748   000768  ECBC  F00D         	call	_LCD_clearScreen	;wreg free
   749   00076C                     l2027:
   750   00076C  FFFF               	dw	65535	; assembler added errata NOP
   751                           
   752                           ;main.c: 97:                 sysFirstPress = 1;
   753   00076E  0E01               	movlw	1
   754   000770  6E18               	movwf	main@sysFirstPress^0,c
   755   000772                     l2031:
   756   000772  FFFF               	dw	65535	; assembler added errata NOP
   757                           
   758                           ;main.c: 104:          if(button_getState(PORT_A,5)== HIGH){
   759   000774  0E05               	movlw	5
   760   000776  6E06               	movwf	button_getState@pinNo^0,c
   761   000778  0E00               	movlw	0
   762   00077A  ECB3  F00D         	call	_button_getState
   763   00077E  06E8               	decf	wreg,f,c
   764   000780  A4D8               	btfss	status,2,c
   765   000782  EFC5  F003         	goto	u1301
   766   000786  EFC8  F003         	goto	u1300
   767   00078A                     u1301:
   768   00078A  FFFF               	dw	65535	; assembler added errata NOP
   769   00078C  EFCD  F003         	goto	l2035
   770   000790                     u1300:
   771   000790  FFFF               	dw	65535	; assembler added errata NOP
   772   000792                     
   773                           ;main.c: 106:              emergencyState = 1;
   774   000792  0E01               	movlw	1
   775   000794  6E19               	movwf	main@emergencyState^0,c
   776                           
   777                           ;main.c: 107:              passCodeReq=0;
   778   000796  0E00               	movlw	0
   779   000798  6E1D               	movwf	main@passCodeReq^0,c
   780   00079A                     l2035:
   781   00079A  FFFF               	dw	65535	; assembler added errata NOP
   782                           
   783                           ;main.c: 110:          if(button_getState(PORT_A,4)== HIGH){
   784   00079C  0E04               	movlw	4
   785   00079E  6E06               	movwf	button_getState@pinNo^0,c
   786   0007A0  0E00               	movlw	0
   787   0007A2  ECB3  F00D         	call	_button_getState
   788   0007A6  06E8               	decf	wreg,f,c
   789   0007A8  A4D8               	btfss	status,2,c
   790   0007AA  EFD9  F003         	goto	u1311
   791   0007AE  EFDC  F003         	goto	u1310
   792   0007B2                     u1311:
   793   0007B2  FFFF               	dw	65535	; assembler added errata NOP
   794   0007B4  EF06  F004         	goto	l2047
   795   0007B8                     u1310:
   796   0007B8  FFFF               	dw	65535	; assembler added errata NOP
   797   0007BA                     
   798                           ;main.c: 111:              if(rstFirstPress){
   799   0007BA  5017               	movf	main@rstFirstPress^0,w,c
   800   0007BC  B4D8               	btfsc	status,2,c
   801   0007BE  EFE3  F003         	goto	u1321
   802   0007C2  EFE6  F003         	goto	u1320
   803   0007C6                     u1321:
   804   0007C6  FFFF               	dw	65535	; assembler added errata NOP
   805   0007C8  EFED  F003         	goto	l2041
   806   0007CC                     u1320:
   807   0007CC  FFFF               	dw	65535	; assembler added errata NOP
   808   0007CE                     
   809                           ;main.c: 112:                  rstButtonTimer =0;
   810   0007CE  0E00               	movlw	0
   811   0007D0  6E24               	movwf	(_rstButtonTimer+1)^0,c
   812   0007D2  0E00               	movlw	0
   813   0007D4  6E23               	movwf	_rstButtonTimer^0,c
   814                           
   815                           ;main.c: 113:                  rstFirstPress = 0;
   816   0007D6  0E00               	movlw	0
   817   0007D8  6E17               	movwf	main@rstFirstPress^0,c
   818   0007DA                     l2041:
   819   0007DA  FFFF               	dw	65535	; assembler added errata NOP
   820                           
   821                           ;main.c: 115:              if(rstButtonTimer>=8){
   822   0007DC  BE24               	btfsc	(_rstButtonTimer+1)^0,7,c
   823   0007DE  EFFA  F003         	goto	u1331
   824   0007E2  5024               	movf	(_rstButtonTimer+1)^0,w,c
   825   0007E4  E10A               	bnz	u1330
   826   0007E6  0E08               	movlw	8
   827   0007E8  5C23               	subwf	_rstButtonTimer^0,w,c
   828   0007EA  A0D8               	btfss	status,0,c
   829   0007EC  EFFA  F003         	goto	u1331
   830   0007F0  EFFD  F003         	goto	u1330
   831   0007F4                     u1331:
   832   0007F4  FFFF               	dw	65535	; assembler added errata NOP
   833   0007F6  EF09  F004         	goto	l2051
   834   0007FA                     u1330:
   835   0007FA  FFFF               	dw	65535	; assembler added errata NOP
   836   0007FC                     
   837                           ;main.c: 116:                     passCodeReq = 1;
   838   0007FC  0E01               	movlw	1
   839   0007FE  6E1D               	movwf	main@passCodeReq^0,c
   840                           
   841                           ;main.c: 117:                     passCode[0] = '\0';
   842   000800  0E00               	movlw	0
   843   000802  6E10               	movwf	main@passCode^0,c
   844                           
   845                           ;main.c: 118:                     inputCounter = 0;
   846   000804  0E00               	movlw	0
   847   000806  6E1B               	movwf	main@inputCounter^0,c
   848   000808                     
   849                           ;main.c: 119:                     LCD_clearScreen();
   850   000808  ECBC  F00D         	call	_LCD_clearScreen	;wreg free
   851   00080C                     l2047:
   852   00080C  FFFF               	dw	65535	; assembler added errata NOP
   853                           
   854                           ;main.c: 120:                     rstFirstPress =1;
   855   00080E  0E01               	movlw	1
   856   000810  6E17               	movwf	main@rstFirstPress^0,c
   857   000812                     l2051:
   858   000812  FFFF               	dw	65535	; assembler added errata NOP
   859                           
   860                           ;main.c: 127:         if(passCodeReq == 1){
   861   000814  041D               	decf	main@passCodeReq^0,w,c
   862   000816  A4D8               	btfss	status,2,c
   863   000818  EF10  F004         	goto	u1341
   864   00081C  EF13  F004         	goto	u1340
   865   000820                     u1341:
   866   000820  FFFF               	dw	65535	; assembler added errata NOP
   867   000822  EFC4  F004         	goto	l2105
   868   000826                     u1340:
   869   000826  FFFF               	dw	65535	; assembler added errata NOP
   870   000828                     
   871                           ;main.c: 128:             LCD_displayStringRowColumn(0,0,"Pass code: ");
   872   000828  0E00               	movlw	0
   873   00082A  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
   874   00082C  0E1E               	movlw	low STR_1
   875   00082E  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
   876   000830  0E00               	movlw	0
   877   000832  EC3A  F00D         	call	_LCD_displayStringRowColumn
   878   000836                     
   879                           ;main.c: 129:             if(inputCounter<4){
   880   000836  0E04               	movlw	4
   881   000838  601B               	cpfslt	main@inputCounter^0,c
   882   00083A  EF21  F004         	goto	u1351
   883   00083E  EF24  F004         	goto	u1350
   884   000842                     u1351:
   885   000842  FFFF               	dw	65535	; assembler added errata NOP
   886   000844  EF67  F004         	goto	l2077
   887   000848                     u1350:
   888   000848  FFFF               	dw	65535	; assembler added errata NOP
   889   00084A                     
   890                           ;main.c: 130:                 keypad_reading=keypad_read();
   891   00084A  EC09  F00D         	call	_keypad_read	;wreg free
   892   00084E  6E1C               	movwf	main@keypad_reading^0,c
   893   000850                     
   894                           ;main.c: 131:                 if(keypad_reading == 0) last_reading = 0;
   895   000850  501C               	movf	main@keypad_reading^0,w,c
   896   000852  A4D8               	btfss	status,2,c
   897   000854  EF2E  F004         	goto	u1361
   898   000858  EF31  F004         	goto	u1360
   899   00085C                     u1361:
   900   00085C  FFFF               	dw	65535	; assembler added errata NOP
   901   00085E  EF34  F004         	goto	l2063
   902   000862                     u1360:
   903   000862  FFFF               	dw	65535	; assembler added errata NOP
   904   000864  0E00               	movlw	0
   905   000866  6E16               	movwf	main@last_reading^0,c
   906   000868                     l2063:
   907   000868  FFFF               	dw	65535	; assembler added errata NOP
   908                           
   909                           ;main.c: 135:                 if(keypad_reading != 255 && keypad_reading != 0 && keypad_
      +                          reading != last_reading){
   910   00086A  281C               	incf	main@keypad_reading^0,w,c
   911   00086C  B4D8               	btfsc	status,2,c
   912   00086E  EF3B  F004         	goto	u1371
   913   000872  EF3E  F004         	goto	u1370
   914   000876                     u1371:
   915   000876  FFFF               	dw	65535	; assembler added errata NOP
   916   000878  EFC4  F004         	goto	l2105
   917   00087C                     u1370:
   918   00087C  FFFF               	dw	65535	; assembler added errata NOP
   919   00087E  501C               	movf	main@keypad_reading^0,w,c
   920   000880  B4D8               	btfsc	status,2,c
   921   000882  EF45  F004         	goto	u1381
   922   000886  EF48  F004         	goto	u1380
   923   00088A                     u1381:
   924   00088A  FFFF               	dw	65535	; assembler added errata NOP
   925   00088C  EFC4  F004         	goto	l2105
   926   000890                     u1380:
   927   000890  FFFF               	dw	65535	; assembler added errata NOP
   928   000892  5016               	movf	main@last_reading^0,w,c
   929   000894  181C               	xorwf	main@keypad_reading^0,w,c
   930   000896  B4D8               	btfsc	status,2,c
   931   000898  EF50  F004         	goto	u1391
   932   00089C  EF53  F004         	goto	u1390
   933   0008A0                     u1391:
   934   0008A0  FFFF               	dw	65535	; assembler added errata NOP
   935   0008A2  EFC4  F004         	goto	l2105
   936   0008A6                     u1390:
   937   0008A6  FFFF               	dw	65535	; assembler added errata NOP
   938   0008A8                     
   939                           ;main.c: 136:                     last_reading = keypad_reading;
   940   0008A8  C01C  F016         	movff	main@keypad_reading,main@last_reading
   941   0008AC                     
   942                           ;main.c: 137:                     LCD_goToRowColumn(1,inputCounter);
   943   0008AC  C01B  F008         	movff	main@inputCounter,LCD_goToRowColumn@col
   944   0008B0  0E01               	movlw	1
   945   0008B2  EC19  F00C         	call	_LCD_goToRowColumn
   946                           
   947                           ;main.c: 138:                     LCD_displayCharacter(keypad_reading);
   948   0008B6  501C               	movf	main@keypad_reading^0,w,c
   949   0008B8  EC05  F00A         	call	_LCD_displayCharacter
   950   0008BC                     
   951                           ;main.c: 139:                     passCode[inputCounter] = keypad_reading;
   952   0008BC  501B               	movf	main@inputCounter^0,w,c
   953   0008BE  0F10               	addlw	low main@passCode
   954   0008C0  6ED9               	movwf	fsr2l,c
   955   0008C2  6ADA               	clrf	fsr2h,c
   956   0008C4  C01C  FFDF         	movff	main@keypad_reading,indf2
   957   0008C8                     
   958                           ;main.c: 140:                     inputCounter++;
   959   0008C8  2A1B               	incf	main@inputCounter^0,f,c
   960   0008CA  EFC4  F004         	goto	l2105
   961   0008CE                     l2077:
   962   0008CE  FFFF               	dw	65535	; assembler added errata NOP
   963                           
   964                           ;main.c: 144:                 passCode[inputCounter] = '\0';
   965   0008D0  501B               	movf	main@inputCounter^0,w,c
   966   0008D2  0F10               	addlw	low main@passCode
   967   0008D4  6ED9               	movwf	fsr2l,c
   968   0008D6  6ADA               	clrf	fsr2h,c
   969   0008D8  6ADF               	clrf	indf2,c
   970   0008DA                     
   971                           ;main.c: 145:                 if (strcmp(passCode,"1234")==0){
   972   0008DA  0E10               	movlw	low main@passCode
   973   0008DC  6E01               	movwf	strcmp@l^0,c
   974   0008DE  0E61               	movlw	low STR_2
   975   0008E0  6E02               	movwf	strcmp@r^0,c
   976   0008E2  ECA1  F00B         	call	_strcmp	;wreg free
   977   0008E6  5001               	movf	?_strcmp^0,w,c
   978   0008E8  1002               	iorwf	(?_strcmp+1)^0,w,c
   979   0008EA  A4D8               	btfss	status,2,c
   980   0008EC  EF7A  F004         	goto	u1401
   981   0008F0  EF7D  F004         	goto	u1400
   982   0008F4                     u1401:
   983   0008F4  FFFF               	dw	65535	; assembler added errata NOP
   984   0008F6  EFA4  F004         	goto	l2091
   985   0008FA                     u1400:
   986   0008FA  FFFF               	dw	65535	; assembler added errata NOP
   987   0008FC                     
   988                           ;main.c: 146:                     if(emergencyState){
   989   0008FC  5019               	movf	main@emergencyState^0,w,c
   990   0008FE  B4D8               	btfsc	status,2,c
   991   000900  EF84  F004         	goto	u1411
   992   000904  EF87  F004         	goto	u1410
   993   000908                     u1411:
   994   000908  FFFF               	dw	65535	; assembler added errata NOP
   995   00090A  EF8C  F004         	goto	l2085
   996   00090E                     u1410:
   997   00090E  FFFF               	dw	65535	; assembler added errata NOP
   998   000910                     
   999                           ;main.c: 147:                         emergencyState =0;
  1000   000910  0E00               	movlw	0
  1001   000912  6E19               	movwf	main@emergencyState^0,c
  1002                           
  1003                           ;main.c: 148:                     }
  1004   000914  EFBB  F004         	goto	l2097
  1005   000918                     l2085:
  1006   000918  FFFF               	dw	65535	; assembler added errata NOP
  1007                           
  1008                           ;main.c: 150:                         if (mode == ACTIVATED)
  1009   00091A  501A               	movf	main@mode^0,w,c
  1010   00091C  A4D8               	btfss	status,2,c
  1011   00091E  EF93  F004         	goto	u1421
  1012   000922  EF96  F004         	goto	u1420
  1013   000926                     u1421:
  1014   000926  FFFF               	dw	65535	; assembler added errata NOP
  1015   000928  EF9B  F004         	goto	l2089
  1016   00092C                     u1420:
  1017   00092C  FFFF               	dw	65535	; assembler added errata NOP
  1018   00092E                     
  1019                           ;main.c: 151:                             mode = DEACTIVATED;
  1020   00092E  0E01               	movlw	1
  1021   000930  6E1A               	movwf	main@mode^0,c
  1022   000932  EFBB  F004         	goto	l2097
  1023   000936                     l2089:
  1024   000936  FFFF               	dw	65535	; assembler added errata NOP
  1025                           
  1026                           ;main.c: 153:                             mode = ACTIVATED;
  1027   000938  0E00               	movlw	0
  1028   00093A  6E1A               	movwf	main@mode^0,c
  1029                           
  1030                           ;main.c: 154:                             activatedStateTimer = 0;
  1031   00093C  0E00               	movlw	0
  1032   00093E  6E28               	movwf	(_activatedStateTimer+1)^0,c
  1033   000940  0E00               	movlw	0
  1034   000942  6E27               	movwf	_activatedStateTimer^0,c
  1035   000944  EFBB  F004         	goto	l2097
  1036   000948                     l2091:
  1037   000948  FFFF               	dw	65535	; assembler added errata NOP
  1038                           
  1039                           ;main.c: 159:                     LCD_clearScreen();
  1040   00094A  ECBC  F00D         	call	_LCD_clearScreen	;wreg free
  1041   00094E                     
  1042                           ;main.c: 160:                     LCD_displayStringRowColumn(0,0,"PASS ERR");
  1043   00094E  0E00               	movlw	0
  1044   000950  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1045   000952  0E58               	movlw	low STR_3
  1046   000954  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1047   000956  0E00               	movlw	0
  1048   000958  EC3A  F00D         	call	_LCD_displayStringRowColumn
  1049   00095C                     
  1050                           ;main.c: 161:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1051   00095C  0E04               	movlw	4
  1052   00095E  6E0F               	movwf	(??_main+1)^0,c
  1053   000960  0ECF               	movlw	207
  1054   000962  6E0E               	movwf	??_main^0,c
  1055   000964  0EA5               	movlw	165
  1056   000966                     u1627:
  1057   000966  FFFF               	dw	65535	; errata NOP
  1058   000968  2EE8               	decfsz	wreg,f,c
  1059   00096A  D7FD               	bra	u1627
  1060   00096C  2E0E               	decfsz	??_main^0,f,c
  1061   00096E  D7FB               	bra	u1627
  1062   000970  2E0F               	decfsz	(??_main+1)^0,f,c
  1063   000972  D7F9               	bra	u1627
  1064   000974  D000               	nop2	
  1065   000976                     l2097:
  1066   000976  FFFF               	dw	65535	; assembler added errata NOP
  1067                           
  1068                           ;main.c: 164:                 passCodeReq=0;
  1069   000978  0E00               	movlw	0
  1070   00097A  6E1D               	movwf	main@passCodeReq^0,c
  1071   00097C                     
  1072                           ;main.c: 165:                 passCode[0] = '\0';
  1073   00097C  0E00               	movlw	0
  1074   00097E  6E10               	movwf	main@passCode^0,c
  1075   000980                     
  1076                           ;main.c: 166:                 inputCounter = 0;
  1077   000980  0E00               	movlw	0
  1078   000982  6E1B               	movwf	main@inputCounter^0,c
  1079   000984                     
  1080                           ;main.c: 167:                 LCD_clearScreen();
  1081   000984  ECBC  F00D         	call	_LCD_clearScreen	;wreg free
  1082   000988                     l2105:
  1083   000988  FFFF               	dw	65535	; assembler added errata NOP
  1084                           
  1085                           ;main.c: 172:         if(mode == ACTIVATED){
  1086   00098A  501A               	movf	main@mode^0,w,c
  1087   00098C  A4D8               	btfss	status,2,c
  1088   00098E  EFCB  F004         	goto	u1431
  1089   000992  EFCE  F004         	goto	u1430
  1090   000996                     u1431:
  1091   000996  FFFF               	dw	65535	; assembler added errata NOP
  1092   000998  EFF6  F005         	goto	l2169
  1093   00099C                     u1430:
  1094   00099C  FFFF               	dw	65535	; assembler added errata NOP
  1095   00099E                     
  1096                           ;main.c: 173:             if (emergencyState){
  1097   00099E  5019               	movf	main@emergencyState^0,w,c
  1098   0009A0  B4D8               	btfsc	status,2,c
  1099   0009A2  EFD5  F004         	goto	u1441
  1100   0009A6  EFD8  F004         	goto	u1440
  1101   0009AA                     u1441:
  1102   0009AA  FFFF               	dw	65535	; assembler added errata NOP
  1103   0009AC  EF27  F005         	goto	l2127
  1104   0009B0                     u1440:
  1105   0009B0  FFFF               	dw	65535	; assembler added errata NOP
  1106   0009B2                     
  1107                           ;main.c: 174:                 if(!passCodeReq)
  1108   0009B2  501D               	movf	main@passCodeReq^0,w,c
  1109   0009B4  A4D8               	btfss	status,2,c
  1110   0009B6  EFDF  F004         	goto	u1451
  1111   0009BA  EFE2  F004         	goto	u1450
  1112   0009BE                     u1451:
  1113   0009BE  FFFF               	dw	65535	; assembler added errata NOP
  1114   0009C0  EFEA  F004         	goto	l2113
  1115   0009C4                     u1450:
  1116   0009C4  FFFF               	dw	65535	; assembler added errata NOP
  1117   0009C6                     
  1118                           ;main.c: 175:                      LCD_displayStringRowColumn(0,0,"99:GATE OPEN");
  1119   0009C6  0E00               	movlw	0
  1120   0009C8  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1121   0009CA  0E11               	movlw	low STR_4
  1122   0009CC  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1123   0009CE  0E00               	movlw	0
  1124   0009D0  EC3A  F00D         	call	_LCD_displayStringRowColumn
  1125   0009D4                     l2113:
  1126   0009D4  FFFF               	dw	65535	; assembler added errata NOP
  1127                           
  1128                           ;main.c: 176:                     if(emergencyTimer<=1)
  1129   0009D6  BE26               	btfsc	(_emergencyTimer+1)^0,7,c
  1130   0009D8  EFFA  F004         	goto	u1460
  1131   0009DC  5026               	movf	(_emergencyTimer+1)^0,w,c
  1132   0009DE  E107               	bnz	u1461
  1133   0009E0  0E02               	movlw	2
  1134   0009E2  5C25               	subwf	_emergencyTimer^0,w,c
  1135   0009E4  B0D8               	btfsc	status,0,c
  1136   0009E6  EFF7  F004         	goto	u1461
  1137   0009EA  EFFA  F004         	goto	u1460
  1138   0009EE                     u1461:
  1139   0009EE  FFFF               	dw	65535	; assembler added errata NOP
  1140   0009F0  EF02  F005         	goto	l2117
  1141   0009F4                     u1460:
  1142   0009F4  FFFF               	dw	65535	; assembler added errata NOP
  1143   0009F6                     
  1144                           ;main.c: 177:                         buzzer_on(PORT_A,0);
  1145   0009F6  0E00               	movlw	0
  1146   0009F8  6E06               	movwf	buzzer_on@pinNo^0,c
  1147   0009FA  0E00               	movlw	0
  1148   0009FC  EC73  F00D         	call	_buzzer_on
  1149   000A00  EF08  F005         	goto	l2119
  1150   000A04                     l2117:
  1151   000A04  FFFF               	dw	65535	; assembler added errata NOP
  1152                           
  1153                           ;main.c: 179:                         buzzer_off(PORT_A,0);
  1154   000A06  0E00               	movlw	0
  1155   000A08  6E06               	movwf	buzzer_off@pinNo^0,c
  1156   000A0A  0E00               	movlw	0
  1157   000A0C  EC7E  F00D         	call	_buzzer_off
  1158   000A10                     l2119:
  1159   000A10  FFFF               	dw	65535	; assembler added errata NOP
  1160                           
  1161                           ;main.c: 180:                 if(emergencyTimer>=5){
  1162   000A12  BE26               	btfsc	(_emergencyTimer+1)^0,7,c
  1163   000A14  EF15  F005         	goto	u1471
  1164   000A18  5026               	movf	(_emergencyTimer+1)^0,w,c
  1165   000A1A  E10A               	bnz	u1470
  1166   000A1C  0E05               	movlw	5
  1167   000A1E  5C25               	subwf	_emergencyTimer^0,w,c
  1168   000A20  A0D8               	btfss	status,0,c
  1169   000A22  EF15  F005         	goto	u1471
  1170   000A26  EF18  F005         	goto	u1470
  1171   000A2A                     u1471:
  1172   000A2A  FFFF               	dw	65535	; assembler added errata NOP
  1173   000A2C  EF22  F005         	goto	l2125
  1174   000A30                     u1470:
  1175   000A30  FFFF               	dw	65535	; assembler added errata NOP
  1176   000A32                     
  1177                           ;main.c: 181:                     DIO_TogglePin(PORT_B,5);
  1178   000A32  0E05               	movlw	5
  1179   000A34  6E01               	movwf	DIO_TogglePin@pinNo^0,c
  1180   000A36  0E01               	movlw	1
  1181   000A38  EC0F  F009         	call	_DIO_TogglePin
  1182   000A3C                     
  1183                           ;main.c: 182:                     emergencyTimer=0;
  1184   000A3C  0E00               	movlw	0
  1185   000A3E  6E26               	movwf	(_emergencyTimer+1)^0,c
  1186   000A40  0E00               	movlw	0
  1187   000A42  6E25               	movwf	_emergencyTimer^0,c
  1188   000A44                     l2125:
  1189   000A44  FFFF               	dw	65535	; assembler added errata NOP
  1190                           
  1191                           ;main.c: 184:                 motor_on();
  1192   000A46  ECAF  F00C         	call	_motor_on	;wreg free
  1193                           
  1194                           ;main.c: 185:             }
  1195   000A4A  EF7D  F003         	goto	l2015
  1196   000A4E                     l2127:
  1197   000A4E  FFFF               	dw	65535	; assembler added errata NOP
  1198                           
  1199                           ;main.c: 187:             {;main.c: 188:                 if(activatedStateTimer <=5 && !
      +                          passCodeReq){
  1200   000A50  BE28               	btfsc	(_activatedStateTimer+1)^0,7,c
  1201   000A52  EF37  F005         	goto	u1480
  1202   000A56  5028               	movf	(_activatedStateTimer+1)^0,w,c
  1203   000A58  E107               	bnz	u1481
  1204   000A5A  0E06               	movlw	6
  1205   000A5C  5C27               	subwf	_activatedStateTimer^0,w,c
  1206   000A5E  B0D8               	btfsc	status,0,c
  1207   000A60  EF34  F005         	goto	u1481
  1208   000A64  EF37  F005         	goto	u1480
  1209   000A68                     u1481:
  1210   000A68  FFFF               	dw	65535	; assembler added errata NOP
  1211   000A6A  EF49  F005         	goto	l2133
  1212   000A6E                     u1480:
  1213   000A6E  FFFF               	dw	65535	; assembler added errata NOP
  1214   000A70  501D               	movf	main@passCodeReq^0,w,c
  1215   000A72  A4D8               	btfss	status,2,c
  1216   000A74  EF3E  F005         	goto	u1491
  1217   000A78  EF41  F005         	goto	u1490
  1218   000A7C                     u1491:
  1219   000A7C  FFFF               	dw	65535	; assembler added errata NOP
  1220   000A7E  EF49  F005         	goto	l2133
  1221   000A82                     u1490:
  1222   000A82  FFFF               	dw	65535	; assembler added errata NOP
  1223   000A84                     
  1224                           ;main.c: 189:                     LCD_displayStringRowColumn(0,0,"Activated");
  1225   000A84  0E00               	movlw	0
  1226   000A86  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1227   000A88  0E4E               	movlw	low STR_5
  1228   000A8A  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1229   000A8C  0E00               	movlw	0
  1230   000A8E  EC3A  F00D         	call	_LCD_displayStringRowColumn
  1231   000A92                     l2133:
  1232   000A92  FFFF               	dw	65535	; assembler added errata NOP
  1233                           
  1234                           ;main.c: 191:                 if(pir_getState(PORT_A,2)==HIGH){
  1235   000A94  0E02               	movlw	2
  1236   000A96  6E06               	movwf	pir_getState@pinNo^0,c
  1237   000A98  0E00               	movlw	0
  1238   000A9A  ECAA  F00D         	call	_pir_getState
  1239   000A9E  06E8               	decf	wreg,f,c
  1240   000AA0  A4D8               	btfss	status,2,c
  1241   000AA2  EF55  F005         	goto	u1501
  1242   000AA6  EF58  F005         	goto	u1500
  1243   000AAA                     u1501:
  1244   000AAA  FFFF               	dw	65535	; assembler added errata NOP
  1245   000AAC  EF8A  F005         	goto	l2149
  1246   000AB0                     u1500:
  1247   000AB0  FFFF               	dw	65535	; assembler added errata NOP
  1248   000AB2                     
  1249                           ;main.c: 192:                     GateCloseTimer = 0;
  1250   000AB2  0E00               	movlw	0
  1251   000AB4  6E2C               	movwf	(_GateCloseTimer+1)^0,c
  1252   000AB6  0E00               	movlw	0
  1253   000AB8  6E2B               	movwf	_GateCloseTimer^0,c
  1254   000ABA                     
  1255                           ;main.c: 193:                     led_on(PORT_B,5);
  1256   000ABA  0E05               	movlw	5
  1257   000ABC  6E06               	movwf	led_on@pinNo^0,c
  1258   000ABE  0E01               	movlw	1
  1259   000AC0  EC52  F00D         	call	_led_on
  1260   000AC4                     
  1261                           ;main.c: 194:                     motor_on();
  1262   000AC4  ECAF  F00C         	call	_motor_on	;wreg free
  1263   000AC8                     
  1264                           ;main.c: 195:                     if(activatedStateTimer>5 && !passCodeReq)
  1265   000AC8  BE28               	btfsc	(_activatedStateTimer+1)^0,7,c
  1266   000ACA  EF70  F005         	goto	u1511
  1267   000ACE  5028               	movf	(_activatedStateTimer+1)^0,w,c
  1268   000AD0  E10A               	bnz	u1510
  1269   000AD2  0E06               	movlw	6
  1270   000AD4  5C27               	subwf	_activatedStateTimer^0,w,c
  1271   000AD6  A0D8               	btfss	status,0,c
  1272   000AD8  EF70  F005         	goto	u1511
  1273   000ADC  EF73  F005         	goto	u1510
  1274   000AE0                     u1511:
  1275   000AE0  FFFF               	dw	65535	; assembler added errata NOP
  1276   000AE2  EF85  F005         	goto	l2147
  1277   000AE6                     u1510:
  1278   000AE6  FFFF               	dw	65535	; assembler added errata NOP
  1279   000AE8  501D               	movf	main@passCodeReq^0,w,c
  1280   000AEA  A4D8               	btfss	status,2,c
  1281   000AEC  EF7A  F005         	goto	u1521
  1282   000AF0  EF7D  F005         	goto	u1520
  1283   000AF4                     u1521:
  1284   000AF4  FFFF               	dw	65535	; assembler added errata NOP
  1285   000AF6  EF85  F005         	goto	l2147
  1286   000AFA                     u1520:
  1287   000AFA  FFFF               	dw	65535	; assembler added errata NOP
  1288   000AFC                     
  1289                           ;main.c: 196:                         LCD_displayStringRowColumn(0,0,"GATE OPENED");
  1290   000AFC  0E00               	movlw	0
  1291   000AFE  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1292   000B00  0E2A               	movlw	low STR_6
  1293   000B02  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1294   000B04  0E00               	movlw	0
  1295   000B06  EC3A  F00D         	call	_LCD_displayStringRowColumn
  1296   000B0A                     l2147:
  1297   000B0A  FFFF               	dw	65535	; assembler added errata NOP
  1298                           
  1299                           ;main.c: 197:                     buzzerSet = 1;
  1300   000B0C  0E01               	movlw	1
  1301   000B0E  6E15               	movwf	main@buzzerSet^0,c
  1302                           
  1303                           ;main.c: 198:                 }
  1304   000B10  EF7D  F003         	goto	l2015
  1305   000B14                     l2149:
  1306   000B14  FFFF               	dw	65535	; assembler added errata NOP
  1307                           
  1308                           ;main.c: 200:                     if(GateCloseTimer>=10){
  1309   000B16  BE2C               	btfsc	(_GateCloseTimer+1)^0,7,c
  1310   000B18  EF97  F005         	goto	u1531
  1311   000B1C  502C               	movf	(_GateCloseTimer+1)^0,w,c
  1312   000B1E  E10A               	bnz	u1530
  1313   000B20  0E0A               	movlw	10
  1314   000B22  5C2B               	subwf	_GateCloseTimer^0,w,c
  1315   000B24  A0D8               	btfss	status,0,c
  1316   000B26  EF97  F005         	goto	u1531
  1317   000B2A  EF9A  F005         	goto	u1530
  1318   000B2E                     u1531:
  1319   000B2E  FFFF               	dw	65535	; assembler added errata NOP
  1320   000B30  EF7D  F003         	goto	l2015
  1321   000B34                     u1530:
  1322   000B34  FFFF               	dw	65535	; assembler added errata NOP
  1323   000B36                     
  1324                           ;main.c: 201:                         if(GateCloseTimer <12){
  1325   000B36  BE2C               	btfsc	(_GateCloseTimer+1)^0,7,c
  1326   000B38  EFAA  F005         	goto	u1540
  1327   000B3C  502C               	movf	(_GateCloseTimer+1)^0,w,c
  1328   000B3E  E107               	bnz	u1541
  1329   000B40  0E0C               	movlw	12
  1330   000B42  5C2B               	subwf	_GateCloseTimer^0,w,c
  1331   000B44  B0D8               	btfsc	status,0,c
  1332   000B46  EFA7  F005         	goto	u1541
  1333   000B4A  EFAA  F005         	goto	u1540
  1334   000B4E                     u1541:
  1335   000B4E  FFFF               	dw	65535	; assembler added errata NOP
  1336   000B50  EFBC  F005         	goto	l2157
  1337   000B54                     u1540:
  1338   000B54  FFFF               	dw	65535	; assembler added errata NOP
  1339   000B56                     
  1340                           ;main.c: 202:                             if(buzzerSet){
  1341   000B56  5015               	movf	main@buzzerSet^0,w,c
  1342   000B58  B4D8               	btfsc	status,2,c
  1343   000B5A  EFB1  F005         	goto	u1551
  1344   000B5E  EFB4  F005         	goto	u1550
  1345   000B62                     u1551:
  1346   000B62  FFFF               	dw	65535	; assembler added errata NOP
  1347   000B64  EFC8  F005         	goto	l121
  1348   000B68                     u1550:
  1349   000B68  FFFF               	dw	65535	; assembler added errata NOP
  1350   000B6A                     
  1351                           ;main.c: 203:                                 buzzer_on(PORT_A,0);
  1352   000B6A  0E00               	movlw	0
  1353   000B6C  6E06               	movwf	buzzer_on@pinNo^0,c
  1354   000B6E  0E00               	movlw	0
  1355   000B70  EC73  F00D         	call	_buzzer_on
  1356   000B74  EFC8  F005         	goto	l121
  1357   000B78                     l2157:
  1358   000B78  FFFF               	dw	65535	; assembler added errata NOP
  1359                           
  1360                           ;main.c: 207:                             buzzer_off(PORT_A,0);
  1361   000B7A  0E00               	movlw	0
  1362   000B7C  6E06               	movwf	buzzer_off@pinNo^0,c
  1363   000B7E  0E00               	movlw	0
  1364   000B80  EC7E  F00D         	call	_buzzer_off
  1365   000B84                     
  1366                           ;main.c: 208:                             buzzerSet = 0;
  1367   000B84  0E00               	movlw	0
  1368   000B86  6E15               	movwf	main@buzzerSet^0,c
  1369   000B88                     
  1370                           ;main.c: 209:                             GateCloseTimer = 20;
  1371   000B88  0E00               	movlw	0
  1372   000B8A  6E2C               	movwf	(_GateCloseTimer+1)^0,c
  1373   000B8C  0E14               	movlw	20
  1374   000B8E  6E2B               	movwf	_GateCloseTimer^0,c
  1375   000B90                     l121:
  1376   000B90  FFFF               	dw	65535	; assembler added errata NOP
  1377                           
  1378                           ;main.c: 211:                         led_off(PORT_B,5);
  1379   000B92  0E05               	movlw	5
  1380   000B94  6E06               	movwf	led_off@pinNo^0,c
  1381   000B96  0E01               	movlw	1
  1382   000B98  EC5D  F00D         	call	_led_off
  1383                           
  1384                           ;main.c: 212:                         motor_off();
  1385   000B9C  ECCE  F00C         	call	_motor_off	;wreg free
  1386   000BA0                     
  1387                           ;main.c: 213:                         if(activatedStateTimer>5 && !passCodeReq)
  1388   000BA0  BE28               	btfsc	(_activatedStateTimer+1)^0,7,c
  1389   000BA2  EFDC  F005         	goto	u1561
  1390   000BA6  5028               	movf	(_activatedStateTimer+1)^0,w,c
  1391   000BA8  E10A               	bnz	u1560
  1392   000BAA  0E06               	movlw	6
  1393   000BAC  5C27               	subwf	_activatedStateTimer^0,w,c
  1394   000BAE  A0D8               	btfss	status,0,c
  1395   000BB0  EFDC  F005         	goto	u1561
  1396   000BB4  EFDF  F005         	goto	u1560
  1397   000BB8                     u1561:
  1398   000BB8  FFFF               	dw	65535	; assembler added errata NOP
  1399   000BBA  EFF3  F005         	goto	l113
  1400   000BBE                     u1560:
  1401   000BBE  FFFF               	dw	65535	; assembler added errata NOP
  1402   000BC0  501D               	movf	main@passCodeReq^0,w,c
  1403   000BC2  A4D8               	btfss	status,2,c
  1404   000BC4  EFE6  F005         	goto	u1571
  1405   000BC8  EFE9  F005         	goto	u1570
  1406   000BCC                     u1571:
  1407   000BCC  FFFF               	dw	65535	; assembler added errata NOP
  1408   000BCE  EFF3  F005         	goto	l113
  1409   000BD2                     u1570:
  1410   000BD2  FFFF               	dw	65535	; assembler added errata NOP
  1411   000BD4                     
  1412                           ;main.c: 214:                             LCD_displayStringRowColumn(0,0,"GATE CLOSED");
  1413   000BD4  0E00               	movlw	0
  1414   000BD6  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1415   000BD8  0E36               	movlw	low STR_7
  1416   000BDA  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1417   000BDC  0E00               	movlw	0
  1418   000BDE  EC3A  F00D         	call	_LCD_displayStringRowColumn
  1419   000BE2  EF7D  F003         	goto	l2015
  1420   000BE6                     l113:
  1421   000BE6  FFFF               	dw	65535	; assembler added errata NOP
  1422                           
  1423                           ;main.c: 219:         }
  1424   000BE8  EF7D  F003         	goto	l2015
  1425   000BEC                     l2169:
  1426   000BEC  FFFF               	dw	65535	; assembler added errata NOP
  1427   000BEE  041A               	decf	main@mode^0,w,c
  1428   000BF0  A4D8               	btfss	status,2,c
  1429   000BF2  EFFD  F005         	goto	u1581
  1430   000BF6  EF00  F006         	goto	u1580
  1431   000BFA                     u1581:
  1432   000BFA  FFFF               	dw	65535	; assembler added errata NOP
  1433   000BFC  EF7D  F003         	goto	l2015
  1434   000C00                     u1580:
  1435   000C00  FFFF               	dw	65535	; assembler added errata NOP
  1436   000C02                     
  1437                           ;main.c: 222:             if(emergencyState && !passCodeReq){
  1438   000C02  5019               	movf	main@emergencyState^0,w,c
  1439   000C04  B4D8               	btfsc	status,2,c
  1440   000C06  EF07  F006         	goto	u1591
  1441   000C0A  EF0A  F006         	goto	u1590
  1442   000C0E                     u1591:
  1443   000C0E  FFFF               	dw	65535	; assembler added errata NOP
  1444   000C10  EF1E  F006         	goto	l2177
  1445   000C14                     u1590:
  1446   000C14  FFFF               	dw	65535	; assembler added errata NOP
  1447   000C16  501D               	movf	main@passCodeReq^0,w,c
  1448   000C18  A4D8               	btfss	status,2,c
  1449   000C1A  EF11  F006         	goto	u1601
  1450   000C1E  EF14  F006         	goto	u1600
  1451   000C22                     u1601:
  1452   000C22  FFFF               	dw	65535	; assembler added errata NOP
  1453   000C24  EF1E  F006         	goto	l2177
  1454   000C28                     u1600:
  1455   000C28  FFFF               	dw	65535	; assembler added errata NOP
  1456   000C2A                     
  1457                           ;main.c: 223:                 LCD_displayStringRowColumn(0,0,"NO ER: DEACTIVE");
  1458   000C2A  0E00               	movlw	0
  1459   000C2C  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1460   000C2E  0E01               	movlw	low STR_8
  1461   000C30  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1462   000C32  0E00               	movlw	0
  1463   000C34  EC3A  F00D         	call	_LCD_displayStringRowColumn
  1464                           
  1465                           ;main.c: 224:             }
  1466   000C38  EF30  F006         	goto	l2181
  1467   000C3C                     l2177:
  1468   000C3C  FFFF               	dw	65535	; assembler added errata NOP
  1469                           
  1470                           ;main.c: 226:             {;main.c: 227:                 if(!passCodeReq)
  1471   000C3E  501D               	movf	main@passCodeReq^0,w,c
  1472   000C40  A4D8               	btfss	status,2,c
  1473   000C42  EF25  F006         	goto	u1611
  1474   000C46  EF28  F006         	goto	u1610
  1475   000C4A                     u1611:
  1476   000C4A  FFFF               	dw	65535	; assembler added errata NOP
  1477   000C4C  EF30  F006         	goto	l2181
  1478   000C50                     u1610:
  1479   000C50  FFFF               	dw	65535	; assembler added errata NOP
  1480   000C52                     
  1481                           ;main.c: 228:                     LCD_displayStringRowColumn(0,0,"Deactivated");
  1482   000C52  0E00               	movlw	0
  1483   000C54  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1484   000C56  0E42               	movlw	low STR_9
  1485   000C58  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1486   000C5A  0E00               	movlw	0
  1487   000C5C  EC3A  F00D         	call	_LCD_displayStringRowColumn
  1488   000C60                     l2181:
  1489   000C60  FFFF               	dw	65535	; assembler added errata NOP
  1490                           
  1491                           ;main.c: 230:             led_on(PORT_B,5);
  1492   000C62  0E05               	movlw	5
  1493   000C64  6E06               	movwf	led_on@pinNo^0,c
  1494   000C66  0E01               	movlw	1
  1495   000C68  EC52  F00D         	call	_led_on
  1496   000C6C                     
  1497                           ;main.c: 231:             motor_off();
  1498   000C6C  ECCE  F00C         	call	_motor_off	;wreg free
  1499   000C70  EF7D  F003         	goto	l2015
  1500   000C74  EF22  F000         	goto	start
  1501   000C78                     __end_of_main:
  1502                           	callstack 0
  1503                           
  1504 ;; *************** function _strcmp *****************
  1505 ;; Defined at:
  1506 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcmp.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  l               1    0[COMRAM] PTR const unsigned char 
  1509 ;;		 -> main@passCode(5), 
  1510 ;;  r               1    1[COMRAM] PTR const unsigned char 
  1511 ;;		 -> STR_2(5), 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  2    0[COMRAM] int 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1523 ;;      Params:         2       0       0       0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0       0       0
  1525 ;;      Temps:          1       0       0       0       0       0       0
  1526 ;;      Totals:         3       0       0       0       0       0       0
  1527 ;;Total ram usage:        3 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; Hardware stack levels required when called: 1
  1530 ;; This function calls:
  1531 ;;		Nothing
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text1
  1538   001742                     __ptext1:
  1539                           	callstack 0
  1540   001742                     _strcmp:
  1541                           	callstack 0
  1542   001742  FFFF               	dw	65535	; assembler added errata NOP
  1543   001744  EFA7  F00B         	goto	l1937
  1544   001748                     l1935:
  1545   001748  FFFF               	dw	65535	; assembler added errata NOP
  1546   00174A  2A01               	incf	strcmp@l^0,f,c
  1547   00174C  2A02               	incf	strcmp@r^0,f,c
  1548   00174E                     l1937:
  1549   00174E  FFFF               	dw	65535	; assembler added errata NOP
  1550   001750  5001               	movf	strcmp@l^0,w,c
  1551   001752  6ED9               	movwf	fsr2l,c
  1552   001754  6ADA               	clrf	fsr2h,c
  1553   001756  50DF               	movf	indf2,w,c
  1554   001758  6E03               	movwf	??_strcmp^0,c
  1555   00175A  C002  FFF6         	movff	strcmp@r,tblptrl
  1556   00175E                     	if	1	;There is more than 1 active tblptr byte
  1557   00175E  0E06               	movlw	high __smallconst
  1558   001760  6EF7               	movwf	tblptrh,c
  1559   001762                     	endif
  1560   001762                     	if	0	;tblptru may be non-zero
  1561   001762                     	endif
  1562   001762                     	if	0	;tblptru may be non-zero
  1563   001762                     	endif
  1564   001762  0008               	tblrd		*
  1565   001764  FFFF               	dw	65535	; errata NOP
  1566   001766  50F5               	movf	tablat,w,c
  1567   001768  1803               	xorwf	??_strcmp^0,w,c
  1568   00176A  A4D8               	btfss	status,2,c
  1569   00176C  EFBA  F00B         	goto	u1191
  1570   001770  EFBD  F00B         	goto	u1190
  1571   001774                     u1191:
  1572   001774  FFFF               	dw	65535	; assembler added errata NOP
  1573   001776  EFCA  F00B         	goto	l1941
  1574   00177A                     u1190:
  1575   00177A  FFFF               	dw	65535	; assembler added errata NOP
  1576   00177C  5001               	movf	strcmp@l^0,w,c
  1577   00177E  6ED9               	movwf	fsr2l,c
  1578   001780  6ADA               	clrf	fsr2h,c
  1579   001782  50DF               	movf	indf2,w,c
  1580   001784  A4D8               	btfss	status,2,c
  1581   001786  EFC7  F00B         	goto	u1201
  1582   00178A  EFCA  F00B         	goto	u1200
  1583   00178E                     u1201:
  1584   00178E  FFFF               	dw	65535	; assembler added errata NOP
  1585   001790  EFA4  F00B         	goto	l1935
  1586   001794                     u1200:
  1587   001794                     l1941:
  1588   001794  FFFF               	dw	65535	; assembler added errata NOP
  1589   001796  5001               	movf	strcmp@l^0,w,c
  1590   001798  6ED9               	movwf	fsr2l,c
  1591   00179A  6ADA               	clrf	fsr2h,c
  1592   00179C  50DF               	movf	indf2,w,c
  1593   00179E  6E03               	movwf	??_strcmp^0,c
  1594   0017A0  C002  FFF6         	movff	strcmp@r,tblptrl
  1595   0017A4                     	if	1	;There is more than 1 active tblptr byte
  1596   0017A4  0E06               	movlw	high __smallconst
  1597   0017A6  6EF7               	movwf	tblptrh,c
  1598   0017A8                     	endif
  1599   0017A8                     	if	0	;tblptru may be non-zero
  1600   0017A8                     	endif
  1601   0017A8                     	if	0	;tblptru may be non-zero
  1602   0017A8                     	endif
  1603   0017A8  0008               	tblrd		*
  1604   0017AA  FFFF               	dw	65535	; errata NOP
  1605   0017AC  50F5               	movf	tablat,w,c
  1606   0017AE  5C03               	subwf	??_strcmp^0,w,c
  1607   0017B0  6E01               	movwf	?_strcmp^0,c
  1608   0017B2  6A02               	clrf	(?_strcmp+1)^0,c
  1609   0017B4  A0D8               	btfss	status,0,c
  1610   0017B6  0602               	decf	(?_strcmp+1)^0,f,c
  1611   0017B8  0012               	return		;funcret
  1612   0017BA  FFFF               	dw	65535	; errata NOP
  1613   0017BC                     __end_of_strcmp:
  1614                           	callstack 0
  1615                           
  1616 ;; *************** function _pir_init *****************
  1617 ;; Defined at:
  1618 ;;		line 8 in file "pir.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  port            1    wreg     enum E2181
  1621 ;;  pinNo           1    5[COMRAM] unsigned char 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  port            1    6[COMRAM] enum E2181
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2, status,0, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1633 ;;      Params:         1       0       0       0       0       0       0
  1634 ;;      Locals:         1       0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0
  1636 ;;      Totals:         2       0       0       0       0       0       0
  1637 ;;Total ram usage:        2 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; Hardware stack levels required when called: 2
  1640 ;; This function calls:
  1641 ;;		_DIO_SetPinDirection
  1642 ;; This function is called by:
  1643 ;;		_main
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text2
  1648   001A8E                     __ptext2:
  1649                           	callstack 0
  1650   001A8E                     _pir_init:
  1651                           	callstack 0
  1652   001A8E  FFFF               	dw	65535	; assembler added errata NOP
  1653                           
  1654                           ;incstack = 0
  1655                           ;pir_init@port stored from wreg
  1656   001A90  6E07               	movwf	pir_init@port^0,c
  1657   001A92                     
  1658                           ;pir.c: 9:     DIO_SetPinDirection(port,pinNo,INPUT);
  1659   001A92  C006  F001         	movff	pir_init@pinNo,DIO_SetPinDirection@pinNo
  1660   001A96  0E00               	movlw	0
  1661   001A98  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  1662   001A9A  5007               	movf	pir_init@port^0,w,c
  1663   001A9C  EC3C  F006         	call	_DIO_SetPinDirection
  1664   001AA0  0012               	return		;funcret
  1665   001AA2  FFFF               	dw	65535	; errata NOP
  1666   001AA4                     __end_of_pir_init:
  1667                           	callstack 0
  1668                           
  1669 ;; *************** function _pir_getState *****************
  1670 ;; Defined at:
  1671 ;;		line 11 in file "pir.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  port            1    wreg     enum E2181
  1674 ;;  pinNo           1    5[COMRAM] unsigned char 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  port            1    6[COMRAM] enum E2181
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      unsigned char 
  1679 ;; Registers used:
  1680 ;;		wreg, status,2, status,0, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1686 ;;      Params:         1       0       0       0       0       0       0
  1687 ;;      Locals:         1       0       0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0       0       0
  1689 ;;      Totals:         2       0       0       0       0       0       0
  1690 ;;Total ram usage:        2 bytes
  1691 ;; Hardware stack levels used: 1
  1692 ;; Hardware stack levels required when called: 2
  1693 ;; This function calls:
  1694 ;;		_DIO_GetPinValue
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text3
  1701   001B54                     __ptext3:
  1702                           	callstack 0
  1703   001B54                     _pir_getState:
  1704                           	callstack 0
  1705   001B54  FFFF               	dw	65535	; assembler added errata NOP
  1706                           
  1707                           ;incstack = 0
  1708                           ;pir_getState@port stored from wreg
  1709   001B56  6E07               	movwf	pir_getState@port^0,c
  1710   001B58                     
  1711                           ;pir.c: 12:     return DIO_GetPinValue(port,pinNo);
  1712   001B58  C006  F001         	movff	pir_getState@pinNo,DIO_GetPinValue@pinNo
  1713   001B5C  5007               	movf	pir_getState@port^0,w,c
  1714   001B5E  EC7A  F008         	call	_DIO_GetPinValue
  1715   001B62  0012               	return		;funcret
  1716   001B64  FFFF               	dw	65535	; errata NOP
  1717   001B66                     __end_of_pir_getState:
  1718                           	callstack 0
  1719                           
  1720 ;; *************** function _motor_on *****************
  1721 ;; Defined at:
  1722 ;;		line 20 in file "motor.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1736 ;;      Params:         0       0       0       0       0       0       0
  1737 ;;      Locals:         0       0       0       0       0       0       0
  1738 ;;      Temps:          0       0       0       0       0       0       0
  1739 ;;      Totals:         0       0       0       0       0       0       0
  1740 ;;Total ram usage:        0 bytes
  1741 ;; Hardware stack levels used: 1
  1742 ;; Hardware stack levels required when called: 2
  1743 ;; This function calls:
  1744 ;;		_DIO_SetPinValue
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text4
  1751   00195E                     __ptext4:
  1752                           	callstack 0
  1753   00195E                     _motor_on:
  1754                           	callstack 0
  1755   00195E  FFFF               	dw	65535	; assembler added errata NOP
  1756   001960                     
  1757                           ;motor.c: 21:     DIO_SetPinValue(PORT_B,0,LOW);
  1758   001960  0E00               	movlw	0
  1759   001962  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1760   001964  0E00               	movlw	0
  1761   001966  6E02               	movwf	DIO_SetPinValue@value^0,c
  1762   001968  0E01               	movlw	1
  1763   00196A  EC5B  F007         	call	_DIO_SetPinValue
  1764                           
  1765                           ;motor.c: 22:     DIO_SetPinValue(PORT_B,1,HIGH);
  1766   00196E  0E01               	movlw	1
  1767   001970  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1768   001972  0E01               	movlw	1
  1769   001974  6E02               	movwf	DIO_SetPinValue@value^0,c
  1770   001976  0E01               	movlw	1
  1771   001978  EC5B  F007         	call	_DIO_SetPinValue
  1772                           
  1773                           ;motor.c: 23:     DIO_SetPinValue(PORT_B,2,LOW);
  1774   00197C  0E02               	movlw	2
  1775   00197E  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1776   001980  0E00               	movlw	0
  1777   001982  6E02               	movwf	DIO_SetPinValue@value^0,c
  1778   001984  0E01               	movlw	1
  1779   001986  EC5B  F007         	call	_DIO_SetPinValue
  1780                           
  1781                           ;motor.c: 24:     DIO_SetPinValue(PORT_B,3,LOW);
  1782   00198A  0E03               	movlw	3
  1783   00198C  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1784   00198E  0E00               	movlw	0
  1785   001990  6E02               	movwf	DIO_SetPinValue@value^0,c
  1786   001992  0E01               	movlw	1
  1787   001994  EC5B  F007         	call	_DIO_SetPinValue
  1788   001998  0012               	return		;funcret
  1789   00199A  FFFF               	dw	65535	; errata NOP
  1790   00199C                     __end_of_motor_on:
  1791                           	callstack 0
  1792                           
  1793 ;; *************** function _motor_off *****************
  1794 ;; Defined at:
  1795 ;;		line 26 in file "motor.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg, status,2, status,0, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1809 ;;      Params:         0       0       0       0       0       0       0
  1810 ;;      Locals:         0       0       0       0       0       0       0
  1811 ;;      Temps:          0       0       0       0       0       0       0
  1812 ;;      Totals:         0       0       0       0       0       0       0
  1813 ;;Total ram usage:        0 bytes
  1814 ;; Hardware stack levels used: 1
  1815 ;; Hardware stack levels required when called: 2
  1816 ;; This function calls:
  1817 ;;		_DIO_SetPinValue
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text5
  1824   00199C                     __ptext5:
  1825                           	callstack 0
  1826   00199C                     _motor_off:
  1827                           	callstack 0
  1828   00199C  FFFF               	dw	65535	; assembler added errata NOP
  1829   00199E                     
  1830                           ;motor.c: 27:     DIO_SetPinValue(PORT_B,0,HIGH);
  1831   00199E  0E00               	movlw	0
  1832   0019A0  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1833   0019A2  0E01               	movlw	1
  1834   0019A4  6E02               	movwf	DIO_SetPinValue@value^0,c
  1835   0019A6  0E01               	movlw	1
  1836   0019A8  EC5B  F007         	call	_DIO_SetPinValue
  1837                           
  1838                           ;motor.c: 28:     DIO_SetPinValue(PORT_B,1,LOW);
  1839   0019AC  0E01               	movlw	1
  1840   0019AE  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1841   0019B0  0E00               	movlw	0
  1842   0019B2  6E02               	movwf	DIO_SetPinValue@value^0,c
  1843   0019B4  0E01               	movlw	1
  1844   0019B6  EC5B  F007         	call	_DIO_SetPinValue
  1845                           
  1846                           ;motor.c: 29:     DIO_SetPinValue(PORT_B,2,LOW);
  1847   0019BA  0E02               	movlw	2
  1848   0019BC  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1849   0019BE  0E00               	movlw	0
  1850   0019C0  6E02               	movwf	DIO_SetPinValue@value^0,c
  1851   0019C2  0E01               	movlw	1
  1852   0019C4  EC5B  F007         	call	_DIO_SetPinValue
  1853                           
  1854                           ;motor.c: 30:     DIO_SetPinValue(PORT_B,3,LOW);
  1855   0019C8  0E03               	movlw	3
  1856   0019CA  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1857   0019CC  0E00               	movlw	0
  1858   0019CE  6E02               	movwf	DIO_SetPinValue@value^0,c
  1859   0019D0  0E01               	movlw	1
  1860   0019D2  EC5B  F007         	call	_DIO_SetPinValue
  1861   0019D6  0012               	return		;funcret
  1862   0019D8  FFFF               	dw	65535	; errata NOP
  1863   0019DA                     __end_of_motor_off:
  1864                           	callstack 0
  1865                           
  1866 ;; *************** function _motor_init *****************
  1867 ;; Defined at:
  1868 ;;		line 8 in file "motor.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      void 
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1882 ;;      Params:         0       0       0       0       0       0       0
  1883 ;;      Locals:         0       0       0       0       0       0       0
  1884 ;;      Temps:          0       0       0       0       0       0       0
  1885 ;;      Totals:         0       0       0       0       0       0       0
  1886 ;;Total ram usage:        0 bytes
  1887 ;; Hardware stack levels used: 1
  1888 ;; Hardware stack levels required when called: 2
  1889 ;; This function calls:
  1890 ;;		_DIO_SetPinDirection
  1891 ;;		_DIO_SetPinValue
  1892 ;; This function is called by:
  1893 ;;		_main
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text6
  1898   0017BC                     __ptext6:
  1899                           	callstack 0
  1900   0017BC                     _motor_init:
  1901                           	callstack 0
  1902   0017BC  FFFF               	dw	65535	; assembler added errata NOP
  1903   0017BE                     
  1904                           ;motor.c: 9:     DIO_SetPinDirection(PORT_B,0,OUTPUT);
  1905   0017BE  0E00               	movlw	0
  1906   0017C0  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  1907   0017C2  0E01               	movlw	1
  1908   0017C4  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  1909   0017C6  0E01               	movlw	1
  1910   0017C8  EC3C  F006         	call	_DIO_SetPinDirection
  1911                           
  1912                           ;motor.c: 10:     DIO_SetPinDirection(PORT_B,1,OUTPUT);
  1913   0017CC  0E01               	movlw	1
  1914   0017CE  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  1915   0017D0  0E01               	movlw	1
  1916   0017D2  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  1917   0017D4  0E01               	movlw	1
  1918   0017D6  EC3C  F006         	call	_DIO_SetPinDirection
  1919                           
  1920                           ;motor.c: 11:     DIO_SetPinDirection(PORT_B,2,OUTPUT);
  1921   0017DA  0E02               	movlw	2
  1922   0017DC  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  1923   0017DE  0E01               	movlw	1
  1924   0017E0  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  1925   0017E2  0E01               	movlw	1
  1926   0017E4  EC3C  F006         	call	_DIO_SetPinDirection
  1927                           
  1928                           ;motor.c: 12:     DIO_SetPinDirection(PORT_B,3,OUTPUT);
  1929   0017E8  0E03               	movlw	3
  1930   0017EA  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  1931   0017EC  0E01               	movlw	1
  1932   0017EE  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  1933   0017F0  0E01               	movlw	1
  1934   0017F2  EC3C  F006         	call	_DIO_SetPinDirection
  1935                           
  1936                           ;motor.c: 14:     DIO_SetPinValue(PORT_B,0,LOW);
  1937   0017F6  0E00               	movlw	0
  1938   0017F8  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1939   0017FA  0E00               	movlw	0
  1940   0017FC  6E02               	movwf	DIO_SetPinValue@value^0,c
  1941   0017FE  0E01               	movlw	1
  1942   001800  EC5B  F007         	call	_DIO_SetPinValue
  1943                           
  1944                           ;motor.c: 15:     DIO_SetPinValue(PORT_B,1,LOW);
  1945   001804  0E01               	movlw	1
  1946   001806  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1947   001808  0E00               	movlw	0
  1948   00180A  6E02               	movwf	DIO_SetPinValue@value^0,c
  1949   00180C  0E01               	movlw	1
  1950   00180E  EC5B  F007         	call	_DIO_SetPinValue
  1951                           
  1952                           ;motor.c: 16:     DIO_SetPinValue(PORT_B,2,LOW);
  1953   001812  0E02               	movlw	2
  1954   001814  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1955   001816  0E00               	movlw	0
  1956   001818  6E02               	movwf	DIO_SetPinValue@value^0,c
  1957   00181A  0E01               	movlw	1
  1958   00181C  EC5B  F007         	call	_DIO_SetPinValue
  1959                           
  1960                           ;motor.c: 17:     DIO_SetPinValue(PORT_B,3,LOW);
  1961   001820  0E03               	movlw	3
  1962   001822  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1963   001824  0E00               	movlw	0
  1964   001826  6E02               	movwf	DIO_SetPinValue@value^0,c
  1965   001828  0E01               	movlw	1
  1966   00182A  EC5B  F007         	call	_DIO_SetPinValue
  1967   00182E  0012               	return		;funcret
  1968   001830  FFFF               	dw	65535	; errata NOP
  1969   001832                     __end_of_motor_init:
  1970                           	callstack 0
  1971                           
  1972 ;; *************** function _led_on *****************
  1973 ;; Defined at:
  1974 ;;		line 12 in file "led.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  port            1    wreg     enum E2181
  1977 ;;  pinNo           1    5[COMRAM] unsigned char 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  port            1    6[COMRAM] enum E2181
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, status,2, status,0, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1989 ;;      Params:         1       0       0       0       0       0       0
  1990 ;;      Locals:         1       0       0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0
  1992 ;;      Totals:         2       0       0       0       0       0       0
  1993 ;;Total ram usage:        2 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; Hardware stack levels required when called: 2
  1996 ;; This function calls:
  1997 ;;		_DIO_SetPinValue
  1998 ;; This function is called by:
  1999 ;;		_main
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text7
  2004   001AA4                     __ptext7:
  2005                           	callstack 0
  2006   001AA4                     _led_on:
  2007                           	callstack 0
  2008   001AA4  FFFF               	dw	65535	; assembler added errata NOP
  2009                           
  2010                           ;incstack = 0
  2011                           ;led_on@port stored from wreg
  2012   001AA6  6E07               	movwf	led_on@port^0,c
  2013   001AA8                     
  2014                           ;led.c: 13:     DIO_SetPinValue(port,pinNo,HIGH);
  2015   001AA8  C006  F001         	movff	led_on@pinNo,DIO_SetPinValue@pinNo
  2016   001AAC  0E01               	movlw	1
  2017   001AAE  6E02               	movwf	DIO_SetPinValue@value^0,c
  2018   001AB0  5007               	movf	led_on@port^0,w,c
  2019   001AB2  EC5B  F007         	call	_DIO_SetPinValue
  2020   001AB6  0012               	return		;funcret
  2021   001AB8  FFFF               	dw	65535	; errata NOP
  2022   001ABA                     __end_of_led_on:
  2023                           	callstack 0
  2024                           
  2025 ;; *************** function _led_off *****************
  2026 ;; Defined at:
  2027 ;;		line 15 in file "led.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  port            1    wreg     enum E2181
  2030 ;;  pinNo           1    5[COMRAM] unsigned char 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  port            1    6[COMRAM] enum E2181
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2042 ;;      Params:         1       0       0       0       0       0       0
  2043 ;;      Locals:         1       0       0       0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0       0       0
  2045 ;;      Totals:         2       0       0       0       0       0       0
  2046 ;;Total ram usage:        2 bytes
  2047 ;; Hardware stack levels used: 1
  2048 ;; Hardware stack levels required when called: 2
  2049 ;; This function calls:
  2050 ;;		_DIO_SetPinValue
  2051 ;; This function is called by:
  2052 ;;		_main
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text8
  2057   001ABA                     __ptext8:
  2058                           	callstack 0
  2059   001ABA                     _led_off:
  2060                           	callstack 0
  2061   001ABA  FFFF               	dw	65535	; assembler added errata NOP
  2062                           
  2063                           ;incstack = 0
  2064                           ;led_off@port stored from wreg
  2065   001ABC  6E07               	movwf	led_off@port^0,c
  2066   001ABE                     
  2067                           ;led.c: 16:     DIO_SetPinValue(port,pinNo,LOW);
  2068   001ABE  C006  F001         	movff	led_off@pinNo,DIO_SetPinValue@pinNo
  2069   001AC2  0E00               	movlw	0
  2070   001AC4  6E02               	movwf	DIO_SetPinValue@value^0,c
  2071   001AC6  5007               	movf	led_off@port^0,w,c
  2072   001AC8  EC5B  F007         	call	_DIO_SetPinValue
  2073   001ACC  0012               	return		;funcret
  2074   001ACE  FFFF               	dw	65535	; errata NOP
  2075   001AD0                     __end_of_led_off:
  2076                           	callstack 0
  2077                           
  2078 ;; *************** function _led_init *****************
  2079 ;; Defined at:
  2080 ;;		line 9 in file "led.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  port            1    wreg     enum E2181
  2083 ;;  pinNo           1    5[COMRAM] unsigned char 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  port            1    6[COMRAM] enum E2181
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2095 ;;      Params:         1       0       0       0       0       0       0
  2096 ;;      Locals:         1       0       0       0       0       0       0
  2097 ;;      Temps:          0       0       0       0       0       0       0
  2098 ;;      Totals:         2       0       0       0       0       0       0
  2099 ;;Total ram usage:        2 bytes
  2100 ;; Hardware stack levels used: 1
  2101 ;; Hardware stack levels required when called: 2
  2102 ;; This function calls:
  2103 ;;		_DIO_SetPinDirection
  2104 ;; This function is called by:
  2105 ;;		_main
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text9
  2110   001AD0                     __ptext9:
  2111                           	callstack 0
  2112   001AD0                     _led_init:
  2113                           	callstack 0
  2114   001AD0  FFFF               	dw	65535	; assembler added errata NOP
  2115                           
  2116                           ;incstack = 0
  2117                           ;led_init@port stored from wreg
  2118   001AD2  6E07               	movwf	led_init@port^0,c
  2119   001AD4                     
  2120                           ;led.c: 10:     DIO_SetPinDirection(port,pinNo,OUTPUT);
  2121   001AD4  C006  F001         	movff	led_init@pinNo,DIO_SetPinDirection@pinNo
  2122   001AD8  0E01               	movlw	1
  2123   001ADA  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2124   001ADC  5007               	movf	led_init@port^0,w,c
  2125   001ADE  EC3C  F006         	call	_DIO_SetPinDirection
  2126   001AE2  0012               	return		;funcret
  2127   001AE4  FFFF               	dw	65535	; errata NOP
  2128   001AE6                     __end_of_led_init:
  2129                           	callstack 0
  2130                           
  2131 ;; *************** function _keypad_read *****************
  2132 ;; Defined at:
  2133 ;;		line 95 in file "keypad.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;		None
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  keyValue        1    2[COMRAM] unsigned char 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      unsigned char 
  2140 ;; Registers used:
  2141 ;;		wreg, status,2, status,0, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2147 ;;      Params:         0       0       0       0       0       0       0
  2148 ;;      Locals:         1       0       0       0       0       0       0
  2149 ;;      Temps:          1       0       0       0       0       0       0
  2150 ;;      Totals:         2       0       0       0       0       0       0
  2151 ;;Total ram usage:        2 bytes
  2152 ;; Hardware stack levels used: 1
  2153 ;; Hardware stack levels required when called: 2
  2154 ;; This function calls:
  2155 ;;		_keypad_line_scan
  2156 ;;		_keypad_value
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text10
  2163   001A12                     __ptext10:
  2164                           	callstack 0
  2165   001A12                     _keypad_read:
  2166                           	callstack 0
  2167   001A12  FFFF               	dw	65535	; assembler added errata NOP
  2168   001A14                     
  2169                           ;keypad.c: 96:     keypad_line_scan();
  2170   001A14  EC25  F00D         	call	_keypad_line_scan	;wreg free
  2171   001A18                     
  2172                           ;keypad.c: 97:     if((PORTC & 0b01110000) != 0){
  2173   001A18  CF82 F002          	movff	3970,??_keypad_read	;volatile
  2174   001A1C  0E70               	movlw	112
  2175   001A1E  1602               	andwf	??_keypad_read^0,f,c
  2176   001A20  B4D8               	btfsc	status,2,c
  2177   001A22  EF15  F00D         	goto	u381
  2178   001A26  EF18  F00D         	goto	u380
  2179   001A2A                     u381:
  2180   001A2A  FFFF               	dw	65535	; assembler added errata NOP
  2181   001A2C  EF20  F00D         	goto	l1395
  2182   001A30                     u380:
  2183   001A30  FFFF               	dw	65535	; assembler added errata NOP
  2184   001A32                     
  2185                           ;keypad.c: 98:         uint8_t keyValue = keypad_value(PORTC);
  2186   001A32  5082               	movf	130,w,c	;volatile
  2187   001A34  EC98  F009         	call	_keypad_value
  2188   001A38  6E03               	movwf	keypad_read@keyValue^0,c
  2189   001A3A                     
  2190                           ;keypad.c: 99:         return keyValue;
  2191   001A3A  5003               	movf	keypad_read@keyValue^0,w,c
  2192   001A3C  EF22  F00D         	goto	l264
  2193   001A40                     l1395:
  2194   001A40  FFFF               	dw	65535	; assembler added errata NOP
  2195                           
  2196                           ;keypad.c: 101:     return 0;
  2197   001A42  0E00               	movlw	0
  2198   001A44                     l264:
  2199   001A44  FFFF               	dw	65535	; assembler added errata NOP
  2200   001A46  0012               	return		;funcret
  2201   001A48  FFFF               	dw	65535	; errata NOP
  2202   001A4A                     __end_of_keypad_read:
  2203                           	callstack 0
  2204                           
  2205 ;; *************** function _keypad_value *****************
  2206 ;; Defined at:
  2207 ;;		line 52 in file "keypad.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  portValue       1    wreg     unsigned char 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  portValue       1    0[COMRAM] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      unsigned char 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2221 ;;      Params:         0       0       0       0       0       0       0
  2222 ;;      Locals:         1       0       0       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0       0       0
  2224 ;;      Totals:         1       0       0       0       0       0       0
  2225 ;;Total ram usage:        1 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; Hardware stack levels required when called: 1
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_keypad_read
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text11
  2236   001330                     __ptext11:
  2237                           	callstack 0
  2238   001330                     _keypad_value:
  2239                           	callstack 0
  2240   001330  FFFF               	dw	65535	; assembler added errata NOP
  2241                           
  2242                           ;incstack = 0
  2243                           ;keypad_value@portValue stored from wreg
  2244   001332  6E01               	movwf	keypad_value@portValue^0,c
  2245   001334                     
  2246                           ;keypad.c: 53:     switch (portValue){
  2247   001334  EFCC  F009         	goto	l1339
  2248   001338                     l1265:
  2249   001338  FFFF               	dw	65535	; assembler added errata NOP
  2250                           
  2251                           ;keypad.c: 55:             return '1';
  2252   00133A  0E31               	movlw	49
  2253   00133C  EF02  F00A         	goto	l248
  2254   001340                     l1271:
  2255   001340  FFFF               	dw	65535	; assembler added errata NOP
  2256                           
  2257                           ;keypad.c: 58:             return '4';
  2258   001342  0E34               	movlw	52
  2259   001344  EF02  F00A         	goto	l248
  2260   001348                     l1277:
  2261   001348  FFFF               	dw	65535	; assembler added errata NOP
  2262                           
  2263                           ;keypad.c: 61:             return '7';
  2264   00134A  0E37               	movlw	55
  2265   00134C  EF02  F00A         	goto	l248
  2266   001350                     l1283:
  2267   001350  FFFF               	dw	65535	; assembler added errata NOP
  2268                           
  2269                           ;keypad.c: 64:             return '*';
  2270   001352  0E2A               	movlw	42
  2271   001354  EF02  F00A         	goto	l248
  2272   001358                     l1289:
  2273   001358  FFFF               	dw	65535	; assembler added errata NOP
  2274                           
  2275                           ;keypad.c: 68:             return '2';
  2276   00135A  0E32               	movlw	50
  2277   00135C  EF02  F00A         	goto	l248
  2278   001360                     l1295:
  2279   001360  FFFF               	dw	65535	; assembler added errata NOP
  2280                           
  2281                           ;keypad.c: 71:             return '5';
  2282   001362  0E35               	movlw	53
  2283   001364  EF02  F00A         	goto	l248
  2284   001368                     l1301:
  2285   001368  FFFF               	dw	65535	; assembler added errata NOP
  2286                           
  2287                           ;keypad.c: 74:             return '8';
  2288   00136A  0E38               	movlw	56
  2289   00136C  EF02  F00A         	goto	l248
  2290   001370                     l1307:
  2291   001370  FFFF               	dw	65535	; assembler added errata NOP
  2292                           
  2293                           ;keypad.c: 77:             return '0';
  2294   001372  0E30               	movlw	48
  2295   001374  EF02  F00A         	goto	l248
  2296   001378                     l1313:
  2297   001378  FFFF               	dw	65535	; assembler added errata NOP
  2298                           
  2299                           ;keypad.c: 81:             return '3';
  2300   00137A  0E33               	movlw	51
  2301   00137C  EF02  F00A         	goto	l248
  2302   001380                     l1319:
  2303   001380  FFFF               	dw	65535	; assembler added errata NOP
  2304                           
  2305                           ;keypad.c: 84:             return '6';
  2306   001382  0E36               	movlw	54
  2307   001384  EF02  F00A         	goto	l248
  2308   001388                     l1325:
  2309   001388  FFFF               	dw	65535	; assembler added errata NOP
  2310                           
  2311                           ;keypad.c: 87:             return '9';
  2312   00138A  0E39               	movlw	57
  2313   00138C  EF02  F00A         	goto	l248
  2314   001390                     l1331:
  2315   001390  FFFF               	dw	65535	; assembler added errata NOP
  2316                           
  2317                           ;keypad.c: 90:             return '#';
  2318   001392  0E23               	movlw	35
  2319   001394  EF02  F00A         	goto	l248
  2320   001398                     l1339:
  2321   001398  FFFF               	dw	65535	; assembler added errata NOP
  2322   00139A  5001               	movf	keypad_value@portValue^0,w,c
  2323                           
  2324                           ; Switch size 1, requested type "simple"
  2325                           ; Number of cases is 12, Range of values is 17 to 72
  2326                           ; switch strategies available:
  2327                           ; Name         Instructions Cycles
  2328                           ; simple_byte           37    19 (average)
  2329                           ;	Chosen strategy is simple_byte
  2330   00139C  0A11               	xorlw	17	; case 17
  2331   00139E  B4D8               	btfsc	status,2,c
  2332   0013A0  EF9C  F009         	goto	l1265
  2333   0013A4  0A03               	xorlw	3	; case 18
  2334   0013A6  B4D8               	btfsc	status,2,c
  2335   0013A8  EFA0  F009         	goto	l1271
  2336   0013AC  0A06               	xorlw	6	; case 20
  2337   0013AE  B4D8               	btfsc	status,2,c
  2338   0013B0  EFA4  F009         	goto	l1277
  2339   0013B4  0A0C               	xorlw	12	; case 24
  2340   0013B6  B4D8               	btfsc	status,2,c
  2341   0013B8  EFA8  F009         	goto	l1283
  2342   0013BC  0A39               	xorlw	57	; case 33
  2343   0013BE  B4D8               	btfsc	status,2,c
  2344   0013C0  EFAC  F009         	goto	l1289
  2345   0013C4  0A03               	xorlw	3	; case 34
  2346   0013C6  B4D8               	btfsc	status,2,c
  2347   0013C8  EFB0  F009         	goto	l1295
  2348   0013CC  0A06               	xorlw	6	; case 36
  2349   0013CE  B4D8               	btfsc	status,2,c
  2350   0013D0  EFB4  F009         	goto	l1301
  2351   0013D4  0A0C               	xorlw	12	; case 40
  2352   0013D6  B4D8               	btfsc	status,2,c
  2353   0013D8  EFB8  F009         	goto	l1307
  2354   0013DC  0A69               	xorlw	105	; case 65
  2355   0013DE  B4D8               	btfsc	status,2,c
  2356   0013E0  EFBC  F009         	goto	l1313
  2357   0013E4  0A03               	xorlw	3	; case 66
  2358   0013E6  B4D8               	btfsc	status,2,c
  2359   0013E8  EFC0  F009         	goto	l1319
  2360   0013EC  0A06               	xorlw	6	; case 68
  2361   0013EE  B4D8               	btfsc	status,2,c
  2362   0013F0  EFC4  F009         	goto	l1325
  2363   0013F4  0A0C               	xorlw	12	; case 72
  2364   0013F6  B4D8               	btfsc	status,2,c
  2365   0013F8  EFC8  F009         	goto	l1331
  2366   0013FC  EF00  F00A         	goto	l1341
  2367   001400                     l1341:
  2368   001400  FFFF               	dw	65535	; assembler added errata NOP
  2369                           
  2370                           ;keypad.c: 93:     return 0;
  2371   001402  0E00               	movlw	0
  2372   001404                     l248:
  2373   001404  FFFF               	dw	65535	; assembler added errata NOP
  2374   001406  0012               	return		;funcret
  2375   001408  FFFF               	dw	65535	; errata NOP
  2376   00140A                     __end_of_keypad_value:
  2377                           	callstack 0
  2378                           
  2379 ;; *************** function _keypad_line_scan *****************
  2380 ;; Defined at:
  2381 ;;		line 41 in file "keypad.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;		None
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;		None
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, status,2, status,0
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2395 ;;      Params:         0       0       0       0       0       0       0
  2396 ;;      Locals:         0       0       0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0
  2398 ;;      Totals:         0       0       0       0       0       0       0
  2399 ;;Total ram usage:        0 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; Hardware stack levels required when called: 1
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		_keypad_read
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text12
  2410   001A4A                     __ptext12:
  2411                           	callstack 0
  2412   001A4A                     _keypad_line_scan:
  2413                           	callstack 0
  2414   001A4A  FFFF               	dw	65535	; assembler added errata NOP
  2415   001A4C                     
  2416                           ;keypad.c: 42:     static uint8_t keypadScan = 0x01;;keypad.c: 43:     keypadScan =( key
      +                          padScan <<1);
  2417   001A4C  502D               	movf	keypad_line_scan@keypadScan^0,w,c
  2418   001A4E  242D               	addwf	keypad_line_scan@keypadScan^0,w,c
  2419   001A50  6E2D               	movwf	keypad_line_scan@keypadScan^0,c
  2420                           
  2421                           ;keypad.c: 44:     if( keypadScan > 0x08){
  2422   001A52  0E08               	movlw	8
  2423   001A54  642D               	cpfsgt	keypad_line_scan@keypadScan^0,c
  2424   001A56  EF2F  F00D         	goto	u361
  2425   001A5A  EF32  F00D         	goto	u360
  2426   001A5E                     u361:
  2427   001A5E  FFFF               	dw	65535	; assembler added errata NOP
  2428   001A60  EF35  F00D         	goto	l1261
  2429   001A64                     u360:
  2430   001A64  FFFF               	dw	65535	; assembler added errata NOP
  2431   001A66                     
  2432                           ;keypad.c: 45:         keypadScan = 0x01;
  2433   001A66  0E01               	movlw	1
  2434   001A68  6E2D               	movwf	keypad_line_scan@keypadScan^0,c
  2435   001A6A                     l1261:
  2436   001A6A  FFFF               	dw	65535	; assembler added errata NOP
  2437                           
  2438                           ;keypad.c: 47:     PORTC = keypadScan;
  2439   001A6C  C02D  FF82         	movff	keypad_line_scan@keypadScan,3970	;volatile
  2440   001A70  0012               	return		;funcret
  2441   001A72  FFFF               	dw	65535	; errata NOP
  2442   001A74                     __end_of_keypad_line_scan:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function _keypad_init *****************
  2446 ;; Defined at:
  2447 ;;		line 12 in file "keypad.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2461 ;;      Params:         0       0       0       0       0       0       0
  2462 ;;      Locals:         0       0       0       0       0       0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0
  2464 ;;      Totals:         0       0       0       0       0       0       0
  2465 ;;Total ram usage:        0 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 2
  2468 ;; This function calls:
  2469 ;;		_DIO_SetPinDirection
  2470 ;; This function is called by:
  2471 ;;		_main
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text13
  2476   0018A2                     __ptext13:
  2477                           	callstack 0
  2478   0018A2                     _keypad_init:
  2479                           	callstack 0
  2480   0018A2  FFFF               	dw	65535	; assembler added errata NOP
  2481   0018A4                     
  2482                           ;keypad.c: 14:   DIO_SetPinDirection(PORT_C,0,OUTPUT);
  2483   0018A4  0E00               	movlw	0
  2484   0018A6  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2485   0018A8  0E01               	movlw	1
  2486   0018AA  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2487   0018AC  0E02               	movlw	2
  2488   0018AE  EC3C  F006         	call	_DIO_SetPinDirection
  2489                           
  2490                           ;keypad.c: 17:   DIO_SetPinDirection(PORT_C,1,OUTPUT);
  2491   0018B2  0E01               	movlw	1
  2492   0018B4  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2493   0018B6  0E01               	movlw	1
  2494   0018B8  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2495   0018BA  0E02               	movlw	2
  2496   0018BC  EC3C  F006         	call	_DIO_SetPinDirection
  2497                           
  2498                           ;keypad.c: 20:   DIO_SetPinDirection(PORT_C,2,OUTPUT);
  2499   0018C0  0E02               	movlw	2
  2500   0018C2  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2501   0018C4  0E01               	movlw	1
  2502   0018C6  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2503   0018C8  0E02               	movlw	2
  2504   0018CA  EC3C  F006         	call	_DIO_SetPinDirection
  2505                           
  2506                           ;keypad.c: 23:   DIO_SetPinDirection(PORT_C,3,OUTPUT);
  2507   0018CE  0E03               	movlw	3
  2508   0018D0  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2509   0018D2  0E01               	movlw	1
  2510   0018D4  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2511   0018D6  0E02               	movlw	2
  2512   0018D8  EC3C  F006         	call	_DIO_SetPinDirection
  2513                           
  2514                           ;keypad.c: 27:   DIO_SetPinDirection(PORT_C,4,INPUT);
  2515   0018DC  0E04               	movlw	4
  2516   0018DE  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2517   0018E0  0E00               	movlw	0
  2518   0018E2  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2519   0018E4  0E02               	movlw	2
  2520   0018E6  EC3C  F006         	call	_DIO_SetPinDirection
  2521                           
  2522                           ;keypad.c: 31:   DIO_SetPinDirection(PORT_C,5,INPUT);
  2523   0018EA  0E05               	movlw	5
  2524   0018EC  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2525   0018EE  0E00               	movlw	0
  2526   0018F0  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2527   0018F2  0E02               	movlw	2
  2528   0018F4  EC3C  F006         	call	_DIO_SetPinDirection
  2529                           
  2530                           ;keypad.c: 35:   DIO_SetPinDirection(PORT_C,6,INPUT);
  2531   0018F8  0E06               	movlw	6
  2532   0018FA  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2533   0018FC  0E00               	movlw	0
  2534   0018FE  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2535   001900  0E02               	movlw	2
  2536   001902  EC3C  F006         	call	_DIO_SetPinDirection
  2537   001906  0012               	return		;funcret
  2538   001908  FFFF               	dw	65535	; errata NOP
  2539   00190A                     __end_of_keypad_init:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _buzzer_on *****************
  2543 ;; Defined at:
  2544 ;;		line 12 in file "buzzer.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  port            1    wreg     enum E2181
  2547 ;;  pinNo           1    5[COMRAM] unsigned char 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  port            1    6[COMRAM] enum E2181
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2, status,0, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2559 ;;      Params:         1       0       0       0       0       0       0
  2560 ;;      Locals:         1       0       0       0       0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0
  2562 ;;      Totals:         2       0       0       0       0       0       0
  2563 ;;Total ram usage:        2 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; Hardware stack levels required when called: 2
  2566 ;; This function calls:
  2567 ;;		_DIO_SetPinValue
  2568 ;; This function is called by:
  2569 ;;		_main
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text14
  2574   001AE6                     __ptext14:
  2575                           	callstack 0
  2576   001AE6                     _buzzer_on:
  2577                           	callstack 0
  2578   001AE6  FFFF               	dw	65535	; assembler added errata NOP
  2579                           
  2580                           ;incstack = 0
  2581                           ;buzzer_on@port stored from wreg
  2582   001AE8  6E07               	movwf	buzzer_on@port^0,c
  2583   001AEA                     
  2584                           ;buzzer.c: 13:     DIO_SetPinValue(port,pinNo,HIGH);
  2585   001AEA  C006  F001         	movff	buzzer_on@pinNo,DIO_SetPinValue@pinNo
  2586   001AEE  0E01               	movlw	1
  2587   001AF0  6E02               	movwf	DIO_SetPinValue@value^0,c
  2588   001AF2  5007               	movf	buzzer_on@port^0,w,c
  2589   001AF4  EC5B  F007         	call	_DIO_SetPinValue
  2590   001AF8  0012               	return		;funcret
  2591   001AFA  FFFF               	dw	65535	; errata NOP
  2592   001AFC                     __end_of_buzzer_on:
  2593                           	callstack 0
  2594                           
  2595 ;; *************** function _buzzer_off *****************
  2596 ;; Defined at:
  2597 ;;		line 15 in file "buzzer.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  port            1    wreg     enum E2181
  2600 ;;  pinNo           1    5[COMRAM] unsigned char 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  port            1    6[COMRAM] enum E2181
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, status,0, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2612 ;;      Params:         1       0       0       0       0       0       0
  2613 ;;      Locals:         1       0       0       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0
  2615 ;;      Totals:         2       0       0       0       0       0       0
  2616 ;;Total ram usage:        2 bytes
  2617 ;; Hardware stack levels used: 1
  2618 ;; Hardware stack levels required when called: 2
  2619 ;; This function calls:
  2620 ;;		_DIO_SetPinValue
  2621 ;; This function is called by:
  2622 ;;		_main
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           	psect	text15
  2627   001AFC                     __ptext15:
  2628                           	callstack 0
  2629   001AFC                     _buzzer_off:
  2630                           	callstack 0
  2631   001AFC  FFFF               	dw	65535	; assembler added errata NOP
  2632                           
  2633                           ;incstack = 0
  2634                           ;buzzer_off@port stored from wreg
  2635   001AFE  6E07               	movwf	buzzer_off@port^0,c
  2636   001B00                     
  2637                           ;buzzer.c: 16:     DIO_SetPinValue(port,pinNo,LOW);
  2638   001B00  C006  F001         	movff	buzzer_off@pinNo,DIO_SetPinValue@pinNo
  2639   001B04  0E00               	movlw	0
  2640   001B06  6E02               	movwf	DIO_SetPinValue@value^0,c
  2641   001B08  5007               	movf	buzzer_off@port^0,w,c
  2642   001B0A  EC5B  F007         	call	_DIO_SetPinValue
  2643   001B0E  0012               	return		;funcret
  2644   001B10  FFFF               	dw	65535	; errata NOP
  2645   001B12                     __end_of_buzzer_off:
  2646                           	callstack 0
  2647                           
  2648 ;; *************** function _buzzer_init *****************
  2649 ;; Defined at:
  2650 ;;		line 9 in file "buzzer.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  port            1    wreg     enum E2181
  2653 ;;  pinNo           1    5[COMRAM] unsigned char 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  port            1    6[COMRAM] enum E2181
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2665 ;;      Params:         1       0       0       0       0       0       0
  2666 ;;      Locals:         1       0       0       0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0
  2668 ;;      Totals:         2       0       0       0       0       0       0
  2669 ;;Total ram usage:        2 bytes
  2670 ;; Hardware stack levels used: 1
  2671 ;; Hardware stack levels required when called: 2
  2672 ;; This function calls:
  2673 ;;		_DIO_SetPinDirection
  2674 ;; This function is called by:
  2675 ;;		_main
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text16
  2680   001B12                     __ptext16:
  2681                           	callstack 0
  2682   001B12                     _buzzer_init:
  2683                           	callstack 0
  2684   001B12  FFFF               	dw	65535	; assembler added errata NOP
  2685                           
  2686                           ;incstack = 0
  2687                           ;buzzer_init@port stored from wreg
  2688   001B14  6E07               	movwf	buzzer_init@port^0,c
  2689   001B16                     
  2690                           ;buzzer.c: 10:     DIO_SetPinDirection(port,pinNo,OUTPUT);
  2691   001B16  C006  F001         	movff	buzzer_init@pinNo,DIO_SetPinDirection@pinNo
  2692   001B1A  0E01               	movlw	1
  2693   001B1C  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2694   001B1E  5007               	movf	buzzer_init@port^0,w,c
  2695   001B20  EC3C  F006         	call	_DIO_SetPinDirection
  2696   001B24  0012               	return		;funcret
  2697   001B26  FFFF               	dw	65535	; errata NOP
  2698   001B28                     __end_of_buzzer_init:
  2699                           	callstack 0
  2700                           
  2701 ;; *************** function _button_init *****************
  2702 ;; Defined at:
  2703 ;;		line 8 in file "button.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  port            1    wreg     enum E2181
  2706 ;;  pinNo           1    5[COMRAM] unsigned char 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  port            1    6[COMRAM] enum E2181
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2718 ;;      Params:         1       0       0       0       0       0       0
  2719 ;;      Locals:         1       0       0       0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0       0
  2721 ;;      Totals:         2       0       0       0       0       0       0
  2722 ;;Total ram usage:        2 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; Hardware stack levels required when called: 2
  2725 ;; This function calls:
  2726 ;;		_DIO_SetPinDirection
  2727 ;; This function is called by:
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text17
  2733   001B28                     __ptext17:
  2734                           	callstack 0
  2735   001B28                     _button_init:
  2736                           	callstack 0
  2737   001B28  FFFF               	dw	65535	; assembler added errata NOP
  2738                           
  2739                           ;incstack = 0
  2740                           ;button_init@port stored from wreg
  2741   001B2A  6E07               	movwf	button_init@port^0,c
  2742   001B2C                     
  2743                           ;button.c: 9:     DIO_SetPinDirection(port,pinNo,INPUT);
  2744   001B2C  C006  F001         	movff	button_init@pinNo,DIO_SetPinDirection@pinNo
  2745   001B30  0E00               	movlw	0
  2746   001B32  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2747   001B34  5007               	movf	button_init@port^0,w,c
  2748   001B36  EC3C  F006         	call	_DIO_SetPinDirection
  2749   001B3A  0012               	return		;funcret
  2750   001B3C  FFFF               	dw	65535	; errata NOP
  2751   001B3E                     __end_of_button_init:
  2752                           	callstack 0
  2753                           
  2754 ;; *************** function _button_getState *****************
  2755 ;; Defined at:
  2756 ;;		line 11 in file "button.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  port            1    wreg     enum E2181
  2759 ;;  pinNo           1    5[COMRAM] unsigned char 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  port            1    6[COMRAM] enum E2181
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      unsigned char 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2771 ;;      Params:         1       0       0       0       0       0       0
  2772 ;;      Locals:         1       0       0       0       0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0
  2774 ;;      Totals:         2       0       0       0       0       0       0
  2775 ;;Total ram usage:        2 bytes
  2776 ;; Hardware stack levels used: 1
  2777 ;; Hardware stack levels required when called: 2
  2778 ;; This function calls:
  2779 ;;		_DIO_GetPinValue
  2780 ;; This function is called by:
  2781 ;;		_main
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text18
  2786   001B66                     __ptext18:
  2787                           	callstack 0
  2788   001B66                     _button_getState:
  2789                           	callstack 0
  2790   001B66  FFFF               	dw	65535	; assembler added errata NOP
  2791                           
  2792                           ;incstack = 0
  2793                           ;button_getState@port stored from wreg
  2794   001B68  6E07               	movwf	button_getState@port^0,c
  2795   001B6A                     
  2796                           ;button.c: 12:     return DIO_GetPinValue(port,pinNo);
  2797   001B6A  C006  F001         	movff	button_getState@pinNo,DIO_GetPinValue@pinNo
  2798   001B6E  5007               	movf	button_getState@port^0,w,c
  2799   001B70  EC7A  F008         	call	_DIO_GetPinValue
  2800   001B74  0012               	return		;funcret
  2801   001B76  FFFF               	dw	65535	; errata NOP
  2802   001B78                     __end_of_button_getState:
  2803                           	callstack 0
  2804                           
  2805 ;; *************** function _DIO_GetPinValue *****************
  2806 ;; Defined at:
  2807 ;;		line 106 in file "gpio.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  portName        1    wreg     enum E2181
  2810 ;;  pinNo           1    0[COMRAM] unsigned char 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  portName        1    3[COMRAM] enum E2181
  2813 ;;  flush           1    4[COMRAM] unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      unsigned char 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2823 ;;      Params:         1       0       0       0       0       0       0
  2824 ;;      Locals:         2       0       0       0       0       0       0
  2825 ;;      Temps:          2       0       0       0       0       0       0
  2826 ;;      Totals:         5       0       0       0       0       0       0
  2827 ;;Total ram usage:        5 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; Hardware stack levels required when called: 1
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_button_getState
  2834 ;;		_pir_getState
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text19
  2839   0010F4                     __ptext19:
  2840                           	callstack 0
  2841   0010F4                     _DIO_GetPinValue:
  2842                           	callstack 0
  2843   0010F4  FFFF               	dw	65535	; assembler added errata NOP
  2844                           
  2845                           ;incstack = 0
  2846                           ;DIO_GetPinValue@portName stored from wreg
  2847   0010F6  6E04               	movwf	DIO_GetPinValue@portName^0,c
  2848   0010F8                     
  2849                           ;gpio.c: 107:     uint8_t flush = PORTA;
  2850   0010F8  CF80 F005          	movff	3968,DIO_GetPinValue@flush	;volatile
  2851                           
  2852                           ;gpio.c: 108:     flush = PORTB;
  2853   0010FC  CF81 F005          	movff	3969,DIO_GetPinValue@flush	;volatile
  2854                           
  2855                           ;gpio.c: 109:     flush = PORTC;
  2856   001100  CF82 F005          	movff	3970,DIO_GetPinValue@flush	;volatile
  2857                           
  2858                           ;gpio.c: 110:     flush = PORTD;
  2859   001104  CF83 F005          	movff	3971,DIO_GetPinValue@flush	;volatile
  2860                           
  2861                           ;gpio.c: 111:     flush = PORTE;
  2862   001108  CF84 F005          	movff	3972,DIO_GetPinValue@flush	;volatile
  2863                           
  2864                           ;gpio.c: 112:     switch (portName){
  2865   00110C  EFE7  F008         	goto	l1879
  2866   001110                     l1847:
  2867   001110  FFFF               	dw	65535	; assembler added errata NOP
  2868                           
  2869                           ;gpio.c: 114:             return (((PORTA)>>(pinNo)) & 1);
  2870   001112  C001  F002         	movff	DIO_GetPinValue@pinNo,??_DIO_GetPinValue
  2871   001116  CF80 F003          	movff	3968,??_DIO_GetPinValue+1	;volatile
  2872   00111A  2A02               	incf	??_DIO_GetPinValue^0,f,c
  2873   00111C  EF93  F008         	goto	u1134
  2874   001120                     u1135:
  2875   001120  FFFF               	dw	65535	; assembler added errata NOP
  2876   001122  90D8               	bcf	status,0,c
  2877   001124  3203               	rrcf	(??_DIO_GetPinValue+1)^0,f,c
  2878   001126                     u1134:
  2879   001126  FFFF               	dw	65535	; assembler added errata NOP
  2880   001128  2E02               	decfsz	??_DIO_GetPinValue^0,f,c
  2881   00112A  EF90  F008         	goto	u1135
  2882   00112E  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2883   001130  0B01               	andlw	1
  2884   001132  EF0C  F009         	goto	l195
  2885   001136                     l1853:
  2886   001136  FFFF               	dw	65535	; assembler added errata NOP
  2887                           
  2888                           ;gpio.c: 117:             return (((PORTB)>>(pinNo)) & 1);
  2889   001138  C001  F002         	movff	DIO_GetPinValue@pinNo,??_DIO_GetPinValue
  2890   00113C  CF81 F003          	movff	3969,??_DIO_GetPinValue+1	;volatile
  2891   001140  2A02               	incf	??_DIO_GetPinValue^0,f,c
  2892   001142  EFA6  F008         	goto	u1144
  2893   001146                     u1145:
  2894   001146  FFFF               	dw	65535	; assembler added errata NOP
  2895   001148  90D8               	bcf	status,0,c
  2896   00114A  3203               	rrcf	(??_DIO_GetPinValue+1)^0,f,c
  2897   00114C                     u1144:
  2898   00114C  FFFF               	dw	65535	; assembler added errata NOP
  2899   00114E  2E02               	decfsz	??_DIO_GetPinValue^0,f,c
  2900   001150  EFA3  F008         	goto	u1145
  2901   001154  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2902   001156  0B01               	andlw	1
  2903   001158  EF0C  F009         	goto	l195
  2904   00115C                     l1859:
  2905   00115C  FFFF               	dw	65535	; assembler added errata NOP
  2906                           
  2907                           ;gpio.c: 120:             return (((PORTC)>>(pinNo)) & 1);
  2908   00115E  C001  F002         	movff	DIO_GetPinValue@pinNo,??_DIO_GetPinValue
  2909   001162  CF82 F003          	movff	3970,??_DIO_GetPinValue+1	;volatile
  2910   001166  2A02               	incf	??_DIO_GetPinValue^0,f,c
  2911   001168  EFB9  F008         	goto	u1154
  2912   00116C                     u1155:
  2913   00116C  FFFF               	dw	65535	; assembler added errata NOP
  2914   00116E  90D8               	bcf	status,0,c
  2915   001170  3203               	rrcf	(??_DIO_GetPinValue+1)^0,f,c
  2916   001172                     u1154:
  2917   001172  FFFF               	dw	65535	; assembler added errata NOP
  2918   001174  2E02               	decfsz	??_DIO_GetPinValue^0,f,c
  2919   001176  EFB6  F008         	goto	u1155
  2920   00117A  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2921   00117C  0B01               	andlw	1
  2922   00117E  EF0C  F009         	goto	l195
  2923   001182                     l1865:
  2924   001182  FFFF               	dw	65535	; assembler added errata NOP
  2925                           
  2926                           ;gpio.c: 123:             return (((PORTD)>>(pinNo)) & 1);
  2927   001184  C001  F002         	movff	DIO_GetPinValue@pinNo,??_DIO_GetPinValue
  2928   001188  CF83 F003          	movff	3971,??_DIO_GetPinValue+1	;volatile
  2929   00118C  2A02               	incf	??_DIO_GetPinValue^0,f,c
  2930   00118E  EFCC  F008         	goto	u1164
  2931   001192                     u1165:
  2932   001192  FFFF               	dw	65535	; assembler added errata NOP
  2933   001194  90D8               	bcf	status,0,c
  2934   001196  3203               	rrcf	(??_DIO_GetPinValue+1)^0,f,c
  2935   001198                     u1164:
  2936   001198  FFFF               	dw	65535	; assembler added errata NOP
  2937   00119A  2E02               	decfsz	??_DIO_GetPinValue^0,f,c
  2938   00119C  EFC9  F008         	goto	u1165
  2939   0011A0  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2940   0011A2  0B01               	andlw	1
  2941   0011A4  EF0C  F009         	goto	l195
  2942   0011A8                     l1871:
  2943   0011A8  FFFF               	dw	65535	; assembler added errata NOP
  2944                           
  2945                           ;gpio.c: 126:             return (((PORTE)>>(pinNo)) & 1);
  2946   0011AA  C001  F002         	movff	DIO_GetPinValue@pinNo,??_DIO_GetPinValue
  2947   0011AE  CF84 F003          	movff	3972,??_DIO_GetPinValue+1	;volatile
  2948   0011B2  2A02               	incf	??_DIO_GetPinValue^0,f,c
  2949   0011B4  EFDF  F008         	goto	u1174
  2950   0011B8                     u1175:
  2951   0011B8  FFFF               	dw	65535	; assembler added errata NOP
  2952   0011BA  90D8               	bcf	status,0,c
  2953   0011BC  3203               	rrcf	(??_DIO_GetPinValue+1)^0,f,c
  2954   0011BE                     u1174:
  2955   0011BE  FFFF               	dw	65535	; assembler added errata NOP
  2956   0011C0  2E02               	decfsz	??_DIO_GetPinValue^0,f,c
  2957   0011C2  EFDC  F008         	goto	u1175
  2958   0011C6  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2959   0011C8  0B01               	andlw	1
  2960   0011CA  EF0C  F009         	goto	l195
  2961   0011CE                     l1879:
  2962   0011CE  FFFF               	dw	65535	; assembler added errata NOP
  2963   0011D0  5004               	movf	DIO_GetPinValue@portName^0,w,c
  2964   0011D2  6E02               	movwf	??_DIO_GetPinValue^0,c
  2965   0011D4  6A03               	clrf	(??_DIO_GetPinValue+1)^0,c
  2966                           
  2967                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2968                           ; Switch size 1, requested type "simple"
  2969                           ; Number of cases is 1, Range of values is 0 to 0
  2970                           ; switch strategies available:
  2971                           ; Name         Instructions Cycles
  2972                           ; simple_byte            4     3 (average)
  2973                           ;	Chosen strategy is simple_byte
  2974   0011D6  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2975   0011D8  0A00               	xorlw	0	; case 0
  2976   0011DA  B4D8               	btfsc	status,2,c
  2977   0011DC  EFF2  F008         	goto	l2209
  2978   0011E0  EF0A  F009         	goto	l1881
  2979   0011E4                     l2209:
  2980   0011E4  FFFF               	dw	65535	; assembler added errata NOP
  2981                           
  2982                           ; Switch size 1, requested type "simple"
  2983                           ; Number of cases is 5, Range of values is 0 to 4
  2984                           ; switch strategies available:
  2985                           ; Name         Instructions Cycles
  2986                           ; simple_byte           16     9 (average)
  2987                           ;	Chosen strategy is simple_byte
  2988   0011E6  5002               	movf	??_DIO_GetPinValue^0,w,c
  2989   0011E8  0A00               	xorlw	0	; case 0
  2990   0011EA  B4D8               	btfsc	status,2,c
  2991   0011EC  EF88  F008         	goto	l1847
  2992   0011F0  0A01               	xorlw	1	; case 1
  2993   0011F2  B4D8               	btfsc	status,2,c
  2994   0011F4  EF9B  F008         	goto	l1853
  2995   0011F8  0A03               	xorlw	3	; case 2
  2996   0011FA  B4D8               	btfsc	status,2,c
  2997   0011FC  EFAE  F008         	goto	l1859
  2998   001200  0A01               	xorlw	1	; case 3
  2999   001202  B4D8               	btfsc	status,2,c
  3000   001204  EFC1  F008         	goto	l1865
  3001   001208  0A07               	xorlw	7	; case 4
  3002   00120A  B4D8               	btfsc	status,2,c
  3003   00120C  EFD4  F008         	goto	l1871
  3004   001210  EF0A  F009         	goto	l1881
  3005   001214                     l1881:
  3006   001214  FFFF               	dw	65535	; assembler added errata NOP
  3007                           
  3008                           ;gpio.c: 129:     return 1;
  3009   001216  0E01               	movlw	1
  3010   001218                     l195:
  3011   001218  FFFF               	dw	65535	; assembler added errata NOP
  3012   00121A  0012               	return		;funcret
  3013   00121C  FFFF               	dw	65535	; errata NOP
  3014   00121E                     __end_of_DIO_GetPinValue:
  3015                           	callstack 0
  3016                           
  3017 ;; *************** function _Timer0_init *****************
  3018 ;; Defined at:
  3019 ;;		line 48 in file "main.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;		None
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;		None
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      void 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3033 ;;      Params:         0       0       0       0       0       0       0
  3034 ;;      Locals:         0       0       0       0       0       0       0
  3035 ;;      Temps:          0       0       0       0       0       0       0
  3036 ;;      Totals:         0       0       0       0       0       0       0
  3037 ;;Total ram usage:        0 bytes
  3038 ;; Hardware stack levels used: 1
  3039 ;; Hardware stack levels required when called: 1
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_main
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text20
  3048   001B3E                     __ptext20:
  3049                           	callstack 0
  3050   001B3E                     _Timer0_init:
  3051                           	callstack 0
  3052   001B3E  FFFF               	dw	65535	; assembler added errata NOP
  3053   001B40                     
  3054                           ;main.c: 49:     T0CON = 0X87;
  3055   001B40  0E87               	movlw	135
  3056   001B42  6ED5               	movwf	213,c	;volatile
  3057                           
  3058                           ;main.c: 50:     TMR0H = 0xF0;
  3059   001B44  0EF0               	movlw	240
  3060   001B46  6ED7               	movwf	215,c	;volatile
  3061                           
  3062                           ;main.c: 51:     TMR0L = 0xBD;
  3063   001B48  0EBD               	movlw	189
  3064   001B4A  6ED6               	movwf	214,c	;volatile
  3065   001B4C                     
  3066                           ;main.c: 52:     TMR0IE = 1;
  3067   001B4C  8AF2               	bsf	4082,5,c	;volatile
  3068   001B4E                     
  3069                           ;main.c: 53:     GIE =1;
  3070   001B4E  8EF2               	bsf	4082,7,c	;volatile
  3071   001B50  0012               	return		;funcret
  3072   001B52  FFFF               	dw	65535	; errata NOP
  3073   001B54                     __end_of_Timer0_init:
  3074                           	callstack 0
  3075                           
  3076 ;; *************** function _LCD_init *****************
  3077 ;; Defined at:
  3078 ;;		line 14 in file "lcd.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;		None
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;		None
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3092 ;;      Params:         0       0       0       0       0       0       0
  3093 ;;      Locals:         0       0       0       0       0       0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0
  3095 ;;      Totals:         0       0       0       0       0       0       0
  3096 ;;Total ram usage:        0 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 3
  3099 ;; This function calls:
  3100 ;;		_DIO_SetPinDirection
  3101 ;;		_DIO_SetPortValue
  3102 ;;		_LCD_sendCommand
  3103 ;; This function is called by:
  3104 ;;		_main
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text21
  3109   001628                     __ptext21:
  3110                           	callstack 0
  3111   001628                     _LCD_init:
  3112                           	callstack 0
  3113   001628  FFFF               	dw	65535	; assembler added errata NOP
  3114   00162A                     
  3115                           ;lcd.c: 17:  DIO_SetPinDirection( PORT_D,3, OUTPUT);
  3116   00162A  0E03               	movlw	3
  3117   00162C  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3118   00162E  0E01               	movlw	1
  3119   001630  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3120   001632  0E03               	movlw	3
  3121   001634  EC3C  F006         	call	_DIO_SetPinDirection
  3122                           
  3123                           ;lcd.c: 18:  DIO_SetPinDirection( PORT_D,1, OUTPUT);
  3124   001638  0E01               	movlw	1
  3125   00163A  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3126   00163C  0E01               	movlw	1
  3127   00163E  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3128   001640  0E03               	movlw	3
  3129   001642  EC3C  F006         	call	_DIO_SetPinDirection
  3130                           
  3131                           ;lcd.c: 19:  DIO_SetPinDirection( PORT_D,2, OUTPUT);
  3132   001646  0E02               	movlw	2
  3133   001648  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3134   00164A  0E01               	movlw	1
  3135   00164C  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3136   00164E  0E03               	movlw	3
  3137   001650  EC3C  F006         	call	_DIO_SetPinDirection
  3138                           
  3139                           ;lcd.c: 21:  DIO_SetPortValue(PORT_D, 0x00);
  3140   001654  0E00               	movlw	0
  3141   001656  6E01               	movwf	DIO_SetPortValue@value^0,c
  3142   001658  0E03               	movlw	3
  3143   00165A  EC5E  F00B         	call	_DIO_SetPortValue
  3144                           
  3145                           ;lcd.c: 22:  DIO_SetPortValue(PORT_D, 0x00);
  3146   00165E  0E00               	movlw	0
  3147   001660  6E01               	movwf	DIO_SetPortValue@value^0,c
  3148   001662  0E03               	movlw	3
  3149   001664  EC5E  F00B         	call	_DIO_SetPortValue
  3150                           
  3151                           ;lcd.c: 25:     DIO_SetPinDirection(PORT_D, 4, OUTPUT);
  3152   001668  0E04               	movlw	4
  3153   00166A  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3154   00166C  0E01               	movlw	1
  3155   00166E  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3156   001670  0E03               	movlw	3
  3157   001672  EC3C  F006         	call	_DIO_SetPinDirection
  3158                           
  3159                           ;lcd.c: 26:     DIO_SetPinDirection(PORT_D, 5, OUTPUT);
  3160   001676  0E05               	movlw	5
  3161   001678  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3162   00167A  0E01               	movlw	1
  3163   00167C  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3164   00167E  0E03               	movlw	3
  3165   001680  EC3C  F006         	call	_DIO_SetPinDirection
  3166                           
  3167                           ;lcd.c: 27:     DIO_SetPinDirection(PORT_D, 6, OUTPUT);
  3168   001684  0E06               	movlw	6
  3169   001686  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3170   001688  0E01               	movlw	1
  3171   00168A  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3172   00168C  0E03               	movlw	3
  3173   00168E  EC3C  F006         	call	_DIO_SetPinDirection
  3174                           
  3175                           ;lcd.c: 28:     DIO_SetPinDirection(PORT_D, 7, OUTPUT);
  3176   001692  0E07               	movlw	7
  3177   001694  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3178   001696  0E01               	movlw	1
  3179   001698  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3180   00169A  0E03               	movlw	3
  3181   00169C  EC3C  F006         	call	_DIO_SetPinDirection
  3182                           
  3183                           ;lcd.c: 30:  LCD_sendCommand(0x02);
  3184   0016A0  0E02               	movlw	2
  3185   0016A2  EC66  F00A         	call	_LCD_sendCommand
  3186                           
  3187                           ;lcd.c: 31:  LCD_sendCommand(0x28);
  3188   0016A6  0E28               	movlw	40
  3189   0016A8  EC66  F00A         	call	_LCD_sendCommand
  3190                           
  3191                           ;lcd.c: 34:  LCD_sendCommand(0x0C);
  3192   0016AC  0E0C               	movlw	12
  3193   0016AE  EC66  F00A         	call	_LCD_sendCommand
  3194                           
  3195                           ;lcd.c: 35:  LCD_sendCommand(0x01);
  3196   0016B2  0E01               	movlw	1
  3197   0016B4  EC66  F00A         	call	_LCD_sendCommand
  3198   0016B8  0012               	return		;funcret
  3199   0016BA  FFFF               	dw	65535	; errata NOP
  3200   0016BC                     __end_of_LCD_init:
  3201                           	callstack 0
  3202                           
  3203 ;; *************** function _DIO_SetPortValue *****************
  3204 ;; Defined at:
  3205 ;;		line 132 in file "gpio.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  portName        1    wreg     enum E2181
  3208 ;;  value           1    0[COMRAM] unsigned char 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  portName        1    3[COMRAM] enum E2181
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3220 ;;      Params:         1       0       0       0       0       0       0
  3221 ;;      Locals:         1       0       0       0       0       0       0
  3222 ;;      Temps:          2       0       0       0       0       0       0
  3223 ;;      Totals:         4       0       0       0       0       0       0
  3224 ;;Total ram usage:        4 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; Hardware stack levels required when called: 1
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_LCD_init
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text22
  3235   0016BC                     __ptext22:
  3236                           	callstack 0
  3237   0016BC                     _DIO_SetPortValue:
  3238                           	callstack 0
  3239   0016BC  FFFF               	dw	65535	; assembler added errata NOP
  3240                           
  3241                           ;incstack = 0
  3242                           ;DIO_SetPortValue@portName stored from wreg
  3243   0016BE  6E04               	movwf	DIO_SetPortValue@portName^0,c
  3244   0016C0                     
  3245                           ;gpio.c: 133:     switch (portName){
  3246   0016C0  EF7B  F00B         	goto	l1893
  3247   0016C4                     l204:
  3248   0016C4  FFFF               	dw	65535	; assembler added errata NOP
  3249                           
  3250                           ;gpio.c: 135:              PORTA = value;
  3251   0016C6  C001  FF80         	movff	DIO_SetPortValue@value,3968	;volatile
  3252                           
  3253                           ;gpio.c: 136:         break;
  3254   0016CA  EF9E  F00B         	goto	l210
  3255   0016CE                     l206:
  3256   0016CE  FFFF               	dw	65535	; assembler added errata NOP
  3257                           
  3258                           ;gpio.c: 138:              PORTB = value;
  3259   0016D0  C001  FF81         	movff	DIO_SetPortValue@value,3969	;volatile
  3260                           
  3261                           ;gpio.c: 139:         break;
  3262   0016D4  EF9E  F00B         	goto	l210
  3263   0016D8                     l207:
  3264   0016D8  FFFF               	dw	65535	; assembler added errata NOP
  3265                           
  3266                           ;gpio.c: 141:              PORTC = value;
  3267   0016DA  C001  FF82         	movff	DIO_SetPortValue@value,3970	;volatile
  3268                           
  3269                           ;gpio.c: 142:         break;
  3270   0016DE  EF9E  F00B         	goto	l210
  3271   0016E2                     l208:
  3272   0016E2  FFFF               	dw	65535	; assembler added errata NOP
  3273                           
  3274                           ;gpio.c: 144:              PORTD = value;
  3275   0016E4  C001  FF83         	movff	DIO_SetPortValue@value,3971	;volatile
  3276                           
  3277                           ;gpio.c: 145:         break;
  3278   0016E8  EF9E  F00B         	goto	l210
  3279   0016EC                     l209:
  3280   0016EC  FFFF               	dw	65535	; assembler added errata NOP
  3281                           
  3282                           ;gpio.c: 147:              PORTE = value;
  3283   0016EE  C001  FF84         	movff	DIO_SetPortValue@value,3972	;volatile
  3284                           
  3285                           ;gpio.c: 148:         break;
  3286   0016F2  EF9E  F00B         	goto	l210
  3287   0016F6                     l1893:
  3288   0016F6  FFFF               	dw	65535	; assembler added errata NOP
  3289   0016F8  5004               	movf	DIO_SetPortValue@portName^0,w,c
  3290   0016FA  6E02               	movwf	??_DIO_SetPortValue^0,c
  3291   0016FC  6A03               	clrf	(??_DIO_SetPortValue+1)^0,c
  3292                           
  3293                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3294                           ; Switch size 1, requested type "simple"
  3295                           ; Number of cases is 1, Range of values is 0 to 0
  3296                           ; switch strategies available:
  3297                           ; Name         Instructions Cycles
  3298                           ; simple_byte            4     3 (average)
  3299                           ;	Chosen strategy is simple_byte
  3300   0016FE  5003               	movf	(??_DIO_SetPortValue+1)^0,w,c
  3301   001700  0A00               	xorlw	0	; case 0
  3302   001702  B4D8               	btfsc	status,2,c
  3303   001704  EF86  F00B         	goto	l2211
  3304   001708  EF9E  F00B         	goto	l210
  3305   00170C                     l2211:
  3306   00170C  FFFF               	dw	65535	; assembler added errata NOP
  3307                           
  3308                           ; Switch size 1, requested type "simple"
  3309                           ; Number of cases is 5, Range of values is 0 to 4
  3310                           ; switch strategies available:
  3311                           ; Name         Instructions Cycles
  3312                           ; simple_byte           16     9 (average)
  3313                           ;	Chosen strategy is simple_byte
  3314   00170E  5002               	movf	??_DIO_SetPortValue^0,w,c
  3315   001710  0A00               	xorlw	0	; case 0
  3316   001712  B4D8               	btfsc	status,2,c
  3317   001714  EF62  F00B         	goto	l204
  3318   001718  0A01               	xorlw	1	; case 1
  3319   00171A  B4D8               	btfsc	status,2,c
  3320   00171C  EF67  F00B         	goto	l206
  3321   001720  0A03               	xorlw	3	; case 2
  3322   001722  B4D8               	btfsc	status,2,c
  3323   001724  EF6C  F00B         	goto	l207
  3324   001728  0A01               	xorlw	1	; case 3
  3325   00172A  B4D8               	btfsc	status,2,c
  3326   00172C  EF71  F00B         	goto	l208
  3327   001730  0A07               	xorlw	7	; case 4
  3328   001732  B4D8               	btfsc	status,2,c
  3329   001734  EF76  F00B         	goto	l209
  3330   001738  EF9E  F00B         	goto	l210
  3331   00173C                     l210:
  3332   00173C  FFFF               	dw	65535	; assembler added errata NOP
  3333   00173E  0012               	return		;funcret
  3334   001740  FFFF               	dw	65535	; errata NOP
  3335   001742                     __end_of_DIO_SetPortValue:
  3336                           	callstack 0
  3337                           
  3338 ;; *************** function _DIO_SetPinDirection *****************
  3339 ;; Defined at:
  3340 ;;		line 15 in file "gpio.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  portName        1    wreg     enum E2181
  3343 ;;  pinNo           1    0[COMRAM] unsigned char 
  3344 ;;  direction       1    1[COMRAM] enum E2177
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  portName        1    4[COMRAM] enum E2181
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      void 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3356 ;;      Params:         2       0       0       0       0       0       0
  3357 ;;      Locals:         1       0       0       0       0       0       0
  3358 ;;      Temps:          2       0       0       0       0       0       0
  3359 ;;      Totals:         5       0       0       0       0       0       0
  3360 ;;Total ram usage:        5 bytes
  3361 ;; Hardware stack levels used: 1
  3362 ;; Hardware stack levels required when called: 1
  3363 ;; This function calls:
  3364 ;;		Nothing
  3365 ;; This function is called by:
  3366 ;;		_keypad_init
  3367 ;;		_LCD_init
  3368 ;;		_motor_init
  3369 ;;		_led_init
  3370 ;;		_buzzer_init
  3371 ;;		_button_init
  3372 ;;		_pir_init
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           	psect	text23
  3377   000C78                     __ptext23:
  3378                           	callstack 0
  3379   000C78                     _DIO_SetPinDirection:
  3380                           	callstack 0
  3381   000C78  FFFF               	dw	65535	; assembler added errata NOP
  3382                           
  3383                           ;incstack = 0
  3384                           ;DIO_SetPinDirection@portName stored from wreg
  3385   000C7A  6E05               	movwf	DIO_SetPinDirection@portName^0,c
  3386   000C7C                     
  3387                           ;gpio.c: 16:     switch (portName){
  3388   000C7C  EF35  F007         	goto	l1839
  3389   000C80                     l1807:
  3390   000C80  FFFF               	dw	65535	; assembler added errata NOP
  3391                           
  3392                           ;gpio.c: 18:             if(direction == OUTPUT){
  3393   000C82  0402               	decf	DIO_SetPinDirection@direction^0,w,c
  3394   000C84  A4D8               	btfss	status,2,c
  3395   000C86  EF47  F006         	goto	u981
  3396   000C8A  EF4A  F006         	goto	u980
  3397   000C8E                     u981:
  3398   000C8E  FFFF               	dw	65535	; assembler added errata NOP
  3399   000C90  EF5E  F006         	goto	l1811
  3400   000C94                     u980:
  3401   000C94  FFFF               	dw	65535	; assembler added errata NOP
  3402   000C96                     
  3403                           ;gpio.c: 19:                 (TRISA)&=~(1<<(pinNo));
  3404   000C96  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3405   000C9A  0E01               	movlw	1
  3406   000C9C  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3407   000C9E  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3408   000CA0  EF55  F006         	goto	u994
  3409   000CA4                     u995:
  3410   000CA4  FFFF               	dw	65535	; assembler added errata NOP
  3411   000CA6  90D8               	bcf	status,0,c
  3412   000CA8  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3413   000CAA                     u994:
  3414   000CAA  FFFF               	dw	65535	; assembler added errata NOP
  3415   000CAC  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3416   000CAE  EF52  F006         	goto	u995
  3417   000CB2  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3418   000CB4  0AFF               	xorlw	255
  3419   000CB6  1692               	andwf	146,f,c	;volatile
  3420                           
  3421                           ;gpio.c: 20:             }
  3422   000CB8  EF58  F007         	goto	l170
  3423   000CBC                     l1811:
  3424   000CBC  FFFF               	dw	65535	; assembler added errata NOP
  3425                           
  3426                           ;gpio.c: 22:                 (TRISA)|= 1<<(pinNo);
  3427   000CBE  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3428   000CC2  0E01               	movlw	1
  3429   000CC4  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3430   000CC6  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3431   000CC8  EF69  F006         	goto	u1004
  3432   000CCC                     u1005:
  3433   000CCC  FFFF               	dw	65535	; assembler added errata NOP
  3434   000CCE  90D8               	bcf	status,0,c
  3435   000CD0  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3436   000CD2                     u1004:
  3437   000CD2  FFFF               	dw	65535	; assembler added errata NOP
  3438   000CD4  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3439   000CD6  EF66  F006         	goto	u1005
  3440   000CDA  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3441   000CDC  1292               	iorwf	146,f,c	;volatile
  3442   000CDE  EF58  F007         	goto	l170
  3443   000CE2                     l1813:
  3444   000CE2  FFFF               	dw	65535	; assembler added errata NOP
  3445                           
  3446                           ;gpio.c: 26:             if(direction == OUTPUT){
  3447   000CE4  0402               	decf	DIO_SetPinDirection@direction^0,w,c
  3448   000CE6  A4D8               	btfss	status,2,c
  3449   000CE8  EF78  F006         	goto	u1011
  3450   000CEC  EF7B  F006         	goto	u1010
  3451   000CF0                     u1011:
  3452   000CF0  FFFF               	dw	65535	; assembler added errata NOP
  3453   000CF2  EF8F  F006         	goto	l1817
  3454   000CF6                     u1010:
  3455   000CF6  FFFF               	dw	65535	; assembler added errata NOP
  3456   000CF8                     
  3457                           ;gpio.c: 27:                 (TRISB)&=~(1<<(pinNo));
  3458   000CF8  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3459   000CFC  0E01               	movlw	1
  3460   000CFE  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3461   000D00  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3462   000D02  EF86  F006         	goto	u1024
  3463   000D06                     u1025:
  3464   000D06  FFFF               	dw	65535	; assembler added errata NOP
  3465   000D08  90D8               	bcf	status,0,c
  3466   000D0A  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3467   000D0C                     u1024:
  3468   000D0C  FFFF               	dw	65535	; assembler added errata NOP
  3469   000D0E  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3470   000D10  EF83  F006         	goto	u1025
  3471   000D14  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3472   000D16  0AFF               	xorlw	255
  3473   000D18  1693               	andwf	147,f,c	;volatile
  3474                           
  3475                           ;gpio.c: 28:             }
  3476   000D1A  EF58  F007         	goto	l170
  3477   000D1E                     l1817:
  3478   000D1E  FFFF               	dw	65535	; assembler added errata NOP
  3479                           
  3480                           ;gpio.c: 30:                 (TRISB)|= 1<<(pinNo);
  3481   000D20  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3482   000D24  0E01               	movlw	1
  3483   000D26  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3484   000D28  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3485   000D2A  EF9A  F006         	goto	u1034
  3486   000D2E                     u1035:
  3487   000D2E  FFFF               	dw	65535	; assembler added errata NOP
  3488   000D30  90D8               	bcf	status,0,c
  3489   000D32  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3490   000D34                     u1034:
  3491   000D34  FFFF               	dw	65535	; assembler added errata NOP
  3492   000D36  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3493   000D38  EF97  F006         	goto	u1035
  3494   000D3C  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3495   000D3E  1293               	iorwf	147,f,c	;volatile
  3496   000D40  EF58  F007         	goto	l170
  3497   000D44                     l1819:
  3498   000D44  FFFF               	dw	65535	; assembler added errata NOP
  3499                           
  3500                           ;gpio.c: 34:             if(direction == OUTPUT){
  3501   000D46  0402               	decf	DIO_SetPinDirection@direction^0,w,c
  3502   000D48  A4D8               	btfss	status,2,c
  3503   000D4A  EFA9  F006         	goto	u1041
  3504   000D4E  EFAC  F006         	goto	u1040
  3505   000D52                     u1041:
  3506   000D52  FFFF               	dw	65535	; assembler added errata NOP
  3507   000D54  EFC0  F006         	goto	l1823
  3508   000D58                     u1040:
  3509   000D58  FFFF               	dw	65535	; assembler added errata NOP
  3510   000D5A                     
  3511                           ;gpio.c: 35:                 (TRISC)&=~(1<<(pinNo));
  3512   000D5A  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3513   000D5E  0E01               	movlw	1
  3514   000D60  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3515   000D62  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3516   000D64  EFB7  F006         	goto	u1054
  3517   000D68                     u1055:
  3518   000D68  FFFF               	dw	65535	; assembler added errata NOP
  3519   000D6A  90D8               	bcf	status,0,c
  3520   000D6C  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3521   000D6E                     u1054:
  3522   000D6E  FFFF               	dw	65535	; assembler added errata NOP
  3523   000D70  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3524   000D72  EFB4  F006         	goto	u1055
  3525   000D76  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3526   000D78  0AFF               	xorlw	255
  3527   000D7A  1694               	andwf	148,f,c	;volatile
  3528                           
  3529                           ;gpio.c: 36:             }
  3530   000D7C  EF58  F007         	goto	l170
  3531   000D80                     l1823:
  3532   000D80  FFFF               	dw	65535	; assembler added errata NOP
  3533                           
  3534                           ;gpio.c: 38:                 (TRISC)|= 1<<(pinNo);
  3535   000D82  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3536   000D86  0E01               	movlw	1
  3537   000D88  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3538   000D8A  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3539   000D8C  EFCB  F006         	goto	u1064
  3540   000D90                     u1065:
  3541   000D90  FFFF               	dw	65535	; assembler added errata NOP
  3542   000D92  90D8               	bcf	status,0,c
  3543   000D94  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3544   000D96                     u1064:
  3545   000D96  FFFF               	dw	65535	; assembler added errata NOP
  3546   000D98  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3547   000D9A  EFC8  F006         	goto	u1065
  3548   000D9E  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3549   000DA0  1294               	iorwf	148,f,c	;volatile
  3550   000DA2  EF58  F007         	goto	l170
  3551   000DA6                     l1825:
  3552   000DA6  FFFF               	dw	65535	; assembler added errata NOP
  3553                           
  3554                           ;gpio.c: 42:             if(direction == OUTPUT){
  3555   000DA8  0402               	decf	DIO_SetPinDirection@direction^0,w,c
  3556   000DAA  A4D8               	btfss	status,2,c
  3557   000DAC  EFDA  F006         	goto	u1071
  3558   000DB0  EFDD  F006         	goto	u1070
  3559   000DB4                     u1071:
  3560   000DB4  FFFF               	dw	65535	; assembler added errata NOP
  3561   000DB6  EFF1  F006         	goto	l1829
  3562   000DBA                     u1070:
  3563   000DBA  FFFF               	dw	65535	; assembler added errata NOP
  3564   000DBC                     
  3565                           ;gpio.c: 43:                 (TRISD)&=~(1<<(pinNo));
  3566   000DBC  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3567   000DC0  0E01               	movlw	1
  3568   000DC2  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3569   000DC4  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3570   000DC6  EFE8  F006         	goto	u1084
  3571   000DCA                     u1085:
  3572   000DCA  FFFF               	dw	65535	; assembler added errata NOP
  3573   000DCC  90D8               	bcf	status,0,c
  3574   000DCE  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3575   000DD0                     u1084:
  3576   000DD0  FFFF               	dw	65535	; assembler added errata NOP
  3577   000DD2  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3578   000DD4  EFE5  F006         	goto	u1085
  3579   000DD8  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3580   000DDA  0AFF               	xorlw	255
  3581   000DDC  1695               	andwf	149,f,c	;volatile
  3582                           
  3583                           ;gpio.c: 44:             }
  3584   000DDE  EF58  F007         	goto	l170
  3585   000DE2                     l1829:
  3586   000DE2  FFFF               	dw	65535	; assembler added errata NOP
  3587                           
  3588                           ;gpio.c: 46:                 (TRISD)|= 1<<(pinNo);
  3589   000DE4  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3590   000DE8  0E01               	movlw	1
  3591   000DEA  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3592   000DEC  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3593   000DEE  EFFC  F006         	goto	u1094
  3594   000DF2                     u1095:
  3595   000DF2  FFFF               	dw	65535	; assembler added errata NOP
  3596   000DF4  90D8               	bcf	status,0,c
  3597   000DF6  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3598   000DF8                     u1094:
  3599   000DF8  FFFF               	dw	65535	; assembler added errata NOP
  3600   000DFA  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3601   000DFC  EFF9  F006         	goto	u1095
  3602   000E00  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3603   000E02  1295               	iorwf	149,f,c	;volatile
  3604   000E04  EF58  F007         	goto	l170
  3605   000E08                     l1831:
  3606   000E08  FFFF               	dw	65535	; assembler added errata NOP
  3607                           
  3608                           ;gpio.c: 50:             if(direction == OUTPUT){
  3609   000E0A  0402               	decf	DIO_SetPinDirection@direction^0,w,c
  3610   000E0C  A4D8               	btfss	status,2,c
  3611   000E0E  EF0B  F007         	goto	u1101
  3612   000E12  EF0E  F007         	goto	u1100
  3613   000E16                     u1101:
  3614   000E16  FFFF               	dw	65535	; assembler added errata NOP
  3615   000E18  EF22  F007         	goto	l1835
  3616   000E1C                     u1100:
  3617   000E1C  FFFF               	dw	65535	; assembler added errata NOP
  3618   000E1E                     
  3619                           ;gpio.c: 51:                 (TRISE)&=~(1<<(pinNo));
  3620   000E1E  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3621   000E22  0E01               	movlw	1
  3622   000E24  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3623   000E26  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3624   000E28  EF19  F007         	goto	u1114
  3625   000E2C                     u1115:
  3626   000E2C  FFFF               	dw	65535	; assembler added errata NOP
  3627   000E2E  90D8               	bcf	status,0,c
  3628   000E30  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3629   000E32                     u1114:
  3630   000E32  FFFF               	dw	65535	; assembler added errata NOP
  3631   000E34  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3632   000E36  EF16  F007         	goto	u1115
  3633   000E3A  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3634   000E3C  0AFF               	xorlw	255
  3635   000E3E  1696               	andwf	150,f,c	;volatile
  3636                           
  3637                           ;gpio.c: 52:             }
  3638   000E40  EF58  F007         	goto	l170
  3639   000E44                     l1835:
  3640   000E44  FFFF               	dw	65535	; assembler added errata NOP
  3641                           
  3642                           ;gpio.c: 54:                 (TRISE)|= 1<<(pinNo);
  3643   000E46  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3644   000E4A  0E01               	movlw	1
  3645   000E4C  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3646   000E4E  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3647   000E50  EF2D  F007         	goto	u1124
  3648   000E54                     u1125:
  3649   000E54  FFFF               	dw	65535	; assembler added errata NOP
  3650   000E56  90D8               	bcf	status,0,c
  3651   000E58  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3652   000E5A                     u1124:
  3653   000E5A  FFFF               	dw	65535	; assembler added errata NOP
  3654   000E5C  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3655   000E5E  EF2A  F007         	goto	u1125
  3656   000E62  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3657   000E64  1296               	iorwf	150,f,c	;volatile
  3658   000E66  EF58  F007         	goto	l170
  3659   000E6A                     l1839:
  3660   000E6A  FFFF               	dw	65535	; assembler added errata NOP
  3661   000E6C  5005               	movf	DIO_SetPinDirection@portName^0,w,c
  3662   000E6E  6E03               	movwf	??_DIO_SetPinDirection^0,c
  3663   000E70  6A04               	clrf	(??_DIO_SetPinDirection+1)^0,c
  3664                           
  3665                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3666                           ; Switch size 1, requested type "simple"
  3667                           ; Number of cases is 1, Range of values is 0 to 0
  3668                           ; switch strategies available:
  3669                           ; Name         Instructions Cycles
  3670                           ; simple_byte            4     3 (average)
  3671                           ;	Chosen strategy is simple_byte
  3672   000E72  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3673   000E74  0A00               	xorlw	0	; case 0
  3674   000E76  B4D8               	btfsc	status,2,c
  3675   000E78  EF40  F007         	goto	l2213
  3676   000E7C  EF58  F007         	goto	l170
  3677   000E80                     l2213:
  3678   000E80  FFFF               	dw	65535	; assembler added errata NOP
  3679                           
  3680                           ; Switch size 1, requested type "simple"
  3681                           ; Number of cases is 5, Range of values is 0 to 4
  3682                           ; switch strategies available:
  3683                           ; Name         Instructions Cycles
  3684                           ; simple_byte           16     9 (average)
  3685                           ;	Chosen strategy is simple_byte
  3686   000E82  5003               	movf	??_DIO_SetPinDirection^0,w,c
  3687   000E84  0A00               	xorlw	0	; case 0
  3688   000E86  B4D8               	btfsc	status,2,c
  3689   000E88  EF40  F006         	goto	l1807
  3690   000E8C  0A01               	xorlw	1	; case 1
  3691   000E8E  B4D8               	btfsc	status,2,c
  3692   000E90  EF71  F006         	goto	l1813
  3693   000E94  0A03               	xorlw	3	; case 2
  3694   000E96  B4D8               	btfsc	status,2,c
  3695   000E98  EFA2  F006         	goto	l1819
  3696   000E9C  0A01               	xorlw	1	; case 3
  3697   000E9E  B4D8               	btfsc	status,2,c
  3698   000EA0  EFD3  F006         	goto	l1825
  3699   000EA4  0A07               	xorlw	7	; case 4
  3700   000EA6  B4D8               	btfsc	status,2,c
  3701   000EA8  EF04  F007         	goto	l1831
  3702   000EAC  EF58  F007         	goto	l170
  3703   000EB0                     l170:
  3704   000EB0  FFFF               	dw	65535	; assembler added errata NOP
  3705   000EB2  0012               	return		;funcret
  3706   000EB4  FFFF               	dw	65535	; errata NOP
  3707   000EB6                     __end_of_DIO_SetPinDirection:
  3708                           	callstack 0
  3709                           
  3710 ;; *************** function _LCD_displayStringRowColumn *****************
  3711 ;; Defined at:
  3712 ;;		line 157 in file "lcd.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  row             1    wreg     unsigned char 
  3715 ;;  col             1   10[COMRAM] unsigned char 
  3716 ;;  Str             1   11[COMRAM] PTR unsigned char 
  3717 ;;		 -> STR_9(12), STR_8(16), STR_7(12), STR_6(12), 
  3718 ;;		 -> STR_5(10), STR_4(13), STR_3(9), STR_1(12), 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  row             1   12[COMRAM] unsigned char 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3730 ;;      Params:         2       0       0       0       0       0       0
  3731 ;;      Locals:         1       0       0       0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0       0       0
  3733 ;;      Totals:         3       0       0       0       0       0       0
  3734 ;;Total ram usage:        3 bytes
  3735 ;; Hardware stack levels used: 1
  3736 ;; Hardware stack levels required when called: 4
  3737 ;; This function calls:
  3738 ;;		_LCD_displayString
  3739 ;;		_LCD_goToRowColumn
  3740 ;; This function is called by:
  3741 ;;		_main
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text24
  3746   001A74                     __ptext24:
  3747                           	callstack 0
  3748   001A74                     _LCD_displayStringRowColumn:
  3749                           	callstack 0
  3750   001A74  FFFF               	dw	65535	; assembler added errata NOP
  3751                           
  3752                           ;incstack = 0
  3753                           ;LCD_displayStringRowColumn@row stored from wreg
  3754   001A76  6E0D               	movwf	LCD_displayStringRowColumn@row^0,c
  3755   001A78                     
  3756                           ;lcd.c: 157: void LCD_displayStringRowColumn(uint8_t row,uint8_t col,char *Str);lcd.c: 1
      +                          58: {;lcd.c: 159:  LCD_goToRowColumn(row,col);
  3757   001A78  C00B  F008         	movff	LCD_displayStringRowColumn@col,LCD_goToRowColumn@col
  3758   001A7C  500D               	movf	LCD_displayStringRowColumn@row^0,w,c
  3759   001A7E  EC19  F00C         	call	_LCD_goToRowColumn
  3760   001A82                     
  3761                           ;lcd.c: 160:  LCD_displayString(Str);
  3762   001A82  C00C  F008         	movff	LCD_displayStringRowColumn@Str,LCD_displayString@Str
  3763   001A86  EC85  F00C         	call	_LCD_displayString	;wreg free
  3764   001A8A  0012               	return		;funcret
  3765   001A8C  FFFF               	dw	65535	; errata NOP
  3766   001A8E                     __end_of_LCD_displayStringRowColumn:
  3767                           	callstack 0
  3768                           
  3769 ;; *************** function _LCD_goToRowColumn *****************
  3770 ;; Defined at:
  3771 ;;		line 131 in file "lcd.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  row             1    wreg     unsigned char 
  3774 ;;  col             1    7[COMRAM] unsigned char 
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  row             1    8[COMRAM] unsigned char 
  3777 ;;  Address         1    9[COMRAM] unsigned char 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      void 
  3780 ;; Registers used:
  3781 ;;		wreg, status,2, status,0, cstack
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3787 ;;      Params:         1       0       0       0       0       0       0
  3788 ;;      Locals:         2       0       0       0       0       0       0
  3789 ;;      Temps:          0       0       0       0       0       0       0
  3790 ;;      Totals:         3       0       0       0       0       0       0
  3791 ;;Total ram usage:        3 bytes
  3792 ;; Hardware stack levels used: 1
  3793 ;; Hardware stack levels required when called: 3
  3794 ;; This function calls:
  3795 ;;		_LCD_sendCommand
  3796 ;; This function is called by:
  3797 ;;		_main
  3798 ;;		_LCD_displayStringRowColumn
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text25
  3803   001832                     __ptext25:
  3804                           	callstack 0
  3805   001832                     _LCD_goToRowColumn:
  3806                           	callstack 0
  3807   001832  FFFF               	dw	65535	; assembler added errata NOP
  3808                           
  3809                           ;incstack = 0
  3810                           ;LCD_goToRowColumn@row stored from wreg
  3811   001834  6E09               	movwf	LCD_goToRowColumn@row^0,c
  3812   001836                     
  3813                           ;lcd.c: 131: void LCD_goToRowColumn(uint8_t row,uint8_t col);lcd.c: 132:  {;lcd.c: 133: 
      +                           uint8_t Address = 0;
  3814   001836  0E00               	movlw	0
  3815   001838  6E0A               	movwf	LCD_goToRowColumn@Address^0,c
  3816                           
  3817                           ;lcd.c: 136:  switch(row)
  3818   00183A  EF36  F00C         	goto	l1801
  3819   00183E                     l295:
  3820   00183E  FFFF               	dw	65535	; assembler added errata NOP
  3821                           
  3822                           ;lcd.c: 139:     Address=col;
  3823   001840  C008  F00A         	movff	LCD_goToRowColumn@col,LCD_goToRowColumn@Address
  3824                           
  3825                           ;lcd.c: 140:     break;
  3826   001844  EF4A  F00C         	goto	l1803
  3827   001848                     l1793:
  3828   001848  FFFF               	dw	65535	; assembler added errata NOP
  3829                           
  3830                           ;lcd.c: 142:     Address=col+0x40;
  3831   00184A  5008               	movf	LCD_goToRowColumn@col^0,w,c
  3832   00184C  0F40               	addlw	64
  3833   00184E  6E0A               	movwf	LCD_goToRowColumn@Address^0,c
  3834                           
  3835                           ;lcd.c: 143:     break;
  3836   001850  EF4A  F00C         	goto	l1803
  3837   001854                     l1795:
  3838   001854  FFFF               	dw	65535	; assembler added errata NOP
  3839                           
  3840                           ;lcd.c: 145:     Address=col+0x10;
  3841   001856  5008               	movf	LCD_goToRowColumn@col^0,w,c
  3842   001858  0F10               	addlw	16
  3843   00185A  6E0A               	movwf	LCD_goToRowColumn@Address^0,c
  3844                           
  3845                           ;lcd.c: 146:     break;
  3846   00185C  EF4A  F00C         	goto	l1803
  3847   001860                     l1797:
  3848   001860  FFFF               	dw	65535	; assembler added errata NOP
  3849                           
  3850                           ;lcd.c: 148:     Address=col+0x50;
  3851   001862  5008               	movf	LCD_goToRowColumn@col^0,w,c
  3852   001864  0F50               	addlw	80
  3853   001866  6E0A               	movwf	LCD_goToRowColumn@Address^0,c
  3854                           
  3855                           ;lcd.c: 149:     break;
  3856   001868  EF4A  F00C         	goto	l1803
  3857   00186C                     l1801:
  3858   00186C  FFFF               	dw	65535	; assembler added errata NOP
  3859   00186E  5009               	movf	LCD_goToRowColumn@row^0,w,c
  3860                           
  3861                           ; Switch size 1, requested type "simple"
  3862                           ; Number of cases is 4, Range of values is 0 to 3
  3863                           ; switch strategies available:
  3864                           ; Name         Instructions Cycles
  3865                           ; simple_byte           13     7 (average)
  3866                           ;	Chosen strategy is simple_byte
  3867   001870  0A00               	xorlw	0	; case 0
  3868   001872  B4D8               	btfsc	status,2,c
  3869   001874  EF1F  F00C         	goto	l295
  3870   001878  0A01               	xorlw	1	; case 1
  3871   00187A  B4D8               	btfsc	status,2,c
  3872   00187C  EF24  F00C         	goto	l1793
  3873   001880  0A03               	xorlw	3	; case 2
  3874   001882  B4D8               	btfsc	status,2,c
  3875   001884  EF2A  F00C         	goto	l1795
  3876   001888  0A01               	xorlw	1	; case 3
  3877   00188A  B4D8               	btfsc	status,2,c
  3878   00188C  EF30  F00C         	goto	l1797
  3879   001890  EF4A  F00C         	goto	l1803
  3880   001894                     l1803:
  3881   001894  FFFF               	dw	65535	; assembler added errata NOP
  3882                           
  3883                           ;lcd.c: 154:  LCD_sendCommand(Address | 0x80);
  3884   001896  500A               	movf	LCD_goToRowColumn@Address^0,w,c
  3885   001898  0980               	iorlw	128
  3886   00189A  EC66  F00A         	call	_LCD_sendCommand
  3887   00189E  0012               	return		;funcret
  3888   0018A0  FFFF               	dw	65535	; errata NOP
  3889   0018A2                     __end_of_LCD_goToRowColumn:
  3890                           	callstack 0
  3891                           
  3892 ;; *************** function _LCD_displayString *****************
  3893 ;; Defined at:
  3894 ;;		line 121 in file "lcd.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;  Str             1    7[COMRAM] PTR unsigned char 
  3897 ;;		 -> STR_9(12), STR_8(16), STR_7(12), STR_6(12), 
  3898 ;;		 -> STR_5(10), STR_4(13), STR_3(9), STR_1(12), 
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;  i               1    9[COMRAM] unsigned char 
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      void 
  3903 ;; Registers used:
  3904 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3910 ;;      Params:         1       0       0       0       0       0       0
  3911 ;;      Locals:         1       0       0       0       0       0       0
  3912 ;;      Temps:          1       0       0       0       0       0       0
  3913 ;;      Totals:         3       0       0       0       0       0       0
  3914 ;;Total ram usage:        3 bytes
  3915 ;; Hardware stack levels used: 1
  3916 ;; Hardware stack levels required when called: 3
  3917 ;; This function calls:
  3918 ;;		_LCD_displayCharacter
  3919 ;; This function is called by:
  3920 ;;		_LCD_displayStringRowColumn
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text26
  3925   00190A                     __ptext26:
  3926                           	callstack 0
  3927   00190A                     _LCD_displayString:
  3928                           	callstack 0
  3929   00190A  FFFF               	dw	65535	; assembler added errata NOP
  3930   00190C                     
  3931                           ;lcd.c: 121: void LCD_displayString(char *Str);lcd.c: 122: {;lcd.c: 123:  uint8_t i = 0;
  3932   00190C  0E00               	movlw	0
  3933   00190E  6E0A               	movwf	LCD_displayString@i^0,c
  3934                           
  3935                           ;lcd.c: 124:  while(Str[i] != '\0')
  3936   001910  EF98  F00C         	goto	l1905
  3937   001914                     l1901:
  3938   001914  FFFF               	dw	65535	; assembler added errata NOP
  3939                           
  3940                           ;lcd.c: 125:  {;lcd.c: 126:   LCD_displayCharacter(Str[i]);
  3941   001916  5008               	movf	LCD_displayString@Str^0,w,c
  3942   001918  240A               	addwf	LCD_displayString@i^0,w,c
  3943   00191A  6E09               	movwf	??_LCD_displayString^0,c
  3944   00191C  C009  FFF6         	movff	??_LCD_displayString,tblptrl
  3945   001920                     	if	1	;There is more than 1 active tblptr byte
  3946   001920  0E06               	movlw	high __smallconst
  3947   001922  6EF7               	movwf	tblptrh,c
  3948   001924                     	endif
  3949   001924                     	if	0	;tblptru may be non-zero
  3950   001924                     	endif
  3951   001924                     	if	0	;tblptru may be non-zero
  3952   001924                     	endif
  3953   001924  0008               	tblrd		*
  3954   001926  FFFF               	dw	65535	; errata NOP
  3955   001928  50F5               	movf	tablat,w,c
  3956   00192A  EC05  F00A         	call	_LCD_displayCharacter
  3957   00192E                     
  3958                           ;lcd.c: 127:   i++;
  3959   00192E  2A0A               	incf	LCD_displayString@i^0,f,c
  3960   001930                     l1905:
  3961   001930  FFFF               	dw	65535	; assembler added errata NOP
  3962                           
  3963                           ;lcd.c: 124:  while(Str[i] != '\0')
  3964   001932  5008               	movf	LCD_displayString@Str^0,w,c
  3965   001934  240A               	addwf	LCD_displayString@i^0,w,c
  3966   001936  6E09               	movwf	??_LCD_displayString^0,c
  3967   001938  C009  FFF6         	movff	??_LCD_displayString,tblptrl
  3968   00193C                     	if	1	;There is more than 1 active tblptr byte
  3969   00193C  0E06               	movlw	high __smallconst
  3970   00193E  6EF7               	movwf	tblptrh,c
  3971   001940                     	endif
  3972   001940                     	if	0	;tblptru may be non-zero
  3973   001940                     	endif
  3974   001940                     	if	0	;tblptru may be non-zero
  3975   001940                     	endif
  3976   001940  0008               	tblrd		*
  3977   001942  FFFF               	dw	65535	; errata NOP
  3978   001944  50F5               	movf	tablat,w,c
  3979   001946  0900               	iorlw	0
  3980   001948  A4D8               	btfss	status,2,c
  3981   00194A  EFA9  F00C         	goto	u1181
  3982   00194E  EFAC  F00C         	goto	u1180
  3983   001952                     u1181:
  3984   001952  FFFF               	dw	65535	; assembler added errata NOP
  3985   001954  EF8A  F00C         	goto	l1901
  3986   001958                     u1180:
  3987   001958  FFFF               	dw	65535	; assembler added errata NOP
  3988   00195A  0012               	return		;funcret
  3989   00195C  FFFF               	dw	65535	; errata NOP
  3990   00195E                     __end_of_LCD_displayString:
  3991                           	callstack 0
  3992                           
  3993 ;; *************** function _LCD_displayCharacter *****************
  3994 ;; Defined at:
  3995 ;;		line 89 in file "lcd.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  data            1    wreg     unsigned char 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  data            1    6[COMRAM] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg, status,2, status,0, cstack
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4009 ;;      Params:         0       0       0       0       0       0       0
  4010 ;;      Locals:         1       0       0       0       0       0       0
  4011 ;;      Temps:          1       0       0       0       0       0       0
  4012 ;;      Totals:         2       0       0       0       0       0       0
  4013 ;;Total ram usage:        2 bytes
  4014 ;; Hardware stack levels used: 1
  4015 ;; Hardware stack levels required when called: 2
  4016 ;; This function calls:
  4017 ;;		_DIO_SetPinValue
  4018 ;;		_DIO_SetUpperHalfPortValue
  4019 ;; This function is called by:
  4020 ;;		_main
  4021 ;;		_LCD_displayString
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text27
  4026   00140A                     __ptext27:
  4027                           	callstack 0
  4028   00140A                     _LCD_displayCharacter:
  4029                           	callstack 0
  4030   00140A  FFFF               	dw	65535	; assembler added errata NOP
  4031                           
  4032                           ;incstack = 0
  4033                           ;LCD_displayCharacter@data stored from wreg
  4034   00140C  6E07               	movwf	LCD_displayCharacter@data^0,c
  4035   00140E                     
  4036                           ;lcd.c: 89: void LCD_displayCharacter(uint8_t data);lcd.c: 90: {;lcd.c: 91:  DIO_SetPinV
      +                          alue(PORT_D,1, HIGH);
  4037   00140E  0E01               	movlw	1
  4038   001410  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4039   001412  0E01               	movlw	1
  4040   001414  6E02               	movwf	DIO_SetPinValue@value^0,c
  4041   001416  0E03               	movlw	3
  4042   001418  EC5B  F007         	call	_DIO_SetPinValue
  4043                           
  4044                           ;lcd.c: 93:  DIO_SetPinValue(PORT_D,2, LOW);
  4045   00141C  0E02               	movlw	2
  4046   00141E  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4047   001420  0E00               	movlw	0
  4048   001422  6E02               	movwf	DIO_SetPinValue@value^0,c
  4049   001424  0E03               	movlw	3
  4050   001426  EC5B  F007         	call	_DIO_SetPinValue
  4051   00142A                     
  4052                           ;lcd.c: 95:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4053   00142A  0EC8               	movlw	200
  4054   00142C                     u1637:
  4055   00142C  FFFF               	dw	65535	; errata NOP
  4056   00142E  0000               	nop	
  4057   001430  2EE8               	decfsz	wreg,f,c
  4058   001432  D7FC               	bra	u1637
  4059   001434                     
  4060                           ;lcd.c: 97:     DIO_SetPinValue(PORT_D,3, HIGH);
  4061   001434  0E03               	movlw	3
  4062   001436  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4063   001438  0E01               	movlw	1
  4064   00143A  6E02               	movwf	DIO_SetPinValue@value^0,c
  4065   00143C  0E03               	movlw	3
  4066   00143E  EC5B  F007         	call	_DIO_SetPinValue
  4067                           
  4068                           ;lcd.c: 98:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4069   001442  0EC8               	movlw	200
  4070   001444                     u1647:
  4071   001444  FFFF               	dw	65535	; errata NOP
  4072   001446  0000               	nop	
  4073   001448  2EE8               	decfsz	wreg,f,c
  4074   00144A  D7FC               	bra	u1647
  4075   00144C                     
  4076                           ;lcd.c: 101:  DIO_SetUpperHalfPortValue(PORT_D, (data & 0xF0));
  4077   00144C  5007               	movf	LCD_displayCharacter@data^0,w,c
  4078   00144E  0BF0               	andlw	240
  4079   001450  6E01               	movwf	DIO_SetUpperHalfPortValue@value^0,c
  4080   001452  0E03               	movlw	3
  4081   001454  ECC7  F00A         	call	_DIO_SetUpperHalfPortValue
  4082   001458                     
  4083                           ;lcd.c: 103:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4084   001458  0EC8               	movlw	200
  4085   00145A                     u1657:
  4086   00145A  FFFF               	dw	65535	; errata NOP
  4087   00145C  0000               	nop	
  4088   00145E  2EE8               	decfsz	wreg,f,c
  4089   001460  D7FC               	bra	u1657
  4090                           
  4091                           ;lcd.c: 105:  DIO_SetPinValue( PORT_D,3, LOW);
  4092   001462  0E03               	movlw	3
  4093   001464  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4094   001466  0E00               	movlw	0
  4095   001468  6E02               	movwf	DIO_SetPinValue@value^0,c
  4096   00146A  0E03               	movlw	3
  4097   00146C  EC5B  F007         	call	_DIO_SetPinValue
  4098   001470                     
  4099                           ;lcd.c: 107:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4100   001470  0EC8               	movlw	200
  4101   001472                     u1667:
  4102   001472  FFFF               	dw	65535	; errata NOP
  4103   001474  0000               	nop	
  4104   001476  2EE8               	decfsz	wreg,f,c
  4105   001478  D7FC               	bra	u1667
  4106   00147A                     
  4107                           ;lcd.c: 108:  DIO_SetPinValue( PORT_D,3, HIGH);
  4108   00147A  0E03               	movlw	3
  4109   00147C  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4110   00147E  0E01               	movlw	1
  4111   001480  6E02               	movwf	DIO_SetPinValue@value^0,c
  4112   001482  0E03               	movlw	3
  4113   001484  EC5B  F007         	call	_DIO_SetPinValue
  4114                           
  4115                           ;lcd.c: 110:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4116   001488  0EC8               	movlw	200
  4117   00148A                     u1677:
  4118   00148A  FFFF               	dw	65535	; errata NOP
  4119   00148C  0000               	nop	
  4120   00148E  2EE8               	decfsz	wreg,f,c
  4121   001490  D7FC               	bra	u1677
  4122   001492                     
  4123                           ;lcd.c: 113:  DIO_SetUpperHalfPortValue(PORT_D, ((data & 0x0F) << 4));
  4124   001492  C007  F006         	movff	LCD_displayCharacter@data,??_LCD_displayCharacter
  4125   001496  0E0F               	movlw	15
  4126   001498  1606               	andwf	??_LCD_displayCharacter^0,f,c
  4127   00149A  3806               	swapf	??_LCD_displayCharacter^0,w,c
  4128   00149C  0BF0               	andlw	240
  4129   00149E  6E01               	movwf	DIO_SetUpperHalfPortValue@value^0,c
  4130   0014A0  0E03               	movlw	3
  4131   0014A2  ECC7  F00A         	call	_DIO_SetUpperHalfPortValue
  4132   0014A6                     
  4133                           ;lcd.c: 114:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4134   0014A6  0EC8               	movlw	200
  4135   0014A8                     u1687:
  4136   0014A8  FFFF               	dw	65535	; errata NOP
  4137   0014AA  0000               	nop	
  4138   0014AC  2EE8               	decfsz	wreg,f,c
  4139   0014AE  D7FC               	bra	u1687
  4140                           
  4141                           ;lcd.c: 115:  DIO_SetPinValue( PORT_D,3, LOW);
  4142   0014B0  0E03               	movlw	3
  4143   0014B2  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4144   0014B4  0E00               	movlw	0
  4145   0014B6  6E02               	movwf	DIO_SetPinValue@value^0,c
  4146   0014B8  0E03               	movlw	3
  4147   0014BA  EC5B  F007         	call	_DIO_SetPinValue
  4148   0014BE                     
  4149                           ;lcd.c: 116:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4150   0014BE  0EC8               	movlw	200
  4151   0014C0                     u1697:
  4152   0014C0  FFFF               	dw	65535	; errata NOP
  4153   0014C2  0000               	nop	
  4154   0014C4  2EE8               	decfsz	wreg,f,c
  4155   0014C6  D7FC               	bra	u1697
  4156   0014C8  0012               	return		;funcret
  4157   0014CA  FFFF               	dw	65535	; errata NOP
  4158   0014CC                     __end_of_LCD_displayCharacter:
  4159                           	callstack 0
  4160                           
  4161 ;; *************** function _LCD_clearScreen *****************
  4162 ;; Defined at:
  4163 ;;		line 163 in file "lcd.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;		None
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, status,2, status,0, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4177 ;;      Params:         0       0       0       0       0       0       0
  4178 ;;      Locals:         0       0       0       0       0       0       0
  4179 ;;      Temps:          0       0       0       0       0       0       0
  4180 ;;      Totals:         0       0       0       0       0       0       0
  4181 ;;Total ram usage:        0 bytes
  4182 ;; Hardware stack levels used: 1
  4183 ;; Hardware stack levels required when called: 3
  4184 ;; This function calls:
  4185 ;;		_LCD_sendCommand
  4186 ;; This function is called by:
  4187 ;;		_main
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text28
  4192   001B78                     __ptext28:
  4193                           	callstack 0
  4194   001B78                     _LCD_clearScreen:
  4195                           	callstack 0
  4196   001B78  FFFF               	dw	65535	; assembler added errata NOP
  4197   001B7A                     
  4198                           ;lcd.c: 165:  LCD_sendCommand(0x01);
  4199   001B7A  0E01               	movlw	1
  4200   001B7C  EC66  F00A         	call	_LCD_sendCommand
  4201   001B80  0012               	return		;funcret
  4202   001B82  FFFF               	dw	65535	; errata NOP
  4203   001B84                     __end_of_LCD_clearScreen:
  4204                           	callstack 0
  4205                           
  4206 ;; *************** function _LCD_sendCommand *****************
  4207 ;; Defined at:
  4208 ;;		line 38 in file "lcd.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  command         1    wreg     unsigned char 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  command         1    6[COMRAM] unsigned char 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		wreg, status,2, status,0, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4222 ;;      Params:         0       0       0       0       0       0       0
  4223 ;;      Locals:         1       0       0       0       0       0       0
  4224 ;;      Temps:          1       0       0       0       0       0       0
  4225 ;;      Totals:         2       0       0       0       0       0       0
  4226 ;;Total ram usage:        2 bytes
  4227 ;; Hardware stack levels used: 1
  4228 ;; Hardware stack levels required when called: 2
  4229 ;; This function calls:
  4230 ;;		_DIO_SetPinValue
  4231 ;;		_DIO_SetUpperHalfPortValue
  4232 ;; This function is called by:
  4233 ;;		_LCD_init
  4234 ;;		_LCD_goToRowColumn
  4235 ;;		_LCD_clearScreen
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text29
  4240   0014CC                     __ptext29:
  4241                           	callstack 0
  4242   0014CC                     _LCD_sendCommand:
  4243                           	callstack 0
  4244   0014CC  FFFF               	dw	65535	; assembler added errata NOP
  4245                           
  4246                           ;incstack = 0
  4247                           ;LCD_sendCommand@command stored from wreg
  4248   0014CE  6E07               	movwf	LCD_sendCommand@command^0,c
  4249   0014D0                     
  4250                           ;lcd.c: 38: void LCD_sendCommand(uint8_t command);lcd.c: 39: {;lcd.c: 41:  DIO_SetPinVal
      +                          ue(PORT_D,1, LOW);
  4251   0014D0  0E01               	movlw	1
  4252   0014D2  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4253   0014D4  0E00               	movlw	0
  4254   0014D6  6E02               	movwf	DIO_SetPinValue@value^0,c
  4255   0014D8  0E03               	movlw	3
  4256   0014DA  EC5B  F007         	call	_DIO_SetPinValue
  4257                           
  4258                           ;lcd.c: 44:  DIO_SetPinValue(PORT_D,2, LOW);
  4259   0014DE  0E02               	movlw	2
  4260   0014E0  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4261   0014E2  0E00               	movlw	0
  4262   0014E4  6E02               	movwf	DIO_SetPinValue@value^0,c
  4263   0014E6  0E03               	movlw	3
  4264   0014E8  EC5B  F007         	call	_DIO_SetPinValue
  4265   0014EC                     
  4266                           ;lcd.c: 45:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4267   0014EC  0EC8               	movlw	200
  4268   0014EE                     u1707:
  4269   0014EE  FFFF               	dw	65535	; errata NOP
  4270   0014F0  0000               	nop	
  4271   0014F2  2EE8               	decfsz	wreg,f,c
  4272   0014F4  D7FC               	bra	u1707
  4273   0014F6                     
  4274                           ;lcd.c: 49:  DIO_SetPinValue(PORT_D,3, HIGH);
  4275   0014F6  0E03               	movlw	3
  4276   0014F8  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4277   0014FA  0E01               	movlw	1
  4278   0014FC  6E02               	movwf	DIO_SetPinValue@value^0,c
  4279   0014FE  0E03               	movlw	3
  4280   001500  EC5B  F007         	call	_DIO_SetPinValue
  4281                           
  4282                           ;lcd.c: 52:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4283   001504  0EC8               	movlw	200
  4284   001506                     u1717:
  4285   001506  FFFF               	dw	65535	; errata NOP
  4286   001508  0000               	nop	
  4287   00150A  2EE8               	decfsz	wreg,f,c
  4288   00150C  D7FC               	bra	u1717
  4289   00150E                     
  4290                           ;lcd.c: 57:     DIO_SetUpperHalfPortValue(PORT_D, (command & 0xF0));
  4291   00150E  5007               	movf	LCD_sendCommand@command^0,w,c
  4292   001510  0BF0               	andlw	240
  4293   001512  6E01               	movwf	DIO_SetUpperHalfPortValue@value^0,c
  4294   001514  0E03               	movlw	3
  4295   001516  ECC7  F00A         	call	_DIO_SetUpperHalfPortValue
  4296   00151A                     
  4297                           ;lcd.c: 60:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4298   00151A  0EC8               	movlw	200
  4299   00151C                     u1727:
  4300   00151C  FFFF               	dw	65535	; errata NOP
  4301   00151E  0000               	nop	
  4302   001520  2EE8               	decfsz	wreg,f,c
  4303   001522  D7FC               	bra	u1727
  4304                           
  4305                           ;lcd.c: 63:  DIO_SetPinValue( PORT_D,3, LOW);
  4306   001524  0E03               	movlw	3
  4307   001526  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4308   001528  0E00               	movlw	0
  4309   00152A  6E02               	movwf	DIO_SetPinValue@value^0,c
  4310   00152C  0E03               	movlw	3
  4311   00152E  EC5B  F007         	call	_DIO_SetPinValue
  4312   001532                     
  4313                           ;lcd.c: 66:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4314   001532  0EC8               	movlw	200
  4315   001534                     u1737:
  4316   001534  FFFF               	dw	65535	; errata NOP
  4317   001536  0000               	nop	
  4318   001538  2EE8               	decfsz	wreg,f,c
  4319   00153A  D7FC               	bra	u1737
  4320   00153C                     
  4321                           ;lcd.c: 69:  DIO_SetPinValue( PORT_D,3, HIGH);
  4322   00153C  0E03               	movlw	3
  4323   00153E  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4324   001540  0E01               	movlw	1
  4325   001542  6E02               	movwf	DIO_SetPinValue@value^0,c
  4326   001544  0E03               	movlw	3
  4327   001546  EC5B  F007         	call	_DIO_SetPinValue
  4328                           
  4329                           ;lcd.c: 71:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4330   00154A  0EC8               	movlw	200
  4331   00154C                     u1747:
  4332   00154C  FFFF               	dw	65535	; errata NOP
  4333   00154E  0000               	nop	
  4334   001550  2EE8               	decfsz	wreg,f,c
  4335   001552  D7FC               	bra	u1747
  4336   001554                     
  4337                           ;lcd.c: 75:  DIO_SetUpperHalfPortValue(PORT_D, ((command & 0x0F) << 4));
  4338   001554  C007  F006         	movff	LCD_sendCommand@command,??_LCD_sendCommand
  4339   001558  0E0F               	movlw	15
  4340   00155A  1606               	andwf	??_LCD_sendCommand^0,f,c
  4341   00155C  3806               	swapf	??_LCD_sendCommand^0,w,c
  4342   00155E  0BF0               	andlw	240
  4343   001560  6E01               	movwf	DIO_SetUpperHalfPortValue@value^0,c
  4344   001562  0E03               	movlw	3
  4345   001564  ECC7  F00A         	call	_DIO_SetUpperHalfPortValue
  4346   001568                     
  4347                           ;lcd.c: 78:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4348   001568  0EC8               	movlw	200
  4349   00156A                     u1757:
  4350   00156A  FFFF               	dw	65535	; errata NOP
  4351   00156C  0000               	nop	
  4352   00156E  2EE8               	decfsz	wreg,f,c
  4353   001570  D7FC               	bra	u1757
  4354                           
  4355                           ;lcd.c: 81:  DIO_SetPinValue(PORT_D,3, LOW);
  4356   001572  0E03               	movlw	3
  4357   001574  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4358   001576  0E00               	movlw	0
  4359   001578  6E02               	movwf	DIO_SetPinValue@value^0,c
  4360   00157A  0E03               	movlw	3
  4361   00157C  EC5B  F007         	call	_DIO_SetPinValue
  4362   001580                     
  4363                           ;lcd.c: 84:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4364   001580  0EC8               	movlw	200
  4365   001582                     u1767:
  4366   001582  FFFF               	dw	65535	; errata NOP
  4367   001584  0000               	nop	
  4368   001586  2EE8               	decfsz	wreg,f,c
  4369   001588  D7FC               	bra	u1767
  4370   00158A  0012               	return		;funcret
  4371   00158C  FFFF               	dw	65535	; errata NOP
  4372   00158E                     __end_of_LCD_sendCommand:
  4373                           	callstack 0
  4374                           
  4375 ;; *************** function _DIO_SetUpperHalfPortValue *****************
  4376 ;; Defined at:
  4377 ;;		line 152 in file "gpio.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;  portName        1    wreg     enum E2181
  4380 ;;  value           1    0[COMRAM] unsigned char 
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;  portName        1    3[COMRAM] enum E2181
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  1    wreg      void 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2, status,0
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4392 ;;      Params:         1       0       0       0       0       0       0
  4393 ;;      Locals:         1       0       0       0       0       0       0
  4394 ;;      Temps:          2       0       0       0       0       0       0
  4395 ;;      Totals:         4       0       0       0       0       0       0
  4396 ;;Total ram usage:        4 bytes
  4397 ;; Hardware stack levels used: 1
  4398 ;; Hardware stack levels required when called: 1
  4399 ;; This function calls:
  4400 ;;		Nothing
  4401 ;; This function is called by:
  4402 ;;		_LCD_sendCommand
  4403 ;;		_LCD_displayCharacter
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text30
  4408   00158E                     __ptext30:
  4409                           	callstack 0
  4410   00158E                     _DIO_SetUpperHalfPortValue:
  4411                           	callstack 0
  4412   00158E  FFFF               	dw	65535	; assembler added errata NOP
  4413                           
  4414                           ;incstack = 0
  4415                           ;DIO_SetUpperHalfPortValue@portName stored from wreg
  4416   001590  6E04               	movwf	DIO_SetUpperHalfPortValue@portName^0,c
  4417   001592                     
  4418                           ;gpio.c: 153:  switch(portName) {
  4419   001592  EFEE  F00A         	goto	l1745
  4420   001596                     l1733:
  4421   001596  FFFF               	dw	65535	; assembler added errata NOP
  4422                           
  4423                           ;gpio.c: 155:   PORTA = (PORTA & 0x0F) | value ;
  4424   001598  5080               	movf	128,w,c	;volatile
  4425   00159A  0B0F               	andlw	15
  4426   00159C  1001               	iorwf	DIO_SetUpperHalfPortValue@value^0,w,c
  4427   00159E  6E80               	movwf	128,c	;volatile
  4428                           
  4429                           ;gpio.c: 156:   break;
  4430   0015A0  EF11  F00B         	goto	l220
  4431   0015A4                     l1735:
  4432   0015A4  FFFF               	dw	65535	; assembler added errata NOP
  4433                           
  4434                           ;gpio.c: 159:   PORTB = (PORTB & 0x0F) | value ;
  4435   0015A6  5081               	movf	129,w,c	;volatile
  4436   0015A8  0B0F               	andlw	15
  4437   0015AA  1001               	iorwf	DIO_SetUpperHalfPortValue@value^0,w,c
  4438   0015AC  6E81               	movwf	129,c	;volatile
  4439                           
  4440                           ;gpio.c: 160:   break;
  4441   0015AE  EF11  F00B         	goto	l220
  4442   0015B2                     l1737:
  4443   0015B2  FFFF               	dw	65535	; assembler added errata NOP
  4444                           
  4445                           ;gpio.c: 163:   PORTC = (PORTC & 0x0F) | value ;
  4446   0015B4  5082               	movf	130,w,c	;volatile
  4447   0015B6  0B0F               	andlw	15
  4448   0015B8  1001               	iorwf	DIO_SetUpperHalfPortValue@value^0,w,c
  4449   0015BA  6E82               	movwf	130,c	;volatile
  4450                           
  4451                           ;gpio.c: 164:   break;
  4452   0015BC  EF11  F00B         	goto	l220
  4453   0015C0                     l1739:
  4454   0015C0  FFFF               	dw	65535	; assembler added errata NOP
  4455                           
  4456                           ;gpio.c: 167:   PORTD = (PORTD & 0x0F) | value ;
  4457   0015C2  5083               	movf	131,w,c	;volatile
  4458   0015C4  0B0F               	andlw	15
  4459   0015C6  1001               	iorwf	DIO_SetUpperHalfPortValue@value^0,w,c
  4460   0015C8  6E83               	movwf	131,c	;volatile
  4461                           
  4462                           ;gpio.c: 168:   break;
  4463   0015CA  EF11  F00B         	goto	l220
  4464   0015CE                     l1741:
  4465   0015CE  FFFF               	dw	65535	; assembler added errata NOP
  4466                           
  4467                           ;gpio.c: 171:   PORTE = (PORTE & 0x0F) | value ;
  4468   0015D0  5084               	movf	132,w,c	;volatile
  4469   0015D2  0B0F               	andlw	15
  4470   0015D4  1001               	iorwf	DIO_SetUpperHalfPortValue@value^0,w,c
  4471   0015D6  6E84               	movwf	132,c	;volatile
  4472                           
  4473                           ;gpio.c: 172:   break;
  4474   0015D8  EF11  F00B         	goto	l220
  4475   0015DC                     l1745:
  4476   0015DC  FFFF               	dw	65535	; assembler added errata NOP
  4477   0015DE  5004               	movf	DIO_SetUpperHalfPortValue@portName^0,w,c
  4478   0015E0  6E02               	movwf	??_DIO_SetUpperHalfPortValue^0,c
  4479   0015E2  6A03               	clrf	(??_DIO_SetUpperHalfPortValue+1)^0,c
  4480                           
  4481                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4482                           ; Switch size 1, requested type "simple"
  4483                           ; Number of cases is 1, Range of values is 0 to 0
  4484                           ; switch strategies available:
  4485                           ; Name         Instructions Cycles
  4486                           ; simple_byte            4     3 (average)
  4487                           ;	Chosen strategy is simple_byte
  4488   0015E4  5003               	movf	(??_DIO_SetUpperHalfPortValue+1)^0,w,c
  4489   0015E6  0A00               	xorlw	0	; case 0
  4490   0015E8  B4D8               	btfsc	status,2,c
  4491   0015EA  EFF9  F00A         	goto	l2215
  4492   0015EE  EF11  F00B         	goto	l220
  4493   0015F2                     l2215:
  4494   0015F2  FFFF               	dw	65535	; assembler added errata NOP
  4495                           
  4496                           ; Switch size 1, requested type "simple"
  4497                           ; Number of cases is 5, Range of values is 0 to 4
  4498                           ; switch strategies available:
  4499                           ; Name         Instructions Cycles
  4500                           ; simple_byte           16     9 (average)
  4501                           ;	Chosen strategy is simple_byte
  4502   0015F4  5002               	movf	??_DIO_SetUpperHalfPortValue^0,w,c
  4503   0015F6  0A00               	xorlw	0	; case 0
  4504   0015F8  B4D8               	btfsc	status,2,c
  4505   0015FA  EFCB  F00A         	goto	l1733
  4506   0015FE  0A01               	xorlw	1	; case 1
  4507   001600  B4D8               	btfsc	status,2,c
  4508   001602  EFD2  F00A         	goto	l1735
  4509   001606  0A03               	xorlw	3	; case 2
  4510   001608  B4D8               	btfsc	status,2,c
  4511   00160A  EFD9  F00A         	goto	l1737
  4512   00160E  0A01               	xorlw	1	; case 3
  4513   001610  B4D8               	btfsc	status,2,c
  4514   001612  EFE0  F00A         	goto	l1739
  4515   001616  0A07               	xorlw	7	; case 4
  4516   001618  B4D8               	btfsc	status,2,c
  4517   00161A  EFE7  F00A         	goto	l1741
  4518   00161E  EF11  F00B         	goto	l220
  4519   001622                     l220:
  4520   001622  FFFF               	dw	65535	; assembler added errata NOP
  4521   001624  0012               	return		;funcret
  4522   001626  FFFF               	dw	65535	; errata NOP
  4523   001628                     __end_of_DIO_SetUpperHalfPortValue:
  4524                           	callstack 0
  4525                           
  4526 ;; *************** function _DIO_SetPinValue *****************
  4527 ;; Defined at:
  4528 ;;		line 62 in file "gpio.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;  portName        1    wreg     enum E2181
  4531 ;;  pinNo           1    0[COMRAM] unsigned char 
  4532 ;;  value           1    1[COMRAM] enum E2188
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  portName        1    4[COMRAM] enum E2181
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		wreg, status,2, status,0
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4544 ;;      Params:         2       0       0       0       0       0       0
  4545 ;;      Locals:         1       0       0       0       0       0       0
  4546 ;;      Temps:          2       0       0       0       0       0       0
  4547 ;;      Totals:         5       0       0       0       0       0       0
  4548 ;;Total ram usage:        5 bytes
  4549 ;; Hardware stack levels used: 1
  4550 ;; Hardware stack levels required when called: 1
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_LCD_sendCommand
  4555 ;;		_LCD_displayCharacter
  4556 ;;		_motor_init
  4557 ;;		_motor_on
  4558 ;;		_motor_off
  4559 ;;		_led_on
  4560 ;;		_led_off
  4561 ;;		_buzzer_on
  4562 ;;		_buzzer_off
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           	psect	text31
  4567   000EB6                     __ptext31:
  4568                           	callstack 0
  4569   000EB6                     _DIO_SetPinValue:
  4570                           	callstack 0
  4571   000EB6  FFFF               	dw	65535	; assembler added errata NOP
  4572                           
  4573                           ;incstack = 0
  4574                           ;DIO_SetPinValue@portName stored from wreg
  4575   000EB8  6E05               	movwf	DIO_SetPinValue@portName^0,c
  4576   000EBA                     
  4577                           ;gpio.c: 63:     switch (portName){
  4578   000EBA  EF54  F008         	goto	l1725
  4579   000EBE                     l1693:
  4580   000EBE  FFFF               	dw	65535	; assembler added errata NOP
  4581                           
  4582                           ;gpio.c: 65:             if(value == LOW){
  4583   000EC0  5002               	movf	DIO_SetPinValue@value^0,w,c
  4584   000EC2  A4D8               	btfss	status,2,c
  4585   000EC4  EF66  F007         	goto	u831
  4586   000EC8  EF69  F007         	goto	u830
  4587   000ECC                     u831:
  4588   000ECC  FFFF               	dw	65535	; assembler added errata NOP
  4589   000ECE  EF7D  F007         	goto	l1697
  4590   000ED2                     u830:
  4591   000ED2  FFFF               	dw	65535	; assembler added errata NOP
  4592   000ED4                     
  4593                           ;gpio.c: 66:                 (PORTA)&=~(1<<(pinNo));
  4594   000ED4  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4595   000ED8  0E01               	movlw	1
  4596   000EDA  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4597   000EDC  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4598   000EDE  EF74  F007         	goto	u844
  4599   000EE2                     u845:
  4600   000EE2  FFFF               	dw	65535	; assembler added errata NOP
  4601   000EE4  90D8               	bcf	status,0,c
  4602   000EE6  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4603   000EE8                     u844:
  4604   000EE8  FFFF               	dw	65535	; assembler added errata NOP
  4605   000EEA  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4606   000EEC  EF71  F007         	goto	u845
  4607   000EF0  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4608   000EF2  0AFF               	xorlw	255
  4609   000EF4  1680               	andwf	128,f,c	;volatile
  4610                           
  4611                           ;gpio.c: 67:             }
  4612   000EF6  EF77  F008         	goto	l190
  4613   000EFA                     l1697:
  4614   000EFA  FFFF               	dw	65535	; assembler added errata NOP
  4615                           
  4616                           ;gpio.c: 69:                 (PORTA)|= 1<<(pinNo);
  4617   000EFC  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4618   000F00  0E01               	movlw	1
  4619   000F02  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4620   000F04  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4621   000F06  EF88  F007         	goto	u854
  4622   000F0A                     u855:
  4623   000F0A  FFFF               	dw	65535	; assembler added errata NOP
  4624   000F0C  90D8               	bcf	status,0,c
  4625   000F0E  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4626   000F10                     u854:
  4627   000F10  FFFF               	dw	65535	; assembler added errata NOP
  4628   000F12  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4629   000F14  EF85  F007         	goto	u855
  4630   000F18  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4631   000F1A  1280               	iorwf	128,f,c	;volatile
  4632   000F1C  EF77  F008         	goto	l190
  4633   000F20                     l1699:
  4634   000F20  FFFF               	dw	65535	; assembler added errata NOP
  4635                           
  4636                           ;gpio.c: 73:             if(value == LOW){
  4637   000F22  5002               	movf	DIO_SetPinValue@value^0,w,c
  4638   000F24  A4D8               	btfss	status,2,c
  4639   000F26  EF97  F007         	goto	u861
  4640   000F2A  EF9A  F007         	goto	u860
  4641   000F2E                     u861:
  4642   000F2E  FFFF               	dw	65535	; assembler added errata NOP
  4643   000F30  EFAE  F007         	goto	l1703
  4644   000F34                     u860:
  4645   000F34  FFFF               	dw	65535	; assembler added errata NOP
  4646   000F36                     
  4647                           ;gpio.c: 74:                 (PORTB)&=~(1<<(pinNo));
  4648   000F36  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4649   000F3A  0E01               	movlw	1
  4650   000F3C  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4651   000F3E  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4652   000F40  EFA5  F007         	goto	u874
  4653   000F44                     u875:
  4654   000F44  FFFF               	dw	65535	; assembler added errata NOP
  4655   000F46  90D8               	bcf	status,0,c
  4656   000F48  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4657   000F4A                     u874:
  4658   000F4A  FFFF               	dw	65535	; assembler added errata NOP
  4659   000F4C  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4660   000F4E  EFA2  F007         	goto	u875
  4661   000F52  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4662   000F54  0AFF               	xorlw	255
  4663   000F56  1681               	andwf	129,f,c	;volatile
  4664                           
  4665                           ;gpio.c: 75:             }
  4666   000F58  EF77  F008         	goto	l190
  4667   000F5C                     l1703:
  4668   000F5C  FFFF               	dw	65535	; assembler added errata NOP
  4669                           
  4670                           ;gpio.c: 77:                 (PORTB)|= 1<<(pinNo);
  4671   000F5E  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4672   000F62  0E01               	movlw	1
  4673   000F64  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4674   000F66  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4675   000F68  EFB9  F007         	goto	u884
  4676   000F6C                     u885:
  4677   000F6C  FFFF               	dw	65535	; assembler added errata NOP
  4678   000F6E  90D8               	bcf	status,0,c
  4679   000F70  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4680   000F72                     u884:
  4681   000F72  FFFF               	dw	65535	; assembler added errata NOP
  4682   000F74  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4683   000F76  EFB6  F007         	goto	u885
  4684   000F7A  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4685   000F7C  1281               	iorwf	129,f,c	;volatile
  4686   000F7E  EF77  F008         	goto	l190
  4687   000F82                     l1705:
  4688   000F82  FFFF               	dw	65535	; assembler added errata NOP
  4689                           
  4690                           ;gpio.c: 81:             if(value == LOW){
  4691   000F84  5002               	movf	DIO_SetPinValue@value^0,w,c
  4692   000F86  A4D8               	btfss	status,2,c
  4693   000F88  EFC8  F007         	goto	u891
  4694   000F8C  EFCB  F007         	goto	u890
  4695   000F90                     u891:
  4696   000F90  FFFF               	dw	65535	; assembler added errata NOP
  4697   000F92  EFDF  F007         	goto	l1709
  4698   000F96                     u890:
  4699   000F96  FFFF               	dw	65535	; assembler added errata NOP
  4700   000F98                     
  4701                           ;gpio.c: 82:                 (PORTC)&=~(1<<(pinNo));
  4702   000F98  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4703   000F9C  0E01               	movlw	1
  4704   000F9E  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4705   000FA0  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4706   000FA2  EFD6  F007         	goto	u904
  4707   000FA6                     u905:
  4708   000FA6  FFFF               	dw	65535	; assembler added errata NOP
  4709   000FA8  90D8               	bcf	status,0,c
  4710   000FAA  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4711   000FAC                     u904:
  4712   000FAC  FFFF               	dw	65535	; assembler added errata NOP
  4713   000FAE  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4714   000FB0  EFD3  F007         	goto	u905
  4715   000FB4  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4716   000FB6  0AFF               	xorlw	255
  4717   000FB8  1682               	andwf	130,f,c	;volatile
  4718                           
  4719                           ;gpio.c: 83:             }
  4720   000FBA  EF77  F008         	goto	l190
  4721   000FBE                     l1709:
  4722   000FBE  FFFF               	dw	65535	; assembler added errata NOP
  4723                           
  4724                           ;gpio.c: 85:                 (PORTC)|= 1<<(pinNo);
  4725   000FC0  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4726   000FC4  0E01               	movlw	1
  4727   000FC6  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4728   000FC8  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4729   000FCA  EFEA  F007         	goto	u914
  4730   000FCE                     u915:
  4731   000FCE  FFFF               	dw	65535	; assembler added errata NOP
  4732   000FD0  90D8               	bcf	status,0,c
  4733   000FD2  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4734   000FD4                     u914:
  4735   000FD4  FFFF               	dw	65535	; assembler added errata NOP
  4736   000FD6  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4737   000FD8  EFE7  F007         	goto	u915
  4738   000FDC  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4739   000FDE  1282               	iorwf	130,f,c	;volatile
  4740   000FE0  EF77  F008         	goto	l190
  4741   000FE4                     l1711:
  4742   000FE4  FFFF               	dw	65535	; assembler added errata NOP
  4743                           
  4744                           ;gpio.c: 89:             if(value == LOW){
  4745   000FE6  5002               	movf	DIO_SetPinValue@value^0,w,c
  4746   000FE8  A4D8               	btfss	status,2,c
  4747   000FEA  EFF9  F007         	goto	u921
  4748   000FEE  EFFC  F007         	goto	u920
  4749   000FF2                     u921:
  4750   000FF2  FFFF               	dw	65535	; assembler added errata NOP
  4751   000FF4  EF10  F008         	goto	l1715
  4752   000FF8                     u920:
  4753   000FF8  FFFF               	dw	65535	; assembler added errata NOP
  4754   000FFA                     
  4755                           ;gpio.c: 90:                 (PORTD)&=~(1<<(pinNo));
  4756   000FFA  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4757   000FFE  0E01               	movlw	1
  4758   001000  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4759   001002  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4760   001004  EF07  F008         	goto	u934
  4761   001008                     u935:
  4762   001008  FFFF               	dw	65535	; assembler added errata NOP
  4763   00100A  90D8               	bcf	status,0,c
  4764   00100C  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4765   00100E                     u934:
  4766   00100E  FFFF               	dw	65535	; assembler added errata NOP
  4767   001010  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4768   001012  EF04  F008         	goto	u935
  4769   001016  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4770   001018  0AFF               	xorlw	255
  4771   00101A  1683               	andwf	131,f,c	;volatile
  4772                           
  4773                           ;gpio.c: 91:             }
  4774   00101C  EF77  F008         	goto	l190
  4775   001020                     l1715:
  4776   001020  FFFF               	dw	65535	; assembler added errata NOP
  4777                           
  4778                           ;gpio.c: 93:                 (PORTD)|= 1<<(pinNo);
  4779   001022  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4780   001026  0E01               	movlw	1
  4781   001028  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4782   00102A  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4783   00102C  EF1B  F008         	goto	u944
  4784   001030                     u945:
  4785   001030  FFFF               	dw	65535	; assembler added errata NOP
  4786   001032  90D8               	bcf	status,0,c
  4787   001034  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4788   001036                     u944:
  4789   001036  FFFF               	dw	65535	; assembler added errata NOP
  4790   001038  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4791   00103A  EF18  F008         	goto	u945
  4792   00103E  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4793   001040  1283               	iorwf	131,f,c	;volatile
  4794   001042  EF77  F008         	goto	l190
  4795   001046                     l1717:
  4796   001046  FFFF               	dw	65535	; assembler added errata NOP
  4797                           
  4798                           ;gpio.c: 97:             if(value == LOW){
  4799   001048  5002               	movf	DIO_SetPinValue@value^0,w,c
  4800   00104A  A4D8               	btfss	status,2,c
  4801   00104C  EF2A  F008         	goto	u951
  4802   001050  EF2D  F008         	goto	u950
  4803   001054                     u951:
  4804   001054  FFFF               	dw	65535	; assembler added errata NOP
  4805   001056  EF41  F008         	goto	l1721
  4806   00105A                     u950:
  4807   00105A  FFFF               	dw	65535	; assembler added errata NOP
  4808   00105C                     
  4809                           ;gpio.c: 98:                 (PORTE)&=~(1<<(pinNo));
  4810   00105C  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4811   001060  0E01               	movlw	1
  4812   001062  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4813   001064  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4814   001066  EF38  F008         	goto	u964
  4815   00106A                     u965:
  4816   00106A  FFFF               	dw	65535	; assembler added errata NOP
  4817   00106C  90D8               	bcf	status,0,c
  4818   00106E  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4819   001070                     u964:
  4820   001070  FFFF               	dw	65535	; assembler added errata NOP
  4821   001072  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4822   001074  EF35  F008         	goto	u965
  4823   001078  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4824   00107A  0AFF               	xorlw	255
  4825   00107C  1684               	andwf	132,f,c	;volatile
  4826                           
  4827                           ;gpio.c: 99:             }
  4828   00107E  EF77  F008         	goto	l190
  4829   001082                     l1721:
  4830   001082  FFFF               	dw	65535	; assembler added errata NOP
  4831                           
  4832                           ;gpio.c: 101:                 (PORTE)|= 1<<(pinNo);
  4833   001084  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4834   001088  0E01               	movlw	1
  4835   00108A  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4836   00108C  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4837   00108E  EF4C  F008         	goto	u974
  4838   001092                     u975:
  4839   001092  FFFF               	dw	65535	; assembler added errata NOP
  4840   001094  90D8               	bcf	status,0,c
  4841   001096  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4842   001098                     u974:
  4843   001098  FFFF               	dw	65535	; assembler added errata NOP
  4844   00109A  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4845   00109C  EF49  F008         	goto	u975
  4846   0010A0  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4847   0010A2  1284               	iorwf	132,f,c	;volatile
  4848   0010A4  EF77  F008         	goto	l190
  4849   0010A8                     l1725:
  4850   0010A8  FFFF               	dw	65535	; assembler added errata NOP
  4851   0010AA  5005               	movf	DIO_SetPinValue@portName^0,w,c
  4852   0010AC  6E03               	movwf	??_DIO_SetPinValue^0,c
  4853   0010AE  6A04               	clrf	(??_DIO_SetPinValue+1)^0,c
  4854                           
  4855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4856                           ; Switch size 1, requested type "simple"
  4857                           ; Number of cases is 1, Range of values is 0 to 0
  4858                           ; switch strategies available:
  4859                           ; Name         Instructions Cycles
  4860                           ; simple_byte            4     3 (average)
  4861                           ;	Chosen strategy is simple_byte
  4862   0010B0  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4863   0010B2  0A00               	xorlw	0	; case 0
  4864   0010B4  B4D8               	btfsc	status,2,c
  4865   0010B6  EF5F  F008         	goto	l2217
  4866   0010BA  EF77  F008         	goto	l190
  4867   0010BE                     l2217:
  4868   0010BE  FFFF               	dw	65535	; assembler added errata NOP
  4869                           
  4870                           ; Switch size 1, requested type "simple"
  4871                           ; Number of cases is 5, Range of values is 0 to 4
  4872                           ; switch strategies available:
  4873                           ; Name         Instructions Cycles
  4874                           ; simple_byte           16     9 (average)
  4875                           ;	Chosen strategy is simple_byte
  4876   0010C0  5003               	movf	??_DIO_SetPinValue^0,w,c
  4877   0010C2  0A00               	xorlw	0	; case 0
  4878   0010C4  B4D8               	btfsc	status,2,c
  4879   0010C6  EF5F  F007         	goto	l1693
  4880   0010CA  0A01               	xorlw	1	; case 1
  4881   0010CC  B4D8               	btfsc	status,2,c
  4882   0010CE  EF90  F007         	goto	l1699
  4883   0010D2  0A03               	xorlw	3	; case 2
  4884   0010D4  B4D8               	btfsc	status,2,c
  4885   0010D6  EFC1  F007         	goto	l1705
  4886   0010DA  0A01               	xorlw	1	; case 3
  4887   0010DC  B4D8               	btfsc	status,2,c
  4888   0010DE  EFF2  F007         	goto	l1711
  4889   0010E2  0A07               	xorlw	7	; case 4
  4890   0010E4  B4D8               	btfsc	status,2,c
  4891   0010E6  EF23  F008         	goto	l1717
  4892   0010EA  EF77  F008         	goto	l190
  4893   0010EE                     l190:
  4894   0010EE  FFFF               	dw	65535	; assembler added errata NOP
  4895   0010F0  0012               	return		;funcret
  4896   0010F2  FFFF               	dw	65535	; errata NOP
  4897   0010F4                     __end_of_DIO_SetPinValue:
  4898                           	callstack 0
  4899                           
  4900 ;; *************** function _DIO_TogglePin *****************
  4901 ;; Defined at:
  4902 ;;		line 178 in file "gpio.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;  portName        1    wreg     enum E2181
  4905 ;;  pinNo           1    0[COMRAM] unsigned char 
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;  portName        1    3[COMRAM] enum E2181
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  1    wreg      void 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4917 ;;      Params:         1       0       0       0       0       0       0
  4918 ;;      Locals:         1       0       0       0       0       0       0
  4919 ;;      Temps:          2       0       0       0       0       0       0
  4920 ;;      Totals:         4       0       0       0       0       0       0
  4921 ;;Total ram usage:        4 bytes
  4922 ;; Hardware stack levels used: 1
  4923 ;; Hardware stack levels required when called: 1
  4924 ;; This function calls:
  4925 ;;		Nothing
  4926 ;; This function is called by:
  4927 ;;		_main
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           	psect	text32
  4932   00121E                     __ptext32:
  4933                           	callstack 0
  4934   00121E                     _DIO_TogglePin:
  4935                           	callstack 0
  4936   00121E  FFFF               	dw	65535	; assembler added errata NOP
  4937                           
  4938                           ;incstack = 0
  4939                           ;DIO_TogglePin@portName stored from wreg
  4940   001220  6E04               	movwf	DIO_TogglePin@portName^0,c
  4941   001222                     
  4942                           ;gpio.c: 179:  switch(portName) {
  4943   001222  EF72  F009         	goto	l1963
  4944   001226                     l1951:
  4945   001226  FFFF               	dw	65535	; assembler added errata NOP
  4946                           
  4947                           ;gpio.c: 181:             (PORTA)^= 1<<(pinNo);
  4948   001228  C001  F002         	movff	DIO_TogglePin@pinNo,??_DIO_TogglePin
  4949   00122C  0E01               	movlw	1
  4950   00122E  6E03               	movwf	(??_DIO_TogglePin+1)^0,c
  4951   001230  2A02               	incf	??_DIO_TogglePin^0,f,c
  4952   001232  EF1E  F009         	goto	u1214
  4953   001236                     u1215:
  4954   001236  FFFF               	dw	65535	; assembler added errata NOP
  4955   001238  90D8               	bcf	status,0,c
  4956   00123A  3603               	rlcf	(??_DIO_TogglePin+1)^0,f,c
  4957   00123C                     u1214:
  4958   00123C  FFFF               	dw	65535	; assembler added errata NOP
  4959   00123E  2E02               	decfsz	??_DIO_TogglePin^0,f,c
  4960   001240  EF1B  F009         	goto	u1215
  4961   001244  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  4962   001246  1A80               	xorwf	128,f,c	;volatile
  4963                           
  4964                           ;gpio.c: 182:   break;
  4965   001248  EF95  F009         	goto	l230
  4966   00124C                     l1953:
  4967   00124C  FFFF               	dw	65535	; assembler added errata NOP
  4968                           
  4969                           ;gpio.c: 185:             (PORTB)^= 1<<(pinNo);
  4970   00124E  C001  F002         	movff	DIO_TogglePin@pinNo,??_DIO_TogglePin
  4971   001252  0E01               	movlw	1
  4972   001254  6E03               	movwf	(??_DIO_TogglePin+1)^0,c
  4973   001256  2A02               	incf	??_DIO_TogglePin^0,f,c
  4974   001258  EF31  F009         	goto	u1224
  4975   00125C                     u1225:
  4976   00125C  FFFF               	dw	65535	; assembler added errata NOP
  4977   00125E  90D8               	bcf	status,0,c
  4978   001260  3603               	rlcf	(??_DIO_TogglePin+1)^0,f,c
  4979   001262                     u1224:
  4980   001262  FFFF               	dw	65535	; assembler added errata NOP
  4981   001264  2E02               	decfsz	??_DIO_TogglePin^0,f,c
  4982   001266  EF2E  F009         	goto	u1225
  4983   00126A  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  4984   00126C  1A81               	xorwf	129,f,c	;volatile
  4985                           
  4986                           ;gpio.c: 186:   break;
  4987   00126E  EF95  F009         	goto	l230
  4988   001272                     l1955:
  4989   001272  FFFF               	dw	65535	; assembler added errata NOP
  4990                           
  4991                           ;gpio.c: 189:             (PORTC)^= 1<<(pinNo);
  4992   001274  C001  F002         	movff	DIO_TogglePin@pinNo,??_DIO_TogglePin
  4993   001278  0E01               	movlw	1
  4994   00127A  6E03               	movwf	(??_DIO_TogglePin+1)^0,c
  4995   00127C  2A02               	incf	??_DIO_TogglePin^0,f,c
  4996   00127E  EF44  F009         	goto	u1234
  4997   001282                     u1235:
  4998   001282  FFFF               	dw	65535	; assembler added errata NOP
  4999   001284  90D8               	bcf	status,0,c
  5000   001286  3603               	rlcf	(??_DIO_TogglePin+1)^0,f,c
  5001   001288                     u1234:
  5002   001288  FFFF               	dw	65535	; assembler added errata NOP
  5003   00128A  2E02               	decfsz	??_DIO_TogglePin^0,f,c
  5004   00128C  EF41  F009         	goto	u1235
  5005   001290  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  5006   001292  1A82               	xorwf	130,f,c	;volatile
  5007                           
  5008                           ;gpio.c: 190:   break;
  5009   001294  EF95  F009         	goto	l230
  5010   001298                     l1957:
  5011   001298  FFFF               	dw	65535	; assembler added errata NOP
  5012                           
  5013                           ;gpio.c: 193:             (PORTD)^= 1<<(pinNo);
  5014   00129A  C001  F002         	movff	DIO_TogglePin@pinNo,??_DIO_TogglePin
  5015   00129E  0E01               	movlw	1
  5016   0012A0  6E03               	movwf	(??_DIO_TogglePin+1)^0,c
  5017   0012A2  2A02               	incf	??_DIO_TogglePin^0,f,c
  5018   0012A4  EF57  F009         	goto	u1244
  5019   0012A8                     u1245:
  5020   0012A8  FFFF               	dw	65535	; assembler added errata NOP
  5021   0012AA  90D8               	bcf	status,0,c
  5022   0012AC  3603               	rlcf	(??_DIO_TogglePin+1)^0,f,c
  5023   0012AE                     u1244:
  5024   0012AE  FFFF               	dw	65535	; assembler added errata NOP
  5025   0012B0  2E02               	decfsz	??_DIO_TogglePin^0,f,c
  5026   0012B2  EF54  F009         	goto	u1245
  5027   0012B6  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  5028   0012B8  1A83               	xorwf	131,f,c	;volatile
  5029                           
  5030                           ;gpio.c: 194:   break;
  5031   0012BA  EF95  F009         	goto	l230
  5032   0012BE                     l1959:
  5033   0012BE  FFFF               	dw	65535	; assembler added errata NOP
  5034                           
  5035                           ;gpio.c: 197:             (PORTE)^= 1<<(pinNo);
  5036   0012C0  C001  F002         	movff	DIO_TogglePin@pinNo,??_DIO_TogglePin
  5037   0012C4  0E01               	movlw	1
  5038   0012C6  6E03               	movwf	(??_DIO_TogglePin+1)^0,c
  5039   0012C8  2A02               	incf	??_DIO_TogglePin^0,f,c
  5040   0012CA  EF6A  F009         	goto	u1254
  5041   0012CE                     u1255:
  5042   0012CE  FFFF               	dw	65535	; assembler added errata NOP
  5043   0012D0  90D8               	bcf	status,0,c
  5044   0012D2  3603               	rlcf	(??_DIO_TogglePin+1)^0,f,c
  5045   0012D4                     u1254:
  5046   0012D4  FFFF               	dw	65535	; assembler added errata NOP
  5047   0012D6  2E02               	decfsz	??_DIO_TogglePin^0,f,c
  5048   0012D8  EF67  F009         	goto	u1255
  5049   0012DC  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  5050   0012DE  1A84               	xorwf	132,f,c	;volatile
  5051                           
  5052                           ;gpio.c: 198:   break;
  5053   0012E0  EF95  F009         	goto	l230
  5054   0012E4                     l1963:
  5055   0012E4  FFFF               	dw	65535	; assembler added errata NOP
  5056   0012E6  5004               	movf	DIO_TogglePin@portName^0,w,c
  5057   0012E8  6E02               	movwf	??_DIO_TogglePin^0,c
  5058   0012EA  6A03               	clrf	(??_DIO_TogglePin+1)^0,c
  5059                           
  5060                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5061                           ; Switch size 1, requested type "simple"
  5062                           ; Number of cases is 1, Range of values is 0 to 0
  5063                           ; switch strategies available:
  5064                           ; Name         Instructions Cycles
  5065                           ; simple_byte            4     3 (average)
  5066                           ;	Chosen strategy is simple_byte
  5067   0012EC  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  5068   0012EE  0A00               	xorlw	0	; case 0
  5069   0012F0  B4D8               	btfsc	status,2,c
  5070   0012F2  EF7D  F009         	goto	l2219
  5071   0012F6  EF95  F009         	goto	l230
  5072   0012FA                     l2219:
  5073   0012FA  FFFF               	dw	65535	; assembler added errata NOP
  5074                           
  5075                           ; Switch size 1, requested type "simple"
  5076                           ; Number of cases is 5, Range of values is 0 to 4
  5077                           ; switch strategies available:
  5078                           ; Name         Instructions Cycles
  5079                           ; simple_byte           16     9 (average)
  5080                           ;	Chosen strategy is simple_byte
  5081   0012FC  5002               	movf	??_DIO_TogglePin^0,w,c
  5082   0012FE  0A00               	xorlw	0	; case 0
  5083   001300  B4D8               	btfsc	status,2,c
  5084   001302  EF13  F009         	goto	l1951
  5085   001306  0A01               	xorlw	1	; case 1
  5086   001308  B4D8               	btfsc	status,2,c
  5087   00130A  EF26  F009         	goto	l1953
  5088   00130E  0A03               	xorlw	3	; case 2
  5089   001310  B4D8               	btfsc	status,2,c
  5090   001312  EF39  F009         	goto	l1955
  5091   001316  0A01               	xorlw	1	; case 3
  5092   001318  B4D8               	btfsc	status,2,c
  5093   00131A  EF4C  F009         	goto	l1957
  5094   00131E  0A07               	xorlw	7	; case 4
  5095   001320  B4D8               	btfsc	status,2,c
  5096   001322  EF5F  F009         	goto	l1959
  5097   001326  EF95  F009         	goto	l230
  5098   00132A                     l230:
  5099   00132A  FFFF               	dw	65535	; assembler added errata NOP
  5100   00132C  0012               	return		;funcret
  5101   00132E  FFFF               	dw	65535	; errata NOP
  5102   001330                     __end_of_DIO_TogglePin:
  5103                           	callstack 0
  5104                           
  5105 ;; *************** function _Timer0_ISR *****************
  5106 ;; Defined at:
  5107 ;;		line 33 in file "main.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;		None
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;		None
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      void 
  5114 ;; Registers used:
  5115 ;;		wreg, status,2, status,0
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5121 ;;      Params:         0       0       0       0       0       0       0
  5122 ;;      Locals:         0       0       0       0       0       0       0
  5123 ;;      Temps:          0       0       0       0       0       0       0
  5124 ;;      Totals:         0       0       0       0       0       0       0
  5125 ;;Total ram usage:        0 bytes
  5126 ;; Hardware stack levels used: 1
  5127 ;; This function calls:
  5128 ;;		Nothing
  5129 ;; This function is called by:
  5130 ;;		Interrupt level 2
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           	psect	intcode
  5135   000008                     __pintcode:
  5136                           	callstack 0
  5137   000008                     _Timer0_ISR:
  5138                           	callstack 0
  5139   000008  FFFF               	dw	65535	; assembler added errata NOP
  5140                           
  5141                           ;incstack = 0
  5142   00000A  822E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5143   00000C                     
  5144                           ;main.c: 34:     if(TMR0IF){
  5145   00000C  A4F2               	btfss	4082,2,c	;volatile
  5146   00000E  EF0B  F000         	goto	i2u46_41
  5147   000012  EF0E  F000         	goto	i2u46_40
  5148   000016                     i2u46_41:
  5149   000016  FFFF               	dw	65535	; assembler added errata NOP
  5150   000018  EF1E  F000         	goto	i2l76
  5151   00001C                     i2u46_40:
  5152   00001C  FFFF               	dw	65535	; assembler added errata NOP
  5153   00001E                     
  5154                           ;main.c: 35:         TMR0IF = 0;
  5155   00001E  94F2               	bcf	4082,2,c	;volatile
  5156   000020                     
  5157                           ;main.c: 36:         TMR0H = 0xF0;
  5158   000020  0EF0               	movlw	240
  5159   000022  6ED7               	movwf	215,c	;volatile
  5160                           
  5161                           ;main.c: 37:         TMR0L = 0xBD;
  5162   000024  0EBD               	movlw	189
  5163   000026  6ED6               	movwf	214,c	;volatile
  5164   000028                     
  5165                           ;main.c: 40:         sysButtonTimer++;
  5166   000028  4A29               	infsnz	_sysButtonTimer^0,f,c
  5167   00002A  2A2A               	incf	(_sysButtonTimer+1)^0,f,c
  5168   00002C                     
  5169                           ;main.c: 41:         activatedStateTimer++;
  5170   00002C  4A27               	infsnz	_activatedStateTimer^0,f,c
  5171   00002E  2A28               	incf	(_activatedStateTimer+1)^0,f,c
  5172   000030                     
  5173                           ;main.c: 42:         GateCloseTimer++;
  5174   000030  4A2B               	infsnz	_GateCloseTimer^0,f,c
  5175   000032  2A2C               	incf	(_GateCloseTimer+1)^0,f,c
  5176   000034                     
  5177                           ;main.c: 43:         emergencyTimer++;
  5178   000034  4A25               	infsnz	_emergencyTimer^0,f,c
  5179   000036  2A26               	incf	(_emergencyTimer+1)^0,f,c
  5180   000038                     
  5181                           ;main.c: 44:         rstButtonTimer++;
  5182   000038  4A23               	infsnz	_rstButtonTimer^0,f,c
  5183   00003A  2A24               	incf	(_rstButtonTimer+1)^0,f,c
  5184   00003C                     i2l76:
  5185   00003C  FFFF               	dw	65535	; assembler added errata NOP
  5186   00003E  922E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5187   000040  0011               	retfie		f
  5188   000042  FFFF               	dw	65535	; errata NOP
  5189   000044                     __end_of_Timer0_ISR:
  5190                           	callstack 0
  5191                           
  5192                           	psect	rparam
  5193   000000                     
  5194                           	psect	temp
  5195   00002E                     btemp:
  5196                           	callstack 0
  5197   00002E                     	ds	1
  5198   000000                     int$flags	set	btemp
  5199   000000                     wtemp8	set	btemp+1
  5200   000000                     ttemp5	set	btemp+1
  5201   000000                     ttemp6	set	btemp+4
  5202   000000                     ttemp7	set	btemp+8
  5203                           tosu	equ	0xFFF
  5204                           tosh	equ	0xFFE
  5205                           tosl	equ	0xFFD
  5206                           stkptr	equ	0xFFC
  5207                           pclatu	equ	0xFFB
  5208                           pclath	equ	0xFFA
  5209                           pcl	equ	0xFF9
  5210                           tblptru	equ	0xFF8
  5211                           tblptrh	equ	0xFF7
  5212                           tblptrl	equ	0xFF6
  5213                           tablat	equ	0xFF5
  5214                           prodh	equ	0xFF4
  5215                           prodl	equ	0xFF3
  5216                           indf0	equ	0xFEF
  5217                           postinc0	equ	0xFEE
  5218                           postdec0	equ	0xFED
  5219                           preinc0	equ	0xFEC
  5220                           plusw0	equ	0xFEB
  5221                           fsr0h	equ	0xFEA
  5222                           fsr0l	equ	0xFE9
  5223                           wreg	equ	0xFE8
  5224                           indf1	equ	0xFE7
  5225                           postinc1	equ	0xFE6
  5226                           postdec1	equ	0xFE5
  5227                           preinc1	equ	0xFE4
  5228                           plusw1	equ	0xFE3
  5229                           fsr1h	equ	0xFE2
  5230                           fsr1l	equ	0xFE1
  5231                           bsr	equ	0xFE0
  5232                           indf2	equ	0xFDF
  5233                           postinc2	equ	0xFDE
  5234                           postdec2	equ	0xFDD
  5235                           preinc2	equ	0xFDC
  5236                           plusw2	equ	0xFDB
  5237                           fsr2h	equ	0xFDA
  5238                           fsr2l	equ	0xFD9
  5239                           status	equ	0xFD8

Data Sizes:
    Strings     101
    Constant    0
    Data        3
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     29      45
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    LCD_displayString@Str	PTR unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[12]), STR_3(CODE[9]), STR_4(CODE[13]), STR_5(CODE[10]), 
		 -> STR_6(CODE[12]), STR_7(CODE[12]), STR_8(CODE[16]), STR_9(CODE[12]), 

    LCD_displayStringRowColumn@Str	PTR unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[12]), STR_3(CODE[9]), STR_4(CODE[13]), STR_5(CODE[10]), 
		 -> STR_6(CODE[12]), STR_7(CODE[12]), STR_8(CODE[16]), STR_9(CODE[12]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> main@passCode(COMRAM[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_LCD_displayStringRowColumn
    _pir_init->_DIO_SetPinDirection
    _pir_getState->_DIO_GetPinValue
    _motor_on->_DIO_SetPinValue
    _motor_off->_DIO_SetPinValue
    _motor_init->_DIO_SetPinDirection
    _motor_init->_DIO_SetPinValue
    _led_on->_DIO_SetPinValue
    _led_off->_DIO_SetPinValue
    _led_init->_DIO_SetPinDirection
    _keypad_read->_keypad_value
    _keypad_init->_DIO_SetPinDirection
    _buzzer_on->_DIO_SetPinValue
    _buzzer_off->_DIO_SetPinValue
    _buzzer_init->_DIO_SetPinDirection
    _button_init->_DIO_SetPinDirection
    _button_getState->_DIO_GetPinValue
    _LCD_init->_LCD_sendCommand
    _LCD_displayStringRowColumn->_LCD_displayString
    _LCD_displayStringRowColumn->_LCD_goToRowColumn
    _LCD_goToRowColumn->_LCD_sendCommand
    _LCD_displayString->_LCD_displayCharacter
    _LCD_displayCharacter->_DIO_SetPinValue
    _LCD_clearScreen->_LCD_sendCommand
    _LCD_sendCommand->_DIO_SetPinValue

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   94655
                                             13 COMRAM    16    16      0
                      _DIO_TogglePin
                    _LCD_clearScreen
               _LCD_displayCharacter
         _LCD_displayStringRowColumn
                  _LCD_goToRowColumn
                           _LCD_init
                        _Timer0_init
                    _button_getState
                        _button_init
                        _buzzer_init
                         _buzzer_off
                          _buzzer_on
                        _keypad_init
                        _keypad_read
                           _led_init
                            _led_off
                             _led_on
                         _motor_init
                          _motor_off
                           _motor_on
                       _pir_getState
                           _pir_init
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               3     1      2     264
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _pir_init                                             2     1      1    3816
                                              5 COMRAM     2     1      1
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _pir_getState                                         2     1      1     409
                                              5 COMRAM     2     1      1
                    _DIO_GetPinValue
 ---------------------------------------------------------------------------------
 (1) _motor_on                                             0     0      0    4608
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _motor_off                                            0     0      0    4608
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _motor_init                                           0     0      0    8304
                _DIO_SetPinDirection
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _led_on                                               2     1      1    4880
                                              5 COMRAM     2     1      1
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _led_off                                              2     1      1    4728
                                              5 COMRAM     2     1      1
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _led_init                                             2     1      1    3892
                                              5 COMRAM     2     1      1
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _keypad_read                                          2     2      0      30
                                              1 COMRAM     2     2      0
                   _keypad_line_scan
                       _keypad_value
 ---------------------------------------------------------------------------------
 (2) _keypad_value                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _keypad_line_scan                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0    3696
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _buzzer_on                                            2     1      1    4804
                                              5 COMRAM     2     1      1
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _buzzer_off                                           2     1      1    4804
                                              5 COMRAM     2     1      1
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _buzzer_init                                          2     1      1    3816
                                              5 COMRAM     2     1      1
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _button_init                                          2     1      1    3968
                                              5 COMRAM     2     1      1
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _button_getState                                      2     1      1     561
                                              5 COMRAM     2     1      1
                    _DIO_GetPinValue
 ---------------------------------------------------------------------------------
 (2) _DIO_GetPinValue                                      5     4      1     289
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0    9068
                _DIO_SetPinDirection
                   _DIO_SetPortValue
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (2) _DIO_SetPortValue                                     4     3      1     284
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _DIO_SetPinDirection                                  5     3      2    3696
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCD_displayStringRowColumn                           3     1      2   11913
                                             10 COMRAM     3     1      2
                  _LCD_displayString
                  _LCD_goToRowColumn
 ---------------------------------------------------------------------------------
 (1) _LCD_goToRowColumn                                    3     2      1    5377
                                              7 COMRAM     3     2      1
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (2) _LCD_displayString                                    3     2      1    5254
                                              7 COMRAM     3     2      1
               _LCD_displayCharacter
 ---------------------------------------------------------------------------------
 (3) _LCD_displayCharacter                                 2     2      0    5088
                                              5 COMRAM     2     2      0
                    _DIO_SetPinValue
          _DIO_SetUpperHalfPortValue
 ---------------------------------------------------------------------------------
 (1) _LCD_clearScreen                                      0     0      0    5088
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (2) _LCD_sendCommand                                      2     2      0    5088
                                              5 COMRAM     2     2      0
                    _DIO_SetPinValue
          _DIO_SetUpperHalfPortValue
 ---------------------------------------------------------------------------------
 (3) _DIO_SetUpperHalfPortValue                            4     3      1     436
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _DIO_SetPinValue                                      5     3      2    4608
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _DIO_TogglePin                                        4     3      1     208
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer0_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DIO_TogglePin
   _LCD_clearScreen
     _LCD_sendCommand
       _DIO_SetPinValue
       _DIO_SetUpperHalfPortValue
   _LCD_displayCharacter
     _DIO_SetPinValue
     _DIO_SetUpperHalfPortValue
   _LCD_displayStringRowColumn
     _LCD_displayString
       _LCD_displayCharacter
     _LCD_goToRowColumn
       _LCD_sendCommand
   _LCD_goToRowColumn
   _LCD_init
     _DIO_SetPinDirection
     _DIO_SetPortValue
     _LCD_sendCommand
   _Timer0_init
   _button_getState
     _DIO_GetPinValue
   _button_init
     _DIO_SetPinDirection
   _buzzer_init
     _DIO_SetPinDirection
   _buzzer_off
     _DIO_SetPinValue
   _buzzer_on
     _DIO_SetPinValue
   _keypad_init
     _DIO_SetPinDirection
   _keypad_read
     _keypad_line_scan
     _keypad_value
   _led_init
     _DIO_SetPinDirection
   _led_off
     _DIO_SetPinValue
   _led_on
     _DIO_SetPinValue
   _motor_init
     _DIO_SetPinDirection
     _DIO_SetPinValue
   _motor_off
     _DIO_SetPinValue
   _motor_on
     _DIO_SetPinValue
   _pir_getState
     _DIO_GetPinValue
   _pir_init
     _DIO_SetPinDirection
   _strcmp

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1D      2D       1       35.7%
BITBIGSFRlllh       2A      0       0      19        0.0%
BITBIGSFRlh         1A      0       0      17        0.0%
BITBIGSFRllh        13      0       0      18        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllll        D      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      21        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Apr 16 19:05:37 2024

                                                              l79 1B50  
                                               ??_DIO_GetPinValue 0002  
                                                             l113 0BE6  
                                                             l121 0B90  
                                                             l210 173C  
                                                             l220 1622  
                                                             l300 189E  
                                                             l204 16C4  
                                                             l230 132A  
                                                             l206 16CE  
                                                             l303 1A8A  
                                                             l207 16D8  
                                                             l208 16E2  
                                                             l209 16EC  
                                                             l313 182E  
                                                             l306 1B80  
                                                             l170 0EB0  
                                                             l243 1A70  
                                                             l332 1ACC  
                                                             l316 1998  
                                                             l237 1906  
                                                             l190 10EE  
                                                             l342 1AF8  
                                                             l326 1AE2  
                                                             l319 19D6  
                                                             l352 1B3A  
                                                             l248 1404  
                                                             l264 1A44  
                                                             l345 1B0E  
                                                             l329 1AB6  
                                                             l282 158A  
                                                             l362 1AA0  
                                                             l291 195A  
                                                             l195 1218  
                                                             l355 1B74  
                                                             l339 1B24  
                                                             l285 14C8  
                                                             l365 1B62  
                                                             l295 183E  
                                                             l279 16B8  
                                                             _GIE 7F97  
                                                             u360 1A64  
                                                             u361 1A5E  
                                                             u380 1A30  
                                                             u381 1A2A  
                                                             u830 0ED2  
                                                             u831 0ECC  
                                                             u920 0FF8  
                                                             u904 0FAC  
                                                             u921 0FF2  
                                                             u905 0FA6  
                                                             u914 0FD4  
                                                             u915 0FCE  
                                                             u860 0F34  
                                                             u844 0EE8  
                                                             u861 0F2E  
                                                             u845 0EE2  
                                                             u950 105A  
                                                             u934 100E  
                                                             u854 0F10  
                                                             u951 1054  
                                                             u935 1008  
                                                             u855 0F0A  
                                                             u944 1036  
                                                             u945 1030  
                                                             u890 0F96  
                                                             u874 0F4A  
                                                             u891 0F90  
                                                             u875 0F44  
                                                             u964 1070  
                                                             u884 0F72  
                                                             u980 0C94  
                                                             u965 106A  
                                                             u885 0F6C  
                                                             u981 0C8E  
                                                             u974 1098  
                                                             u975 1092  
                                                             u994 0CAA  
                                                             u995 0CA4  
                                                             wreg 0FE8  
                                               ??_button_getState 0007  
                                                  _GateCloseTimer 002B  
                                                            l2001 06BA  
                                                            l2011 06EC  
                                                            l2003 06C4  
                                                            l1301 1368  
                                                            l2101 0980  
                                                            l2021 073A  
                                                            l2013 06F6  
                                                            l2005 06CE  
                                                            l1047 17B8  
                                                            l2111 09C6  
                                                            l2103 0984  
                                                            l2023 075C  
                                                            l2031 0772  
                                                            l2015 06FA  
                                                            l2007 06D8  
                                                            l1313 1378  
                                                            l2121 0A32  
                                                            l2113 09D4  
                                                            l2105 0988  
                                                            l2041 07DA  
                                                            l2033 0792  
                                                            l2025 0768  
                                                            l2017 071A  
                                                            l2009 06E2  
                                                            l2211 170C  
                                                            l1331 1390  
                                                            l1307 1370  
                                                            l2131 0A84  
                                                            l2123 0A3C  
                                                            l2115 09F6  
                                                            l2107 099E  
                                                            l2043 07FC  
                                                            l2051 0812  
                                                            l2035 079A  
                                                            l2019 072E  
                                                            l2027 076C  
                                                            l2213 0E80  
                                                            l1261 1A6A  
                                                            l1341 1400  
                                                            l1325 1388  
                                                            l2141 0AC8  
                                                            l2133 0A92  
                                                            l2125 0A44  
                                                            l2117 0A04  
                                                            l2109 09B2  
                                                            l2061 0864  
                                                            l2053 0828  
                                                            l2045 0808  
                                                            l2037 07BA  
                                                            l2215 15F2  
                                                            l1319 1380  
                                                            l1271 1340  
                                                            l1263 1334  
                                                            l2151 0B36  
                                                            l2143 0AE8  
                                                            l2135 0AB2  
                                                            l2119 0A10  
                                                            l2127 0A4E  
                                                            l2071 08AC  
                                                            l2063 0868  
                                                            l2055 0836  
                                                            l2039 07CE  
                                                            l2047 080C  
                                                            l2217 10BE  
                                                            l1353 1B40  
                                                            l2209 11E4  
                                                            l1257 1A4C  
                                                            l1265 1338  
                                                            l2161 0B88  
                                                            l2153 0B56  
                                                            l2145 0AFC  
                                                            l2137 0ABA  
                                                            l2129 0A70  
                                                            l2081 08FC  
                                                            l2073 08BC  
                                                            l2065 087E  
                                                            l2057 084A  
                                                            l2219 12FA  
                                                            l1355 1B4C  
                                                            l1259 1A66  
                                                            l1283 1350  
                                                            l1339 1398  
                                                            l2171 0C02  
                                                            l2163 0BA0  
                                                            l2155 0B6A  
                                                            l2147 0B0A  
                                                            l2139 0AC4  
                                                            l2083 0910  
                                                            l2091 0948  
                                                            l2075 08C8  
                                                            l2067 0892  
                                                            l2059 0850  
                                                            l1701 0F36  
                                                            l1357 1B4E  
                                                            l1277 1348  
                                                            l2181 0C60  
                                                            l2173 0C16  
                                                            l2165 0BC0  
                                                            l2157 0B78  
                                                            l2149 0B14  
                                                            l2093 094E  
                                                            l2085 0918  
                                                            l2069 08A8  
                                                            l2077 08CE  
                                                            l1711 0FE4  
                                                            l1703 0F5C  
                                                            l1295 1360  
                                                            l1391 1A3A  
                                                            l2183 0C6C  
                                                            l2175 0C2A  
                                                            l2167 0BD4  
                                                            l2159 0B84  
                                                            l2095 095C  
                                                            l2087 092E  
                                                            l2079 08DA  
                                                            l1721 1082  
                                                            l1713 0FFA  
                                                            l1705 0F82  
                                                            l1801 186C  
                                                            l1289 1358  
                                                            l1385 1A14  
                                                            l2177 0C3C  
                                                            l2169 0BEC  
                                                            l2089 0936  
                                                            l2097 0976  
                                                            l1715 1020  
                                                            l1707 0F98  
                                                            l1731 1592  
                                                            l1803 1894  
                                                            l1811 0CBC  
                                                            l1395 1A40  
                                                            l1387 1A18  
                                                            l2179 0C52  
                                                            l2099 097C  
                                                            l1717 1046  
                                                            l1709 0FBE  
                                                            l1725 10A8  
                                                            l1741 15CE  
                                                            l1733 1596  
                                                            l1901 1914  
                                                            l1821 0D5A  
                                                            l1813 0CE2  
                                                            l1805 0C7C  
                                                            l1389 1A32  
                                                            l1719 105C  
                                                            l1735 15A4  
                                                            l1751 140E  
                                                            l1903 192E  
                                                            l1831 0E08  
                                                            l1823 0D80  
                                                            l1815 0CF8  
                                                            l1807 0C80  
                                                            l1911 17BE  
                                                            l1737 15B2  
                                                            l1745 15DC  
                                                            l1761 1470  
                                                            l1753 142A  
                                                            l1905 1930  
                                                            l1833 0E1E  
                                                            l1825 0DA6  
                                                            l1817 0D1E  
                                                            l1809 0C96  
                                                            l1913 1B2C  
                                                            l1921 1AA8  
                                                            l1691 0EBA  
                                                            l1739 15C0  
                                                            l1771 14D0  
                                                            l1763 147A  
                                                            l1755 1434  
                                                            l1931 1A82  
                                                            l1835 0E44  
                                                            l1827 0DBC  
                                                            l1819 0D44  
                                                            l1907 162A  
                                                            l1923 1B6A  
                                                            l1915 1A92  
                                                            l1693 0EBE  
                                                            l1781 1532  
                                                            l1773 14EC  
                                                            l1765 1492  
                                                            l1757 144C  
                                                            l1829 0DE2  
                                                            l1853 1136  
                                                            l1845 10F8  
                                                            l1917 1B16  
                                                            l1909 18A4  
                                                            l1941 1794  
                                                            l1933 1744  
                                                            l1951 1226  
                                                            l1695 0ED4  
                                                            l1783 153C  
                                                            l1775 14F6  
                                                            l1927 1B7A  
                                                            l1767 14A6  
                                                            l1759 1458  
                                                            l1791 1836  
                                                            l1839 0E6A  
                                                            l1871 11A8  
                                                            l1847 1110  
                                                            l1919 1AD4  
                                                            l1935 1748  
                                                            l1953 124C  
                                                            l1697 0EFA  
                                                            l1785 1554  
                                                            l1777 150E  
                                                            l1769 14BE  
                                                            l1793 1848  
                                                            l1929 1A78  
                                                            l1881 1214  
                                                            l1865 1182  
                                                            l1945 1AEA  
                                                            l1937 174E  
                                                            l1955 1272  
                                                            l1963 12E4  
                                                            l1699 0F20  
                                                            l1787 1568  
                                                            l1779 151A  
                                                            l1795 1854  
                                                            l1859 115C  
                                                            l1947 1B00  
                                                            l1971 1B58  
                                                            l1939 177C  
                                                            l1957 1298  
                                                            l1949 1222  
                                                            l1789 1580  
                                                            l1797 1860  
                                                            l1893 16F6  
                                                            l1981 067E  
                                                            l1959 12BE  
                                                            l1879 11CE  
                                                            l1975 1ABE  
                                                            l1991 069A  
                                                            l1983 068A  
                                                            l1889 16C0  
                                                            l1977 199E  
                                                            l1969 1960  
                                                            l1993 069E  
                                                            l1985 068E  
                                                            l1899 190C  
                                                            l1995 06A2  
                                                            l1987 0692  
                                                            l1979 0668  
                                                            l1997 06A6  
                                                            l1989 0696  
                                                            l1999 06B0  
                                                            STR_1 061E  
                                                            STR_2 0661  
                                                            STR_3 0658  
                                                            STR_4 0611  
                                                            STR_5 064E  
                                                            STR_6 062A  
                                                            STR_7 0636  
                                                            STR_8 0601  
                                                            STR_9 0642  
                                                            u1010 0CF6  
                                                            u1011 0CF0  
                                                            u1100 0E1C  
                                                            u1004 0CD2  
                                                            u1101 0E16  
                                                            u1005 0CCC  
                                                            u1040 0D58  
                                                            u1024 0D0C  
                                                            u1200 1794  
                                                            u1041 0D52  
                                                            u1025 0D06  
                                                            u1201 178E  
                                                            u1114 0E32  
                                                            u1034 0D34  
                                                            u1115 0E2C  
                                                            u1035 0D2E  
                                                            u1124 0E5A  
                                                            u1300 0790  
                                                            u1125 0E54  
                                                            u1301 078A  
                                                            u1214 123C  
                                                            u1070 0DBA  
                                                            u1054 0D6E  
                                                            u1134 1126  
                                                            u1310 07B8  
                                                            u1215 1236  
                                                            u1071 0DB4  
                                                            u1055 0D68  
                                                            u1135 1120  
                                                            u1311 07B2  
                                                            u1224 1262  
                                                            u1064 0D96  
                                                            u1144 114C  
                                                            u1400 08FA  
                                                            u1320 07CC  
                                                            u1225 125C  
                                                            u1065 0D90  
                                                            u1145 1146  
                                                            u1401 08F4  
                                                            u1321 07C6  
                                                            u1234 1288  
                                                            u1154 1172  
                                                            u1410 090E  
                                                            u1330 07FA  
                                                            u1235 1282  
                                                            u1155 116C  
                                                            u1411 0908  
                                                            u1331 07F4  
                                                            u1244 12AE  
                                                            u1180 1958  
                                                            u1084 0DD0  
                                                            u1164 1198  
                                                            u1500 0AB0  
                                                            u1420 092C  
                                                            u1340 0826  
                                                            u1245 12A8  
                                                            u1181 1952  
                                                            u1085 0DCA  
                                                            u1165 1192  
                                                            u1501 0AAA  
                                                            u1421 0926  
                                                            u1341 0820  
                                                            u1261 0684  
                                                            u1254 12D4  
                                                            u1094 0DF8  
                                                            u1174 11BE  
                                                            u1190 177A  
                                                            u1510 0AE6  
                                                            u1430 099C  
                                                            u1350 0848  
                                                            u1270 0718  
                                                            u1255 12CE  
                                                            u1095 0DF2  
                                                            u1175 11B8  
                                                            u1191 1774  
                                                            u1511 0AE0  
                                                            u1431 0996  
                                                            u1351 0842  
                                                            u1271 0712  
                                                            u1600 0C28  
                                                            u1520 0AFA  
                                                            u1440 09B0  
                                                            u1360 0862  
                                                            u1280 072C  
                                                            u1601 0C22  
                                                            u1521 0AF4  
                                                            u1441 09AA  
                                                            u1361 085C  
                                                            u1281 0726  
                                                            u1610 0C50  
                                                            u1530 0B34  
                                                            u1450 09C4  
                                                            u1370 087C  
                                                            u1290 075A  
                                                            u1611 0C4A  
                                                            u1531 0B2E  
                                                            u1451 09BE  
                                                            u1371 0876  
                                                            u1291 0754  
                                                            u1540 0B54  
                                                            u1460 09F4  
                                                            u1380 0890  
                                                            u1541 0B4E  
                                                            u1461 09EE  
                                                            u1381 088A  
                                                            u1550 0B68  
                                                            u1470 0A30  
                                                            u1390 08A6  
                                                            u1551 0B62  
                                                            u1471 0A2A  
                                                            u1391 08A0  
                                                            u1560 0BBE  
                                                            u1480 0A6E  
                                                            u1561 0BB8  
                                                            u1481 0A68  
                                                            u1570 0BD2  
                                                            u1490 0A82  
                                                            u1707 14EE  
                                                            u1571 0BCC  
                                                            u1491 0A7C  
                                                            u1627 0966  
                                                            u1580 0C00  
                                                            u1717 1506  
                                                            u1637 142C  
                                                            u1581 0BFA  
                                                            u1590 0C14  
                                                            u1727 151C  
                                                            u1647 1444  
                                                            u1591 0C0E  
                                                            u1737 1534  
                                                            u1657 145A  
                                                            u1747 154C  
                                                            u1667 1472  
                                                            u1757 156A  
                                                            u1677 148A  
                                                            u1767 1582  
                                                            u1687 14A8  
                                                            u1697 14C0  
                                                            i2l76 003C  
                                                            _main 0668  
                                                            fsr2h 0FDA  
                                                            indf2 0FDF  
                                                            fsr2l 0FD9  
                                                            btemp 002E  
                                                     led_on@pinNo 0006  
                                                     led_off@port 0007  
                                                            start 0044  
                                        DIO_SetPortValue@portName 0004  
                                                    ___param_bank 0000  
                                                 ??_DIO_TogglePin 0002  
                                                __end_of_LCD_init 16BC  
                                                           ?_main 0001  
                                                           _T0CON 0FD5  
                                                           _TMR0H 0FD7  
                                                           _TMR0L 0FD6  
                                                           _PORTA 0F80  
                                                           _PORTB 0F81  
                                                           _PORTC 0F82  
                                                           _PORTD 0F83  
                                                           _PORTE 0F84  
                                                           _TRISA 0F92  
                                                           _TRISB 0F93  
                                                           _TRISC 0F94  
                                                           _TRISD 0F95  
                                                           _TRISE 0F96  
                                                    ?_button_init 0006  
                                                    main@passCode 0010  
                                              LCD_displayString@i 000A  
                                                 __end_of_led_off 1AD0  
                                                    ?_keypad_init 0001  
                                                    ?_keypad_read 0001  
                                                    led_off@pinNo 0006  
                                                           tablat 0FF5  
                                                           ttemp5 002F  
                                                           ttemp6 0032  
                                                           ttemp7 0036  
                                                           status 0FD8  
                                                           wtemp8 002F  
                                        __end_of_keypad_line_scan 1A74  
                                                    led_init@port 0007  
                                                    ?_buzzer_init 0006  
                                                 __initialization 19DA  
                                               ??_LCD_clearScreen 0008  
                                                    __end_of_main 0C78  
                                             button_getState@port 0007  
                                                   buzzer_on@port 0007  
                                                          ??_main 000E  
                                                   __activetblptr 0002  
                                     DIO_SetPinDirection@portName 0005  
                                                          _ADCON1 0FC1  
                                        LCD_goToRowColumn@Address 000A  
                                                          i2l1451 0028  
                                                          i2l1453 002C  
                                                          i2l1445 000C  
                                                          i2l1455 0030  
                                                          i2l1447 001E  
                                                          i2l1457 0034  
                                                          i2l1449 0020  
                                                          i2l1459 0038  
                                                          _TMR0IE 7F95  
                                                          _TMR0IF 7F92  
                                              main@keypad_reading 001C  
                                                      _Timer0_ISR 0008  
                                        __end_of_DIO_SetPortValue 1742  
                                                   main@buzzerSet 0015  
                                                   ??_Timer0_init 0001  
                                                __end_of_led_init 1AE6  
                                                buzzer_init@pinNo 0006  
                                                          _led_on 1AA4  
                                                   ?_keypad_value 0001  
                                                          clear_0 19FE  
                                                          isa$std 0001  
                                                          _strcmp 1742  
                                                       ??_led_off 0007  
                                               ??_DIO_SetPinValue 0003  
                                                __end_of_pir_init 1AA4  
                                                    __pdataCOMRAM 002B  
                                                __end_of_motor_on 199C  
                                                    __mediumconst 0000  
                                                          tblptrh 0FF7  
                                                          tblptrl 0FF6  
                                                          tblptru 0FF8  
                                                   led_init@pinNo 0006  
                                                      __accesstop 0080  
                                         __end_of__initialization 1A04  
                                                       ?_LCD_init 0001  
                                                   ___rparam_used 0001  
                                                 _DIO_GetPinValue 10F4  
                                                  __pcstackCOMRAM 0001  
                                                  ??_keypad_value 0001  
                                                 _button_getState 1B66  
                                             __end_of_Timer0_init 1B54  
                                            button_getState@pinNo 0006  
                                                  buzzer_on@pinNo 0006  
                                                  buzzer_off@port 0007  
                                                button_init@pinNo 0006  
                                                      ??_LCD_init 0008  
                                      keypad_line_scan@keypadScan 002D  
                                                     ?_Timer0_ISR 0001  
                                                   ?_pir_getState 0006  
                                                         ?_led_on 0006  
                                              main@emergencyState 0019  
                                                         ?_strcmp 0001  
                                               ??_LCD_sendCommand 0006  
                                                         i2u46_40 001C  
                                                         i2u46_41 0016  
                                                       ?_led_init 0006  
                                                 _LCD_clearScreen 1B78  
                                         __end_of_DIO_GetPinValue 121E  
                                             keypad_read@keyValue 0003  
                                               ?_keypad_line_scan 0001  
                                         __end_of_button_getState 1B78  
                                            LCD_displayString@Str 0008  
                                                         __Hparam 0000  
                                                       ?_pir_init 0006  
                                                         __Lparam 0000  
                                              ??_keypad_line_scan 0001  
                                                  ??_pir_getState 0007  
                                                     _Timer0_init 1B3E  
                                                       ?_motor_on 0001  
                                          LCD_sendCommand@command 0007  
                                                    __psmallconst 0600  
                                                         __pcinit 19DA  
                                                         __ramtop 0600  
                                             _DIO_SetPinDirection 0C78  
                                                         __ptext0 0668  
                                                         __ptext1 1742  
                                                         __ptext2 1A8E  
                                                         __ptext3 1B54  
                                                         __ptext4 195E  
                                                         __ptext5 199C  
                                                         __ptext6 17BC  
                                                         __ptext7 1AA4  
                                                         __ptext8 1ABA  
                                                         __ptext9 1AD0  
                                           __end_of_DIO_TogglePin 1330  
                                                         _led_off 1ABA  
                                                      _buzzer_off 1AFC  
                               DIO_SetUpperHalfPortValue@portName 0004  
                                               __end_of_buzzer_on 1AFC  
                                             _activatedStateTimer 0027  
                                                      ??_led_init 0007  
                                            end_of_initialization 1A04  
                                            __end_of_keypad_value 140A  
                                            ?_DIO_SetPinDirection 0001  
                                                   __Lmediumconst 0000  
                                               __end_of_motor_off 19DA  
                                                  _sysButtonTimer 0029  
                                            DIO_GetPinValue@flush 0005  
                                            DIO_GetPinValue@pinNo 0001  
                                            DIO_SetPinValue@pinNo 0001  
                                                      ??_pir_init 0007  
                                            DIO_SetPinValue@value 0002  
                                               ?_DIO_SetPortValue 0001  
                                                 _DIO_SetPinValue 0EB6  
                                                      ??_motor_on 0006  
                                                         postinc0 0FEE  
                                                         postinc2 0FDE  
                                              ??_DIO_SetPortValue 0002  
                                                      _motor_init 17BC  
                                    ??_LCD_displayStringRowColumn 000D  
                                                         strcmp@l 0001  
                                                         strcmp@r 0002  
                                                main@last_reading 0016  
                                         __end_of_LCD_clearScreen 1B84  
                                           ??_DIO_SetPinDirection 0003  
                                                ?_DIO_GetPinValue 0001  
                                   LCD_displayStringRowColumn@Str 000C  
                                   LCD_displayStringRowColumn@col 000B  
                                   LCD_displayStringRowColumn@row 000D  
                                                ?_button_getState 0006  
                                                      led_on@port 0007  
                                                   pir_init@pinNo 0006  
                                                   __pidataCOMRAM 1B84  
                                                  __end_of_led_on 1ABA  
                                                  __end_of_strcmp 17BC  
                                             start_initialization 19DA  
                                                     ?_buzzer_off 0006  
                                            __end_of_pir_getState 1B66  
                                      ?_DIO_SetUpperHalfPortValue 0001  
                                         __end_of_DIO_SetPinValue 10F4  
                                              DIO_TogglePin@pinNo 0001  
                                                 buzzer_off@pinNo 0006  
                                                main@inputCounter 001B  
                                                    ??_Timer0_ISR 0001  
                                                 _LCD_sendCommand 14CC  
                                                 buzzer_init@port 0007  
                                                     ?_motor_init 0001  
                                                        ??_led_on 0007  
                                                        ??_strcmp 0003  
                                                   ??_button_init 0007  
                                                     __pbssCOMRAM 001E  
                                                ?_LCD_clearScreen 0001  
                                    __end_of_LCD_displayCharacter 14CC  
                                                   ??_keypad_init 0006  
                                                   ??_keypad_read 0002  
                                              __end_of_Timer0_ISR 0044  
                                               _LCD_goToRowColumn 1832  
                               __end_of_DIO_SetUpperHalfPortValue 1628  
                                              ?_LCD_goToRowColumn 0008  
                                                 button_init@port 0007  
                                                   ??_buzzer_init 0007  
                                                    ?_Timer0_init 0001  
                                             ??_LCD_goToRowColumn 0009  
                                                       __pintcode 0008  
                              __end_of_LCD_displayStringRowColumn 1A8E  
                                      _LCD_displayStringRowColumn 1A74  
                                                    _keypad_value 1330  
                                               main@rstFirstPress 0017  
                                                        ?_led_off 0006  
                                                     __smallconst 0600  
                                       __end_of_LCD_goToRowColumn 18A2  
                                         DIO_GetPinValue@portName 0004  
                                           DIO_TogglePin@portName 0004  
                                         DIO_SetPinValue@portName 0005  
                                             __end_of_button_init 1B3E  
                                                       _buzzer_on 1AE6  
                                                ?_DIO_SetPinValue 0001  
                                         __end_of_LCD_sendCommand 158E  
                                             __end_of_keypad_init 190A  
                                             __end_of_keypad_read 1A4A  
                                                        _LCD_init 1628  
                                           keypad_value@portValue 0001  
                                                       main@F2450 001E  
                                                       _motor_off 199C  
                                             __end_of_buzzer_init 1B28  
                                           DIO_SetPortValue@value 0001  
                                                    pir_init@port 0007  
                                                 main@passCodeReq 001D  
                                                      ?_buzzer_on 0006  
                                                        __Hrparam 0000  
                                                        __Lrparam 0000  
                                                      ?_motor_off 0001  
                                                    _pir_getState 1B54  
                                            _LCD_displayCharacter 140A  
                                                    ??_buzzer_off 0007  
                                                     _button_init 1B28  
                                     __end_of_DIO_SetPinDirection 0EB6  
                                                        __ptext10 1A12  
                                                        __ptext11 1330  
                                                        __ptext20 1B3E  
                                                        __ptext12 1A4A  
                                                        __ptext21 1628  
                                                        __ptext13 18A2  
                                                        __ptext30 158E  
                                                        __ptext22 16BC  
                                                        __ptext14 1AE6  
                                                        __ptext31 0EB6  
                                                        __ptext23 0C78  
                                                        __ptext15 1AFC  
                                                        __ptext32 121E  
                                                        __ptext24 1A74  
                                                        __ptext16 1B12  
                                                        __ptext25 1832  
                                                        __ptext17 1B28  
                                                        __ptext26 190A  
                                                        __ptext18 1B66  
                                                        __ptext27 140A  
                                                        __ptext19 10F4  
                                                        __ptext28 1B78  
                                                        __ptext29 14CC  
                                                     _keypad_init 18A2  
                                                     _keypad_read 1A12  
                                                        _led_init 1AD0  
                                     ??_DIO_SetUpperHalfPortValue 0002  
                                        DIO_SetPinDirection@pinNo 0001  
                                                ?_LCD_sendCommand 0001  
                                    DIO_SetPinDirection@direction 0002  
                                                     _buzzer_init 1B12  
                                               pir_getState@pinNo 0006  
                                                        _pir_init 1A8E  
                                               _LCD_displayString 190A  
                                                        _motor_on 195E  
                                           ?_LCD_displayCharacter 0001  
                                                        isa$xinst 0000  
                                              __end_of_buzzer_off 1B12  
                                              ?_LCD_displayString 0008  
                                                        int$flags 002E  
                                                    ??_motor_init 0006  
                                                        main@mode 001A  
                                                _keypad_line_scan 1A4A  
                                                  _emergencyTimer 0025  
                                             ??_LCD_displayString 0009  
                                            LCD_goToRowColumn@col 0008  
                                            LCD_goToRowColumn@row 0009  
                                                   _DIO_TogglePin 121E  
                                        LCD_displayCharacter@data 0007  
                                                        intlevel2 1B88  
                                  DIO_SetUpperHalfPortValue@value 0001  
                                                     ??_buzzer_on 0007  
                                              __end_of_motor_init 1832  
                                       __end_of_LCD_displayString 195E  
                                                pir_getState@port 0007  
                                               main@sysFirstPress 0018  
                                                     ??_motor_off 0006  
                                     ?_LCD_displayStringRowColumn 000B  
                                       _DIO_SetUpperHalfPortValue 158E  
                                                  _rstButtonTimer 0023  
                                                  ?_DIO_TogglePin 0001  
                                                _DIO_SetPortValue 16BC  
                                          ??_LCD_displayCharacter 0006  
