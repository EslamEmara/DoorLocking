

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Apr 16 17:51:43 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    48   000000                     
    49                           ; Generated 17/10/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F452 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     
    84                           	psect	idataCOMRAM
    85   001B3C                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for _GateCloseTimer
    89   001B3C  0014               	dw	20
    90                           
    91                           ;initializer for keypad_line_scan@keypadScan
    92   001B3E  01                 	db	1
    93   000000                     _GIE	set	32663
    94   000000                     _TMR0IE	set	32661
    95   000000                     _PORTE	set	3972
    96   000000                     _PORTD	set	3971
    97   000000                     _PORTC	set	3970
    98   000000                     _PORTB	set	3969
    99   000000                     _PORTA	set	3968
   100   000000                     _TRISA	set	3986
   101   000000                     _ADCON1	set	4033
   102   000000                     _T0CON	set	4053
   103   000000                     _TMR0L	set	4054
   104   000000                     _TMR0H	set	4055
   105   000000                     _TMR0IF	set	32658
   106   000000                     _TRISE	set	3990
   107   000000                     _TRISD	set	3989
   108   000000                     _TRISC	set	3988
   109   000000                     _TRISB	set	3987
   110                           
   111                           	psect	smallconst
   112   000600                     __psmallconst:
   113                           	callstack 0
   114   000600  00                 	db	0
   115   000601                     STR_8:
   116   000601  4E                 	db	78	;'N'
   117   000602  4F                 	db	79	;'O'
   118   000603  20                 	db	32
   119   000604  45                 	db	69	;'E'
   120   000605  52                 	db	82	;'R'
   121   000606  3A                 	db	58	;':'
   122   000607  20                 	db	32
   123   000608  44                 	db	68	;'D'
   124   000609  45                 	db	69	;'E'
   125   00060A  41                 	db	65	;'A'
   126   00060B  43                 	db	67	;'C'
   127   00060C  54                 	db	84	;'T'
   128   00060D  49                 	db	73	;'I'
   129   00060E  56                 	db	86	;'V'
   130   00060F  45                 	db	69	;'E'
   131   000610  00                 	db	0
   132   000611                     STR_4:
   133   000611  39                 	db	57	;'9'
   134   000612  39                 	db	57	;'9'
   135   000613  3A                 	db	58	;':'
   136   000614  47                 	db	71	;'G'
   137   000615  41                 	db	65	;'A'
   138   000616  54                 	db	84	;'T'
   139   000617  45                 	db	69	;'E'
   140   000618  20                 	db	32
   141   000619  4F                 	db	79	;'O'
   142   00061A  50                 	db	80	;'P'
   143   00061B  45                 	db	69	;'E'
   144   00061C  4E                 	db	78	;'N'
   145   00061D  00                 	db	0
   146   00061E                     STR_1:
   147   00061E  50                 	db	80	;'P'
   148   00061F  61                 	db	97	;'a'
   149   000620  73                 	db	115	;'s'
   150   000621  73                 	db	115	;'s'
   151   000622  20                 	db	32
   152   000623  63                 	db	99	;'c'
   153   000624  6F                 	db	111	;'o'
   154   000625  64                 	db	100	;'d'
   155   000626  65                 	db	101	;'e'
   156   000627  3A                 	db	58	;':'
   157   000628  20                 	db	32
   158   000629  00                 	db	0
   159   00062A                     STR_6:
   160   00062A  47                 	db	71	;'G'
   161   00062B  41                 	db	65	;'A'
   162   00062C  54                 	db	84	;'T'
   163   00062D  45                 	db	69	;'E'
   164   00062E  20                 	db	32
   165   00062F  4F                 	db	79	;'O'
   166   000630  50                 	db	80	;'P'
   167   000631  45                 	db	69	;'E'
   168   000632  4E                 	db	78	;'N'
   169   000633  45                 	db	69	;'E'
   170   000634  44                 	db	68	;'D'
   171   000635  00                 	db	0
   172   000636                     STR_7:
   173   000636  47                 	db	71	;'G'
   174   000637  41                 	db	65	;'A'
   175   000638  54                 	db	84	;'T'
   176   000639  45                 	db	69	;'E'
   177   00063A  20                 	db	32
   178   00063B  43                 	db	67	;'C'
   179   00063C  4C                 	db	76	;'L'
   180   00063D  4F                 	db	79	;'O'
   181   00063E  53                 	db	83	;'S'
   182   00063F  45                 	db	69	;'E'
   183   000640  44                 	db	68	;'D'
   184   000641  00                 	db	0
   185   000642                     STR_9:
   186   000642  44                 	db	68	;'D'
   187   000643  65                 	db	101	;'e'
   188   000644  61                 	db	97	;'a'
   189   000645  63                 	db	99	;'c'
   190   000646  74                 	db	116	;'t'
   191   000647  69                 	db	105	;'i'
   192   000648  76                 	db	118	;'v'
   193   000649  61                 	db	97	;'a'
   194   00064A  74                 	db	116	;'t'
   195   00064B  65                 	db	101	;'e'
   196   00064C  64                 	db	100	;'d'
   197   00064D  00                 	db	0
   198   00064E                     STR_5:
   199   00064E  41                 	db	65	;'A'
   200   00064F  63                 	db	99	;'c'
   201   000650  74                 	db	116	;'t'
   202   000651  69                 	db	105	;'i'
   203   000652  76                 	db	118	;'v'
   204   000653  61                 	db	97	;'a'
   205   000654  74                 	db	116	;'t'
   206   000655  65                 	db	101	;'e'
   207   000656  64                 	db	100	;'d'
   208   000657  00                 	db	0
   209   000658                     STR_3:
   210   000658  50                 	db	80	;'P'
   211   000659  41                 	db	65	;'A'
   212   00065A  53                 	db	83	;'S'
   213   00065B  53                 	db	83	;'S'
   214   00065C  20                 	db	32
   215   00065D  45                 	db	69	;'E'
   216   00065E  52                 	db	82	;'R'
   217   00065F  52                 	db	82	;'R'
   218   000660  00                 	db	0
   219   000661                     STR_2:
   220   000661  31                 	db	49	;'1'
   221   000662  32                 	db	50	;'2'
   222   000663  33                 	db	51	;'3'
   223   000664  34                 	db	52	;'4'
   224   000665  00                 	db	0
   225   000666  00                 	db	0	; dummy byte at the end
   226   000000                     
   227                           ; #config settings
   228                           
   229                           	psect	cinit
   230   001992                     __pcinit:
   231                           	callstack 0
   232   001992                     start_initialization:
   233                           	callstack 0
   234   001992                     __initialization:
   235                           	callstack 0
   236                           
   237                           ; Initialize objects allocated to COMRAM (3 bytes)
   238                           ; load TBLPTR registers with __pidataCOMRAM
   239   001992  0E3C               	movlw	low __pidataCOMRAM
   240   001994  6EF6               	movwf	tblptrl,c
   241   001996  0E1B               	movlw	high __pidataCOMRAM
   242   001998  6EF7               	movwf	tblptrh,c
   243   00199A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   244   00199C  6EF8               	movwf	tblptru,c
   245   00199E  0009               	tblrd		*+	;fetch initializer
   246   0019A0  CFF5 F027          	movff	tablat,__pdataCOMRAM
   247   0019A4  0009               	tblrd		*+	;fetch initializer
   248   0019A6  CFF5 F028          	movff	tablat,__pdataCOMRAM+1
   249   0019AA  0009               	tblrd		*+	;fetch initializer
   250   0019AC  CFF5 F029          	movff	tablat,__pdataCOMRAM+2
   251                           
   252                           ; Clear objects allocated to COMRAM (11 bytes)
   253   0019B0  EE00  F01C         	lfsr	0,__pbssCOMRAM
   254   0019B4  0E0B               	movlw	11
   255   0019B6                     clear_0:
   256   0019B6  6AEE               	clrf	postinc0,c
   257   0019B8  06E8               	decf	wreg,f,c
   258   0019BA  E1FD               	bnz	clear_0
   259   0019BC                     end_of_initialization:
   260                           	callstack 0
   261   0019BC                     __end_of__initialization:
   262                           	callstack 0
   263   0019BC  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   264   0019BE  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   265   0019C0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   266   0019C2  6EF8               	movwf	tblptru,c
   267   0019C4  0100               	movlb	0
   268   0019C6  EF34  F003         	goto	_main	;jump to C main() function
   269                           
   270                           	psect	bssCOMRAM
   271   00001C                     __pbssCOMRAM:
   272                           	callstack 0
   273   00001C                     	ds	5
   274   000021                     _emergencyTimer:
   275                           	callstack 0
   276   000021                     	ds	2
   277   000023                     _activatedStateTimer:
   278                           	callstack 0
   279   000023                     	ds	2
   280   000025                     _sysButtonTimer:
   281                           	callstack 0
   282   000025                     	ds	2
   283                           
   284                           	psect	dataCOMRAM
   285   000027                     __pdataCOMRAM:
   286                           	callstack 0
   287   000027                     _GateCloseTimer:
   288                           	callstack 0
   289   000027                     	ds	2
   290   000029                     keypad_line_scan@keypadScan:
   291                           	callstack 0
   292   000029                     	ds	1
   293                           
   294                           	psect	cstackCOMRAM
   295   000001                     __pcstackCOMRAM:
   296                           	callstack 0
   297   000001                     ?_strcmp:
   298                           	callstack 0
   299   000001                     DIO_SetPinDirection@pinNo:
   300                           	callstack 0
   301   000001                     DIO_SetPinValue@pinNo:
   302                           	callstack 0
   303   000001                     DIO_GetPinValue@pinNo:
   304                           	callstack 0
   305   000001                     DIO_SetPortValue@value:
   306                           	callstack 0
   307   000001                     DIO_SetUpperHalfPortValue@value:
   308                           	callstack 0
   309   000001                     DIO_TogglePin@pinNo:
   310                           	callstack 0
   311   000001                     keypad_value@portValue:
   312                           	callstack 0
   313   000001                     strcmp@l:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x0
   317   000001                     	ds	1
   318   000002                     ??_keypad_read:
   319   000002                     ??_DIO_TogglePin:
   320   000002                     ??_DIO_GetPinValue:
   321   000002                     ??_DIO_SetPortValue:
   322   000002                     ??_DIO_SetUpperHalfPortValue:
   323   000002                     DIO_SetPinDirection@direction:
   324                           	callstack 0
   325   000002                     DIO_SetPinValue@value:
   326                           	callstack 0
   327   000002                     strcmp@r:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x1
   331   000002                     	ds	1
   332   000003                     ??_strcmp:
   333   000003                     ??_DIO_SetPinDirection:
   334   000003                     ??_DIO_SetPinValue:
   335   000003                     keypad_read@keyValue:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x2
   339   000003                     	ds	1
   340   000004                     DIO_GetPinValue@portName:
   341                           	callstack 0
   342   000004                     DIO_SetPortValue@portName:
   343                           	callstack 0
   344   000004                     DIO_SetUpperHalfPortValue@portName:
   345                           	callstack 0
   346   000004                     DIO_TogglePin@portName:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x3
   350   000004                     	ds	1
   351   000005                     DIO_SetPinDirection@portName:
   352                           	callstack 0
   353   000005                     DIO_SetPinValue@portName:
   354                           	callstack 0
   355   000005                     DIO_GetPinValue@flush:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x4
   359   000005                     	ds	1
   360   000006                     ??_LCD_displayCharacter:
   361   000006                     ??_LCD_sendCommand:
   362   000006                     led_init@pinNo:
   363                           	callstack 0
   364   000006                     led_on@pinNo:
   365                           	callstack 0
   366   000006                     led_off@pinNo:
   367                           	callstack 0
   368   000006                     buzzer_init@pinNo:
   369                           	callstack 0
   370   000006                     buzzer_on@pinNo:
   371                           	callstack 0
   372   000006                     buzzer_off@pinNo:
   373                           	callstack 0
   374   000006                     button_init@pinNo:
   375                           	callstack 0
   376   000006                     button_getState@pinNo:
   377                           	callstack 0
   378   000006                     pir_init@pinNo:
   379                           	callstack 0
   380   000006                     pir_getState@pinNo:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x5
   384   000006                     	ds	1
   385   000007                     LCD_sendCommand@command:
   386                           	callstack 0
   387   000007                     LCD_displayCharacter@data:
   388                           	callstack 0
   389   000007                     led_init@port:
   390                           	callstack 0
   391   000007                     led_on@port:
   392                           	callstack 0
   393   000007                     led_off@port:
   394                           	callstack 0
   395   000007                     buzzer_init@port:
   396                           	callstack 0
   397   000007                     buzzer_on@port:
   398                           	callstack 0
   399   000007                     buzzer_off@port:
   400                           	callstack 0
   401   000007                     button_init@port:
   402                           	callstack 0
   403   000007                     button_getState@port:
   404                           	callstack 0
   405   000007                     pir_init@port:
   406                           	callstack 0
   407   000007                     pir_getState@port:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0x6
   411   000007                     	ds	1
   412   000008                     LCD_displayString@Str:
   413                           	callstack 0
   414   000008                     LCD_goToRowColumn@col:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x7
   418   000008                     	ds	1
   419   000009                     ??_LCD_displayString:
   420   000009                     LCD_goToRowColumn@row:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x8
   424   000009                     	ds	1
   425   00000A                     LCD_displayString@i:
   426                           	callstack 0
   427   00000A                     LCD_goToRowColumn@Address:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x9
   431   00000A                     	ds	1
   432   00000B                     LCD_displayStringRowColumn@col:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0xA
   436   00000B                     	ds	1
   437   00000C                     LCD_displayStringRowColumn@Str:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0xB
   441   00000C                     	ds	1
   442   00000D                     LCD_displayStringRowColumn@row:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0xC
   446   00000D                     	ds	1
   447   00000E                     ??_main:
   448                           
   449                           ; 1 bytes @ 0xD
   450   00000E                     	ds	2
   451   000010                     main@passCode:
   452                           	callstack 0
   453                           
   454                           ; 5 bytes @ 0xF
   455   000010                     	ds	5
   456   000015                     main@buzzerSet:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x14
   460   000015                     	ds	1
   461   000016                     main@last_reading:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x15
   465   000016                     	ds	1
   466   000017                     main@emergencyState:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x16
   470   000017                     	ds	1
   471   000018                     main@mode:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x17
   475   000018                     	ds	1
   476   000019                     main@inputCounter:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x18
   480   000019                     	ds	1
   481   00001A                     main@keypad_reading:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x19
   485   00001A                     	ds	1
   486   00001B                     main@passCodeReq:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x1A
   490   00001B                     	ds	1
   491                           
   492 ;;
   493 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   494 ;;
   495 ;; *************** function _main *****************
   496 ;; Defined at:
   497 ;;		line 55 in file "main.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;  passCode        5   15[COMRAM] unsigned char [5]
   502 ;;  passCodeReq     1   26[COMRAM] unsigned char 
   503 ;;  keypad_readi    1   25[COMRAM] unsigned char 
   504 ;;  inputCounter    1   24[COMRAM] unsigned char 
   505 ;;  mode            1   23[COMRAM] enum E2432
   506 ;;  emergencySta    1   22[COMRAM] unsigned char 
   507 ;;  last_reading    1   21[COMRAM] unsigned char 
   508 ;;  buzzerSet       1   20[COMRAM] unsigned char 
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   518 ;;      Params:         0       0       0       0       0       0       0
   519 ;;      Locals:        12       0       0       0       0       0       0
   520 ;;      Temps:          2       0       0       0       0       0       0
   521 ;;      Totals:        14       0       0       0       0       0       0
   522 ;;Total ram usage:       14 bytes
   523 ;; Hardware stack levels required when called: 5
   524 ;; This function calls:
   525 ;;		_DIO_TogglePin
   526 ;;		_LCD_clearScreen
   527 ;;		_LCD_displayCharacter
   528 ;;		_LCD_displayStringRowColumn
   529 ;;		_LCD_goToRowColumn
   530 ;;		_LCD_init
   531 ;;		_Timer0_init
   532 ;;		_button_getState
   533 ;;		_button_init
   534 ;;		_buzzer_init
   535 ;;		_buzzer_off
   536 ;;		_buzzer_on
   537 ;;		_keypad_init
   538 ;;		_keypad_read
   539 ;;		_led_init
   540 ;;		_led_off
   541 ;;		_led_on
   542 ;;		_motor_init
   543 ;;		_motor_off
   544 ;;		_motor_on
   545 ;;		_pir_getState
   546 ;;		_pir_init
   547 ;;		_strcmp
   548 ;; This function is called by:
   549 ;;		Startup code after reset
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text0
   554   000668                     __ptext0:
   555                           	callstack 0
   556   000668                     _main:
   557                           	callstack 26
   558   000668  FFFF               	dw	65535	; assembler added errata NOP
   559                           
   560                           ;main.c: 57:     uint8_t inputCounter = 0;
   561   00066A  0E00               	movlw	0
   562   00066C  6E19               	movwf	main@inputCounter^0,c
   563                           
   564                           ;main.c: 58:     uint8_t emergencyState = 0;
   565   00066E  0E00               	movlw	0
   566   000670  6E17               	movwf	main@emergencyState^0,c
   567                           
   568                           ;main.c: 59:     uint8_t buzzerSet = 0;
   569   000672  0E00               	movlw	0
   570   000674  6E15               	movwf	main@buzzerSet^0,c
   571   000676                     
   572                           ;main.c: 60:     char passCode[5] = {0};
   573   000676  EE20  F010         	lfsr	2,main@passCode
   574   00067A  0E04               	movlw	4
   575   00067C                     u1241:
   576   00067C  6ADE               	clrf	postinc2,c
   577   00067E  06E8               	decf	wreg,f,c
   578   000680  E2FD               	bc	u1241
   579   000682                     
   580                           ;main.c: 62:     uint8_t passCodeReq = 0;
   581   000682  0E00               	movlw	0
   582   000684  6E1B               	movwf	main@passCodeReq^0,c
   583   000686                     
   584                           ;main.c: 63:     Modes_t mode = ACTIVATED;
   585   000686  0E00               	movlw	0
   586   000688  6E18               	movwf	main@mode^0,c
   587   00068A                     
   588                           ;main.c: 65:     ADCON1 = 0x07;
   589   00068A  0E07               	movlw	7
   590   00068C  6EC1               	movwf	193,c	;volatile
   591   00068E                     
   592                           ;main.c: 66:     Timer0_init();
   593   00068E  EC7B  F00D         	call	_Timer0_init	;wreg free
   594   000692                     
   595                           ;main.c: 69:     LCD_init();
   596   000692  ECF0  F00A         	call	_LCD_init	;wreg free
   597   000696                     
   598                           ;main.c: 70:     keypad_init();
   599   000696  EC2D  F00C         	call	_keypad_init	;wreg free
   600   00069A                     
   601                           ;main.c: 71:     motor_init();
   602   00069A  ECBA  F00B         	call	_motor_init	;wreg free
   603   00069E                     
   604                           ;main.c: 72:     button_init(PORT_A,4);
   605   00069E  0E04               	movlw	4
   606   0006A0  6E06               	movwf	button_init@pinNo^0,c
   607   0006A2  0E00               	movlw	0
   608   0006A4  EC70  F00D         	call	_button_init
   609   0006A8                     
   610                           ;main.c: 73:     button_init(PORT_A,3);
   611   0006A8  0E03               	movlw	3
   612   0006AA  6E06               	movwf	button_init@pinNo^0,c
   613   0006AC  0E00               	movlw	0
   614   0006AE  EC70  F00D         	call	_button_init
   615   0006B2                     
   616                           ;main.c: 74:     button_init(PORT_A,5);
   617   0006B2  0E05               	movlw	5
   618   0006B4  6E06               	movwf	button_init@pinNo^0,c
   619   0006B6  0E00               	movlw	0
   620   0006B8  EC70  F00D         	call	_button_init
   621   0006BC                     
   622                           ;main.c: 75:     pir_init(PORT_A,2);
   623   0006BC  0E02               	movlw	2
   624   0006BE  6E06               	movwf	pir_init@pinNo^0,c
   625   0006C0  0E00               	movlw	0
   626   0006C2  EC23  F00D         	call	_pir_init
   627   0006C6                     
   628                           ;main.c: 76:     buzzer_init(PORT_A,0);
   629   0006C6  0E00               	movlw	0
   630   0006C8  6E06               	movwf	buzzer_init@pinNo^0,c
   631   0006CA  0E00               	movlw	0
   632   0006CC  EC65  F00D         	call	_buzzer_init
   633   0006D0                     
   634                           ;main.c: 77:     led_init(PORT_B,4);
   635   0006D0  0E04               	movlw	4
   636   0006D2  6E06               	movwf	led_init@pinNo^0,c
   637   0006D4  0E01               	movlw	1
   638   0006D6  EC44  F00D         	call	_led_init
   639   0006DA                     
   640                           ;main.c: 78:     led_init(PORT_B,5);
   641   0006DA  0E05               	movlw	5
   642   0006DC  6E06               	movwf	led_init@pinNo^0,c
   643   0006DE  0E01               	movlw	1
   644   0006E0  EC44  F00D         	call	_led_init
   645   0006E4                     
   646                           ;main.c: 79:     led_on(PORT_B,4);
   647   0006E4  0E04               	movlw	4
   648   0006E6  6E06               	movwf	led_on@pinNo^0,c
   649   0006E8  0E01               	movlw	1
   650   0006EA  EC2E  F00D         	call	_led_on
   651   0006EE                     
   652                           ;main.c: 81:     uint8_t last_reading = 0;
   653   0006EE  0E00               	movlw	0
   654   0006F0  6E16               	movwf	main@last_reading^0,c
   655   0006F2                     l1995:
   656   0006F2  FFFF               	dw	65535	; assembler added errata NOP
   657                           
   658                           ;main.c: 83:         if(button_getState(PORT_A,3)== HIGH){
   659   0006F4  0E03               	movlw	3
   660   0006F6  6E06               	movwf	button_getState@pinNo^0,c
   661   0006F8  0E00               	movlw	0
   662   0006FA  EC8F  F00D         	call	_button_getState
   663   0006FE  06E8               	decf	wreg,f,c
   664   000700  A4D8               	btfss	status,2,c
   665   000702  EF85  F003         	goto	u1251
   666   000706  EF88  F003         	goto	u1250
   667   00070A                     u1251:
   668   00070A  FFFF               	dw	65535	; assembler added errata NOP
   669   00070C  EFB9  F003         	goto	l2007
   670   000710                     u1250:
   671   000710  FFFF               	dw	65535	; assembler added errata NOP
   672   000712                     
   673                           ;main.c: 84:             sysButtonTimer = 0;
   674   000712  0E00               	movlw	0
   675   000714  6E26               	movwf	(_sysButtonTimer+1)^0,c
   676   000716  0E00               	movlw	0
   677   000718  6E25               	movwf	_sysButtonTimer^0,c
   678                           
   679                           ;main.c: 85:             while(button_getState(PORT_A,3)== HIGH){
   680   00071A  EFAA  F003         	goto	l2005
   681   00071E                     l1999:
   682   00071E  FFFF               	dw	65535	; assembler added errata NOP
   683                           
   684                           ;main.c: 86:                 if(sysButtonTimer >=3){
   685   000720  BE26               	btfsc	(_sysButtonTimer+1)^0,7,c
   686   000722  EF9C  F003         	goto	u1261
   687   000726  5026               	movf	(_sysButtonTimer+1)^0,w,c
   688   000728  E10A               	bnz	u1260
   689   00072A  0E03               	movlw	3
   690   00072C  5C25               	subwf	_sysButtonTimer^0,w,c
   691   00072E  A0D8               	btfss	status,0,c
   692   000730  EF9C  F003         	goto	u1261
   693   000734  EF9F  F003         	goto	u1260
   694   000738                     u1261:
   695   000738  FFFF               	dw	65535	; assembler added errata NOP
   696   00073A  EFAA  F003         	goto	l2005
   697   00073E                     u1260:
   698   00073E  FFFF               	dw	65535	; assembler added errata NOP
   699   000740                     
   700                           ;main.c: 87:                     passCodeReq = 1;
   701   000740  0E01               	movlw	1
   702   000742  6E1B               	movwf	main@passCodeReq^0,c
   703                           
   704                           ;main.c: 88:                     passCode[0] = '\0';
   705   000744  0E00               	movlw	0
   706   000746  6E10               	movwf	main@passCode^0,c
   707                           
   708                           ;main.c: 89:                     inputCounter = 0;
   709   000748  0E00               	movlw	0
   710   00074A  6E19               	movwf	main@inputCounter^0,c
   711   00074C                     
   712                           ;main.c: 90:                     LCD_clearScreen();
   713   00074C  EC98  F00D         	call	_LCD_clearScreen	;wreg free
   714                           
   715                           ;main.c: 91:                     break;
   716   000750  EFB9  F003         	goto	l2007
   717   000754                     l2005:
   718   000754  FFFF               	dw	65535	; assembler added errata NOP
   719                           
   720                           ;main.c: 85:             while(button_getState(PORT_A,3)== HIGH){
   721   000756  0E03               	movlw	3
   722   000758  6E06               	movwf	button_getState@pinNo^0,c
   723   00075A  0E00               	movlw	0
   724   00075C  EC8F  F00D         	call	_button_getState
   725   000760  06E8               	decf	wreg,f,c
   726   000762  B4D8               	btfsc	status,2,c
   727   000764  EFB6  F003         	goto	u1271
   728   000768  EFB9  F003         	goto	u1270
   729   00076C                     u1271:
   730   00076C  FFFF               	dw	65535	; assembler added errata NOP
   731   00076E  EF8F  F003         	goto	l1999
   732   000772                     u1270:
   733   000772                     l2007:
   734   000772  FFFF               	dw	65535	; assembler added errata NOP
   735                           
   736                           ;main.c: 96:          if(button_getState(PORT_A,5)== HIGH){
   737   000774  0E05               	movlw	5
   738   000776  6E06               	movwf	button_getState@pinNo^0,c
   739   000778  0E00               	movlw	0
   740   00077A  EC8F  F00D         	call	_button_getState
   741   00077E  06E8               	decf	wreg,f,c
   742   000780  A4D8               	btfss	status,2,c
   743   000782  EFC5  F003         	goto	u1281
   744   000786  EFC8  F003         	goto	u1280
   745   00078A                     u1281:
   746   00078A  FFFF               	dw	65535	; assembler added errata NOP
   747   00078C  EFCD  F003         	goto	l2011
   748   000790                     u1280:
   749   000790  FFFF               	dw	65535	; assembler added errata NOP
   750   000792                     
   751                           ;main.c: 98:              emergencyState = 1;
   752   000792  0E01               	movlw	1
   753   000794  6E17               	movwf	main@emergencyState^0,c
   754                           
   755                           ;main.c: 99:              passCodeReq=0;
   756   000796  0E00               	movlw	0
   757   000798  6E1B               	movwf	main@passCodeReq^0,c
   758   00079A                     l2011:
   759   00079A  FFFF               	dw	65535	; assembler added errata NOP
   760                           
   761                           ;main.c: 102:          if(button_getState(PORT_A,4)== HIGH){
   762   00079C  0E04               	movlw	4
   763   00079E  6E06               	movwf	button_getState@pinNo^0,c
   764   0007A0  0E00               	movlw	0
   765   0007A2  EC8F  F00D         	call	_button_getState
   766   0007A6  06E8               	decf	wreg,f,c
   767   0007A8  A4D8               	btfss	status,2,c
   768   0007AA  EFD9  F003         	goto	u1291
   769   0007AE  EFDC  F003         	goto	u1290
   770   0007B2                     u1291:
   771   0007B2  FFFF               	dw	65535	; assembler added errata NOP
   772   0007B4  EFE5  F003         	goto	l2017
   773   0007B8                     u1290:
   774   0007B8  FFFF               	dw	65535	; assembler added errata NOP
   775   0007BA                     
   776                           ;main.c: 103:                     passCodeReq = 1;
   777   0007BA  0E01               	movlw	1
   778   0007BC  6E1B               	movwf	main@passCodeReq^0,c
   779                           
   780                           ;main.c: 104:                     passCode[0] = '\0';
   781   0007BE  0E00               	movlw	0
   782   0007C0  6E10               	movwf	main@passCode^0,c
   783                           
   784                           ;main.c: 105:                     inputCounter = 0;
   785   0007C2  0E00               	movlw	0
   786   0007C4  6E19               	movwf	main@inputCounter^0,c
   787   0007C6                     
   788                           ;main.c: 106:                     LCD_clearScreen();
   789   0007C6  EC98  F00D         	call	_LCD_clearScreen	;wreg free
   790   0007CA                     l2017:
   791   0007CA  FFFF               	dw	65535	; assembler added errata NOP
   792                           
   793                           ;main.c: 109:         if(passCodeReq == 1){
   794   0007CC  041B               	decf	main@passCodeReq^0,w,c
   795   0007CE  A4D8               	btfss	status,2,c
   796   0007D0  EFEC  F003         	goto	u1301
   797   0007D4  EFEF  F003         	goto	u1300
   798   0007D8                     u1301:
   799   0007D8  FFFF               	dw	65535	; assembler added errata NOP
   800   0007DA  EFA0  F004         	goto	l2071
   801   0007DE                     u1300:
   802   0007DE  FFFF               	dw	65535	; assembler added errata NOP
   803   0007E0                     
   804                           ;main.c: 110:             LCD_displayStringRowColumn(0,0,"Pass code: ");
   805   0007E0  0E00               	movlw	0
   806   0007E2  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
   807   0007E4  0E1E               	movlw	low STR_1
   808   0007E6  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
   809   0007E8  0E00               	movlw	0
   810   0007EA  EC16  F00D         	call	_LCD_displayStringRowColumn
   811   0007EE                     
   812                           ;main.c: 111:             if(inputCounter<4){
   813   0007EE  0E04               	movlw	4
   814   0007F0  6019               	cpfslt	main@inputCounter^0,c
   815   0007F2  EFFD  F003         	goto	u1311
   816   0007F6  EF00  F004         	goto	u1310
   817   0007FA                     u1311:
   818   0007FA  FFFF               	dw	65535	; assembler added errata NOP
   819   0007FC  EF43  F004         	goto	l2043
   820   000800                     u1310:
   821   000800  FFFF               	dw	65535	; assembler added errata NOP
   822   000802                     
   823                           ;main.c: 112:                 keypad_reading=keypad_read();
   824   000802  ECE5  F00C         	call	_keypad_read	;wreg free
   825   000806  6E1A               	movwf	main@keypad_reading^0,c
   826   000808                     
   827                           ;main.c: 113:                 if(keypad_reading == 0) last_reading = 0;
   828   000808  501A               	movf	main@keypad_reading^0,w,c
   829   00080A  A4D8               	btfss	status,2,c
   830   00080C  EF0A  F004         	goto	u1321
   831   000810  EF0D  F004         	goto	u1320
   832   000814                     u1321:
   833   000814  FFFF               	dw	65535	; assembler added errata NOP
   834   000816  EF10  F004         	goto	l2029
   835   00081A                     u1320:
   836   00081A  FFFF               	dw	65535	; assembler added errata NOP
   837   00081C  0E00               	movlw	0
   838   00081E  6E16               	movwf	main@last_reading^0,c
   839   000820                     l2029:
   840   000820  FFFF               	dw	65535	; assembler added errata NOP
   841                           
   842                           ;main.c: 117:                 if(keypad_reading != 255 && keypad_reading != 0 && keypad_
      +                          reading != last_reading){
   843   000822  281A               	incf	main@keypad_reading^0,w,c
   844   000824  B4D8               	btfsc	status,2,c
   845   000826  EF17  F004         	goto	u1331
   846   00082A  EF1A  F004         	goto	u1330
   847   00082E                     u1331:
   848   00082E  FFFF               	dw	65535	; assembler added errata NOP
   849   000830  EFA0  F004         	goto	l2071
   850   000834                     u1330:
   851   000834  FFFF               	dw	65535	; assembler added errata NOP
   852   000836  501A               	movf	main@keypad_reading^0,w,c
   853   000838  B4D8               	btfsc	status,2,c
   854   00083A  EF21  F004         	goto	u1341
   855   00083E  EF24  F004         	goto	u1340
   856   000842                     u1341:
   857   000842  FFFF               	dw	65535	; assembler added errata NOP
   858   000844  EFA0  F004         	goto	l2071
   859   000848                     u1340:
   860   000848  FFFF               	dw	65535	; assembler added errata NOP
   861   00084A  5016               	movf	main@last_reading^0,w,c
   862   00084C  181A               	xorwf	main@keypad_reading^0,w,c
   863   00084E  B4D8               	btfsc	status,2,c
   864   000850  EF2C  F004         	goto	u1351
   865   000854  EF2F  F004         	goto	u1350
   866   000858                     u1351:
   867   000858  FFFF               	dw	65535	; assembler added errata NOP
   868   00085A  EFA0  F004         	goto	l2071
   869   00085E                     u1350:
   870   00085E  FFFF               	dw	65535	; assembler added errata NOP
   871   000860                     
   872                           ;main.c: 118:                     last_reading = keypad_reading;
   873   000860  C01A  F016         	movff	main@keypad_reading,main@last_reading
   874   000864                     
   875                           ;main.c: 119:                     LCD_goToRowColumn(1,inputCounter);
   876   000864  C019  F008         	movff	main@inputCounter,LCD_goToRowColumn@col
   877   000868  0E01               	movlw	1
   878   00086A  ECF5  F00B         	call	_LCD_goToRowColumn
   879                           
   880                           ;main.c: 120:                     LCD_displayCharacter(keypad_reading);
   881   00086E  501A               	movf	main@keypad_reading^0,w,c
   882   000870  ECE1  F009         	call	_LCD_displayCharacter
   883   000874                     
   884                           ;main.c: 121:                     passCode[inputCounter] = keypad_reading;
   885   000874  5019               	movf	main@inputCounter^0,w,c
   886   000876  0F10               	addlw	low main@passCode
   887   000878  6ED9               	movwf	fsr2l,c
   888   00087A  6ADA               	clrf	fsr2h,c
   889   00087C  C01A  FFDF         	movff	main@keypad_reading,indf2
   890   000880                     
   891                           ;main.c: 122:                     inputCounter++;
   892   000880  2A19               	incf	main@inputCounter^0,f,c
   893   000882  EFA0  F004         	goto	l2071
   894   000886                     l2043:
   895   000886  FFFF               	dw	65535	; assembler added errata NOP
   896                           
   897                           ;main.c: 126:                 passCode[inputCounter] = '\0';
   898   000888  5019               	movf	main@inputCounter^0,w,c
   899   00088A  0F10               	addlw	low main@passCode
   900   00088C  6ED9               	movwf	fsr2l,c
   901   00088E  6ADA               	clrf	fsr2h,c
   902   000890  6ADF               	clrf	indf2,c
   903   000892                     
   904                           ;main.c: 127:                 if (strcmp(passCode,"1234")==0){
   905   000892  0E10               	movlw	low main@passCode
   906   000894  6E01               	movwf	strcmp@l^0,c
   907   000896  0E61               	movlw	low STR_2
   908   000898  6E02               	movwf	strcmp@r^0,c
   909   00089A  EC7D  F00B         	call	_strcmp	;wreg free
   910   00089E  5001               	movf	?_strcmp^0,w,c
   911   0008A0  1002               	iorwf	(?_strcmp+1)^0,w,c
   912   0008A2  A4D8               	btfss	status,2,c
   913   0008A4  EF56  F004         	goto	u1361
   914   0008A8  EF59  F004         	goto	u1360
   915   0008AC                     u1361:
   916   0008AC  FFFF               	dw	65535	; assembler added errata NOP
   917   0008AE  EF80  F004         	goto	l2057
   918   0008B2                     u1360:
   919   0008B2  FFFF               	dw	65535	; assembler added errata NOP
   920   0008B4                     
   921                           ;main.c: 128:                     if(emergencyState){
   922   0008B4  5017               	movf	main@emergencyState^0,w,c
   923   0008B6  B4D8               	btfsc	status,2,c
   924   0008B8  EF60  F004         	goto	u1371
   925   0008BC  EF63  F004         	goto	u1370
   926   0008C0                     u1371:
   927   0008C0  FFFF               	dw	65535	; assembler added errata NOP
   928   0008C2  EF68  F004         	goto	l2051
   929   0008C6                     u1370:
   930   0008C6  FFFF               	dw	65535	; assembler added errata NOP
   931   0008C8                     
   932                           ;main.c: 129:                         emergencyState =0;
   933   0008C8  0E00               	movlw	0
   934   0008CA  6E17               	movwf	main@emergencyState^0,c
   935                           
   936                           ;main.c: 130:                     }
   937   0008CC  EF97  F004         	goto	l2063
   938   0008D0                     l2051:
   939   0008D0  FFFF               	dw	65535	; assembler added errata NOP
   940                           
   941                           ;main.c: 132:                         if (mode == ACTIVATED)
   942   0008D2  5018               	movf	main@mode^0,w,c
   943   0008D4  A4D8               	btfss	status,2,c
   944   0008D6  EF6F  F004         	goto	u1381
   945   0008DA  EF72  F004         	goto	u1380
   946   0008DE                     u1381:
   947   0008DE  FFFF               	dw	65535	; assembler added errata NOP
   948   0008E0  EF77  F004         	goto	l2055
   949   0008E4                     u1380:
   950   0008E4  FFFF               	dw	65535	; assembler added errata NOP
   951   0008E6                     
   952                           ;main.c: 133:                             mode = DEACTIVATED;
   953   0008E6  0E01               	movlw	1
   954   0008E8  6E18               	movwf	main@mode^0,c
   955   0008EA  EF97  F004         	goto	l2063
   956   0008EE                     l2055:
   957   0008EE  FFFF               	dw	65535	; assembler added errata NOP
   958                           
   959                           ;main.c: 135:                             mode = ACTIVATED;
   960   0008F0  0E00               	movlw	0
   961   0008F2  6E18               	movwf	main@mode^0,c
   962                           
   963                           ;main.c: 136:                             activatedStateTimer = 0;
   964   0008F4  0E00               	movlw	0
   965   0008F6  6E24               	movwf	(_activatedStateTimer+1)^0,c
   966   0008F8  0E00               	movlw	0
   967   0008FA  6E23               	movwf	_activatedStateTimer^0,c
   968   0008FC  EF97  F004         	goto	l2063
   969   000900                     l2057:
   970   000900  FFFF               	dw	65535	; assembler added errata NOP
   971                           
   972                           ;main.c: 141:                     LCD_clearScreen();
   973   000902  EC98  F00D         	call	_LCD_clearScreen	;wreg free
   974   000906                     
   975                           ;main.c: 142:                     LCD_displayStringRowColumn(0,0,"PASS ERR");
   976   000906  0E00               	movlw	0
   977   000908  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
   978   00090A  0E58               	movlw	low STR_3
   979   00090C  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
   980   00090E  0E00               	movlw	0
   981   000910  EC16  F00D         	call	_LCD_displayStringRowColumn
   982   000914                     
   983                           ;main.c: 143:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
   984   000914  0E04               	movlw	4
   985   000916  6E0F               	movwf	(??_main+1)^0,c
   986   000918  0ECF               	movlw	207
   987   00091A  6E0E               	movwf	??_main^0,c
   988   00091C  0EA5               	movlw	165
   989   00091E                     u1587:
   990   00091E  FFFF               	dw	65535	; errata NOP
   991   000920  2EE8               	decfsz	wreg,f,c
   992   000922  D7FD               	bra	u1587
   993   000924  2E0E               	decfsz	??_main^0,f,c
   994   000926  D7FB               	bra	u1587
   995   000928  2E0F               	decfsz	(??_main+1)^0,f,c
   996   00092A  D7F9               	bra	u1587
   997   00092C  D000               	nop2	
   998   00092E                     l2063:
   999   00092E  FFFF               	dw	65535	; assembler added errata NOP
  1000                           
  1001                           ;main.c: 146:                 passCodeReq=0;
  1002   000930  0E00               	movlw	0
  1003   000932  6E1B               	movwf	main@passCodeReq^0,c
  1004   000934                     
  1005                           ;main.c: 147:                 passCode[0] = '\0';
  1006   000934  0E00               	movlw	0
  1007   000936  6E10               	movwf	main@passCode^0,c
  1008   000938                     
  1009                           ;main.c: 148:                 inputCounter = 0;
  1010   000938  0E00               	movlw	0
  1011   00093A  6E19               	movwf	main@inputCounter^0,c
  1012   00093C                     
  1013                           ;main.c: 149:                 LCD_clearScreen();
  1014   00093C  EC98  F00D         	call	_LCD_clearScreen	;wreg free
  1015   000940                     l2071:
  1016   000940  FFFF               	dw	65535	; assembler added errata NOP
  1017                           
  1018                           ;main.c: 154:         if(mode == ACTIVATED){
  1019   000942  5018               	movf	main@mode^0,w,c
  1020   000944  A4D8               	btfss	status,2,c
  1021   000946  EFA7  F004         	goto	u1391
  1022   00094A  EFAA  F004         	goto	u1390
  1023   00094E                     u1391:
  1024   00094E  FFFF               	dw	65535	; assembler added errata NOP
  1025   000950  EFD2  F005         	goto	l2135
  1026   000954                     u1390:
  1027   000954  FFFF               	dw	65535	; assembler added errata NOP
  1028   000956                     
  1029                           ;main.c: 155:             if (emergencyState){
  1030   000956  5017               	movf	main@emergencyState^0,w,c
  1031   000958  B4D8               	btfsc	status,2,c
  1032   00095A  EFB1  F004         	goto	u1401
  1033   00095E  EFB4  F004         	goto	u1400
  1034   000962                     u1401:
  1035   000962  FFFF               	dw	65535	; assembler added errata NOP
  1036   000964  EF03  F005         	goto	l2093
  1037   000968                     u1400:
  1038   000968  FFFF               	dw	65535	; assembler added errata NOP
  1039   00096A                     
  1040                           ;main.c: 156:                 if(!passCodeReq)
  1041   00096A  501B               	movf	main@passCodeReq^0,w,c
  1042   00096C  A4D8               	btfss	status,2,c
  1043   00096E  EFBB  F004         	goto	u1411
  1044   000972  EFBE  F004         	goto	u1410
  1045   000976                     u1411:
  1046   000976  FFFF               	dw	65535	; assembler added errata NOP
  1047   000978  EFC6  F004         	goto	l2079
  1048   00097C                     u1410:
  1049   00097C  FFFF               	dw	65535	; assembler added errata NOP
  1050   00097E                     
  1051                           ;main.c: 157:                      LCD_displayStringRowColumn(0,0,"99:GATE OPEN");
  1052   00097E  0E00               	movlw	0
  1053   000980  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1054   000982  0E11               	movlw	low STR_4
  1055   000984  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1056   000986  0E00               	movlw	0
  1057   000988  EC16  F00D         	call	_LCD_displayStringRowColumn
  1058   00098C                     l2079:
  1059   00098C  FFFF               	dw	65535	; assembler added errata NOP
  1060                           
  1061                           ;main.c: 158:                     if(emergencyTimer<=1)
  1062   00098E  BE22               	btfsc	(_emergencyTimer+1)^0,7,c
  1063   000990  EFD6  F004         	goto	u1420
  1064   000994  5022               	movf	(_emergencyTimer+1)^0,w,c
  1065   000996  E107               	bnz	u1421
  1066   000998  0E02               	movlw	2
  1067   00099A  5C21               	subwf	_emergencyTimer^0,w,c
  1068   00099C  B0D8               	btfsc	status,0,c
  1069   00099E  EFD3  F004         	goto	u1421
  1070   0009A2  EFD6  F004         	goto	u1420
  1071   0009A6                     u1421:
  1072   0009A6  FFFF               	dw	65535	; assembler added errata NOP
  1073   0009A8  EFDE  F004         	goto	l2083
  1074   0009AC                     u1420:
  1075   0009AC  FFFF               	dw	65535	; assembler added errata NOP
  1076   0009AE                     
  1077                           ;main.c: 159:                         buzzer_on(PORT_A,0);
  1078   0009AE  0E00               	movlw	0
  1079   0009B0  6E06               	movwf	buzzer_on@pinNo^0,c
  1080   0009B2  0E00               	movlw	0
  1081   0009B4  EC4F  F00D         	call	_buzzer_on
  1082   0009B8  EFE4  F004         	goto	l2085
  1083   0009BC                     l2083:
  1084   0009BC  FFFF               	dw	65535	; assembler added errata NOP
  1085                           
  1086                           ;main.c: 161:                         buzzer_off(PORT_A,0);
  1087   0009BE  0E00               	movlw	0
  1088   0009C0  6E06               	movwf	buzzer_off@pinNo^0,c
  1089   0009C2  0E00               	movlw	0
  1090   0009C4  EC5A  F00D         	call	_buzzer_off
  1091   0009C8                     l2085:
  1092   0009C8  FFFF               	dw	65535	; assembler added errata NOP
  1093                           
  1094                           ;main.c: 162:                 if(emergencyTimer>=5){
  1095   0009CA  BE22               	btfsc	(_emergencyTimer+1)^0,7,c
  1096   0009CC  EFF1  F004         	goto	u1431
  1097   0009D0  5022               	movf	(_emergencyTimer+1)^0,w,c
  1098   0009D2  E10A               	bnz	u1430
  1099   0009D4  0E05               	movlw	5
  1100   0009D6  5C21               	subwf	_emergencyTimer^0,w,c
  1101   0009D8  A0D8               	btfss	status,0,c
  1102   0009DA  EFF1  F004         	goto	u1431
  1103   0009DE  EFF4  F004         	goto	u1430
  1104   0009E2                     u1431:
  1105   0009E2  FFFF               	dw	65535	; assembler added errata NOP
  1106   0009E4  EFFE  F004         	goto	l2091
  1107   0009E8                     u1430:
  1108   0009E8  FFFF               	dw	65535	; assembler added errata NOP
  1109   0009EA                     
  1110                           ;main.c: 163:                     DIO_TogglePin(PORT_B,5);
  1111   0009EA  0E05               	movlw	5
  1112   0009EC  6E01               	movwf	DIO_TogglePin@pinNo^0,c
  1113   0009EE  0E01               	movlw	1
  1114   0009F0  ECEB  F008         	call	_DIO_TogglePin
  1115   0009F4                     
  1116                           ;main.c: 164:                     emergencyTimer=0;
  1117   0009F4  0E00               	movlw	0
  1118   0009F6  6E22               	movwf	(_emergencyTimer+1)^0,c
  1119   0009F8  0E00               	movlw	0
  1120   0009FA  6E21               	movwf	_emergencyTimer^0,c
  1121   0009FC                     l2091:
  1122   0009FC  FFFF               	dw	65535	; assembler added errata NOP
  1123                           
  1124                           ;main.c: 166:                 motor_on();
  1125   0009FE  EC8B  F00C         	call	_motor_on	;wreg free
  1126                           
  1127                           ;main.c: 167:             }
  1128   000A02  EF79  F003         	goto	l1995
  1129   000A06                     l2093:
  1130   000A06  FFFF               	dw	65535	; assembler added errata NOP
  1131                           
  1132                           ;main.c: 169:             {;main.c: 170:                 if(activatedStateTimer <=5 && !
      +                          passCodeReq){
  1133   000A08  BE24               	btfsc	(_activatedStateTimer+1)^0,7,c
  1134   000A0A  EF13  F005         	goto	u1440
  1135   000A0E  5024               	movf	(_activatedStateTimer+1)^0,w,c
  1136   000A10  E107               	bnz	u1441
  1137   000A12  0E06               	movlw	6
  1138   000A14  5C23               	subwf	_activatedStateTimer^0,w,c
  1139   000A16  B0D8               	btfsc	status,0,c
  1140   000A18  EF10  F005         	goto	u1441
  1141   000A1C  EF13  F005         	goto	u1440
  1142   000A20                     u1441:
  1143   000A20  FFFF               	dw	65535	; assembler added errata NOP
  1144   000A22  EF25  F005         	goto	l2099
  1145   000A26                     u1440:
  1146   000A26  FFFF               	dw	65535	; assembler added errata NOP
  1147   000A28  501B               	movf	main@passCodeReq^0,w,c
  1148   000A2A  A4D8               	btfss	status,2,c
  1149   000A2C  EF1A  F005         	goto	u1451
  1150   000A30  EF1D  F005         	goto	u1450
  1151   000A34                     u1451:
  1152   000A34  FFFF               	dw	65535	; assembler added errata NOP
  1153   000A36  EF25  F005         	goto	l2099
  1154   000A3A                     u1450:
  1155   000A3A  FFFF               	dw	65535	; assembler added errata NOP
  1156   000A3C                     
  1157                           ;main.c: 171:                     LCD_displayStringRowColumn(0,0,"Activated");
  1158   000A3C  0E00               	movlw	0
  1159   000A3E  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1160   000A40  0E4E               	movlw	low STR_5
  1161   000A42  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1162   000A44  0E00               	movlw	0
  1163   000A46  EC16  F00D         	call	_LCD_displayStringRowColumn
  1164   000A4A                     l2099:
  1165   000A4A  FFFF               	dw	65535	; assembler added errata NOP
  1166                           
  1167                           ;main.c: 173:                 if(pir_getState(PORT_A,2)==HIGH){
  1168   000A4C  0E02               	movlw	2
  1169   000A4E  6E06               	movwf	pir_getState@pinNo^0,c
  1170   000A50  0E00               	movlw	0
  1171   000A52  EC86  F00D         	call	_pir_getState
  1172   000A56  06E8               	decf	wreg,f,c
  1173   000A58  A4D8               	btfss	status,2,c
  1174   000A5A  EF31  F005         	goto	u1461
  1175   000A5E  EF34  F005         	goto	u1460
  1176   000A62                     u1461:
  1177   000A62  FFFF               	dw	65535	; assembler added errata NOP
  1178   000A64  EF66  F005         	goto	l2115
  1179   000A68                     u1460:
  1180   000A68  FFFF               	dw	65535	; assembler added errata NOP
  1181   000A6A                     
  1182                           ;main.c: 174:                     GateCloseTimer = 0;
  1183   000A6A  0E00               	movlw	0
  1184   000A6C  6E28               	movwf	(_GateCloseTimer+1)^0,c
  1185   000A6E  0E00               	movlw	0
  1186   000A70  6E27               	movwf	_GateCloseTimer^0,c
  1187   000A72                     
  1188                           ;main.c: 175:                     led_on(PORT_B,5);
  1189   000A72  0E05               	movlw	5
  1190   000A74  6E06               	movwf	led_on@pinNo^0,c
  1191   000A76  0E01               	movlw	1
  1192   000A78  EC2E  F00D         	call	_led_on
  1193   000A7C                     
  1194                           ;main.c: 176:                     motor_on();
  1195   000A7C  EC8B  F00C         	call	_motor_on	;wreg free
  1196   000A80                     
  1197                           ;main.c: 177:                     if(activatedStateTimer>5 && !passCodeReq)
  1198   000A80  BE24               	btfsc	(_activatedStateTimer+1)^0,7,c
  1199   000A82  EF4C  F005         	goto	u1471
  1200   000A86  5024               	movf	(_activatedStateTimer+1)^0,w,c
  1201   000A88  E10A               	bnz	u1470
  1202   000A8A  0E06               	movlw	6
  1203   000A8C  5C23               	subwf	_activatedStateTimer^0,w,c
  1204   000A8E  A0D8               	btfss	status,0,c
  1205   000A90  EF4C  F005         	goto	u1471
  1206   000A94  EF4F  F005         	goto	u1470
  1207   000A98                     u1471:
  1208   000A98  FFFF               	dw	65535	; assembler added errata NOP
  1209   000A9A  EF61  F005         	goto	l2113
  1210   000A9E                     u1470:
  1211   000A9E  FFFF               	dw	65535	; assembler added errata NOP
  1212   000AA0  501B               	movf	main@passCodeReq^0,w,c
  1213   000AA2  A4D8               	btfss	status,2,c
  1214   000AA4  EF56  F005         	goto	u1481
  1215   000AA8  EF59  F005         	goto	u1480
  1216   000AAC                     u1481:
  1217   000AAC  FFFF               	dw	65535	; assembler added errata NOP
  1218   000AAE  EF61  F005         	goto	l2113
  1219   000AB2                     u1480:
  1220   000AB2  FFFF               	dw	65535	; assembler added errata NOP
  1221   000AB4                     
  1222                           ;main.c: 178:                         LCD_displayStringRowColumn(0,0,"GATE OPENED");
  1223   000AB4  0E00               	movlw	0
  1224   000AB6  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1225   000AB8  0E2A               	movlw	low STR_6
  1226   000ABA  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1227   000ABC  0E00               	movlw	0
  1228   000ABE  EC16  F00D         	call	_LCD_displayStringRowColumn
  1229   000AC2                     l2113:
  1230   000AC2  FFFF               	dw	65535	; assembler added errata NOP
  1231                           
  1232                           ;main.c: 179:                     buzzerSet = 1;
  1233   000AC4  0E01               	movlw	1
  1234   000AC6  6E15               	movwf	main@buzzerSet^0,c
  1235                           
  1236                           ;main.c: 180:                 }
  1237   000AC8  EF79  F003         	goto	l1995
  1238   000ACC                     l2115:
  1239   000ACC  FFFF               	dw	65535	; assembler added errata NOP
  1240                           
  1241                           ;main.c: 182:                     if(GateCloseTimer>=10){
  1242   000ACE  BE28               	btfsc	(_GateCloseTimer+1)^0,7,c
  1243   000AD0  EF73  F005         	goto	u1491
  1244   000AD4  5028               	movf	(_GateCloseTimer+1)^0,w,c
  1245   000AD6  E10A               	bnz	u1490
  1246   000AD8  0E0A               	movlw	10
  1247   000ADA  5C27               	subwf	_GateCloseTimer^0,w,c
  1248   000ADC  A0D8               	btfss	status,0,c
  1249   000ADE  EF73  F005         	goto	u1491
  1250   000AE2  EF76  F005         	goto	u1490
  1251   000AE6                     u1491:
  1252   000AE6  FFFF               	dw	65535	; assembler added errata NOP
  1253   000AE8  EF79  F003         	goto	l1995
  1254   000AEC                     u1490:
  1255   000AEC  FFFF               	dw	65535	; assembler added errata NOP
  1256   000AEE                     
  1257                           ;main.c: 183:                         if(GateCloseTimer <12){
  1258   000AEE  BE28               	btfsc	(_GateCloseTimer+1)^0,7,c
  1259   000AF0  EF86  F005         	goto	u1500
  1260   000AF4  5028               	movf	(_GateCloseTimer+1)^0,w,c
  1261   000AF6  E107               	bnz	u1501
  1262   000AF8  0E0C               	movlw	12
  1263   000AFA  5C27               	subwf	_GateCloseTimer^0,w,c
  1264   000AFC  B0D8               	btfsc	status,0,c
  1265   000AFE  EF83  F005         	goto	u1501
  1266   000B02  EF86  F005         	goto	u1500
  1267   000B06                     u1501:
  1268   000B06  FFFF               	dw	65535	; assembler added errata NOP
  1269   000B08  EF98  F005         	goto	l2123
  1270   000B0C                     u1500:
  1271   000B0C  FFFF               	dw	65535	; assembler added errata NOP
  1272   000B0E                     
  1273                           ;main.c: 184:                             if(buzzerSet){
  1274   000B0E  5015               	movf	main@buzzerSet^0,w,c
  1275   000B10  B4D8               	btfsc	status,2,c
  1276   000B12  EF8D  F005         	goto	u1511
  1277   000B16  EF90  F005         	goto	u1510
  1278   000B1A                     u1511:
  1279   000B1A  FFFF               	dw	65535	; assembler added errata NOP
  1280   000B1C  EFA4  F005         	goto	l117
  1281   000B20                     u1510:
  1282   000B20  FFFF               	dw	65535	; assembler added errata NOP
  1283   000B22                     
  1284                           ;main.c: 185:                                 buzzer_on(PORT_A,0);
  1285   000B22  0E00               	movlw	0
  1286   000B24  6E06               	movwf	buzzer_on@pinNo^0,c
  1287   000B26  0E00               	movlw	0
  1288   000B28  EC4F  F00D         	call	_buzzer_on
  1289   000B2C  EFA4  F005         	goto	l117
  1290   000B30                     l2123:
  1291   000B30  FFFF               	dw	65535	; assembler added errata NOP
  1292                           
  1293                           ;main.c: 189:                             buzzer_off(PORT_A,0);
  1294   000B32  0E00               	movlw	0
  1295   000B34  6E06               	movwf	buzzer_off@pinNo^0,c
  1296   000B36  0E00               	movlw	0
  1297   000B38  EC5A  F00D         	call	_buzzer_off
  1298   000B3C                     
  1299                           ;main.c: 190:                             buzzerSet = 0;
  1300   000B3C  0E00               	movlw	0
  1301   000B3E  6E15               	movwf	main@buzzerSet^0,c
  1302   000B40                     
  1303                           ;main.c: 191:                             GateCloseTimer = 20;
  1304   000B40  0E00               	movlw	0
  1305   000B42  6E28               	movwf	(_GateCloseTimer+1)^0,c
  1306   000B44  0E14               	movlw	20
  1307   000B46  6E27               	movwf	_GateCloseTimer^0,c
  1308   000B48                     l117:
  1309   000B48  FFFF               	dw	65535	; assembler added errata NOP
  1310                           
  1311                           ;main.c: 193:                         led_off(PORT_B,5);
  1312   000B4A  0E05               	movlw	5
  1313   000B4C  6E06               	movwf	led_off@pinNo^0,c
  1314   000B4E  0E01               	movlw	1
  1315   000B50  EC39  F00D         	call	_led_off
  1316                           
  1317                           ;main.c: 194:                         motor_off();
  1318   000B54  ECAA  F00C         	call	_motor_off	;wreg free
  1319   000B58                     
  1320                           ;main.c: 195:                         if(activatedStateTimer>5 && !passCodeReq)
  1321   000B58  BE24               	btfsc	(_activatedStateTimer+1)^0,7,c
  1322   000B5A  EFB8  F005         	goto	u1521
  1323   000B5E  5024               	movf	(_activatedStateTimer+1)^0,w,c
  1324   000B60  E10A               	bnz	u1520
  1325   000B62  0E06               	movlw	6
  1326   000B64  5C23               	subwf	_activatedStateTimer^0,w,c
  1327   000B66  A0D8               	btfss	status,0,c
  1328   000B68  EFB8  F005         	goto	u1521
  1329   000B6C  EFBB  F005         	goto	u1520
  1330   000B70                     u1521:
  1331   000B70  FFFF               	dw	65535	; assembler added errata NOP
  1332   000B72  EFCF  F005         	goto	l109
  1333   000B76                     u1520:
  1334   000B76  FFFF               	dw	65535	; assembler added errata NOP
  1335   000B78  501B               	movf	main@passCodeReq^0,w,c
  1336   000B7A  A4D8               	btfss	status,2,c
  1337   000B7C  EFC2  F005         	goto	u1531
  1338   000B80  EFC5  F005         	goto	u1530
  1339   000B84                     u1531:
  1340   000B84  FFFF               	dw	65535	; assembler added errata NOP
  1341   000B86  EFCF  F005         	goto	l109
  1342   000B8A                     u1530:
  1343   000B8A  FFFF               	dw	65535	; assembler added errata NOP
  1344   000B8C                     
  1345                           ;main.c: 196:                             LCD_displayStringRowColumn(0,0,"GATE CLOSED");
  1346   000B8C  0E00               	movlw	0
  1347   000B8E  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1348   000B90  0E36               	movlw	low STR_7
  1349   000B92  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1350   000B94  0E00               	movlw	0
  1351   000B96  EC16  F00D         	call	_LCD_displayStringRowColumn
  1352   000B9A  EF79  F003         	goto	l1995
  1353   000B9E                     l109:
  1354   000B9E  FFFF               	dw	65535	; assembler added errata NOP
  1355                           
  1356                           ;main.c: 201:         }
  1357   000BA0  EF79  F003         	goto	l1995
  1358   000BA4                     l2135:
  1359   000BA4  FFFF               	dw	65535	; assembler added errata NOP
  1360   000BA6  0418               	decf	main@mode^0,w,c
  1361   000BA8  A4D8               	btfss	status,2,c
  1362   000BAA  EFD9  F005         	goto	u1541
  1363   000BAE  EFDC  F005         	goto	u1540
  1364   000BB2                     u1541:
  1365   000BB2  FFFF               	dw	65535	; assembler added errata NOP
  1366   000BB4  EF79  F003         	goto	l1995
  1367   000BB8                     u1540:
  1368   000BB8  FFFF               	dw	65535	; assembler added errata NOP
  1369   000BBA                     
  1370                           ;main.c: 204:             if(emergencyState && !passCodeReq){
  1371   000BBA  5017               	movf	main@emergencyState^0,w,c
  1372   000BBC  B4D8               	btfsc	status,2,c
  1373   000BBE  EFE3  F005         	goto	u1551
  1374   000BC2  EFE6  F005         	goto	u1550
  1375   000BC6                     u1551:
  1376   000BC6  FFFF               	dw	65535	; assembler added errata NOP
  1377   000BC8  EFFA  F005         	goto	l2143
  1378   000BCC                     u1550:
  1379   000BCC  FFFF               	dw	65535	; assembler added errata NOP
  1380   000BCE  501B               	movf	main@passCodeReq^0,w,c
  1381   000BD0  A4D8               	btfss	status,2,c
  1382   000BD2  EFED  F005         	goto	u1561
  1383   000BD6  EFF0  F005         	goto	u1560
  1384   000BDA                     u1561:
  1385   000BDA  FFFF               	dw	65535	; assembler added errata NOP
  1386   000BDC  EFFA  F005         	goto	l2143
  1387   000BE0                     u1560:
  1388   000BE0  FFFF               	dw	65535	; assembler added errata NOP
  1389   000BE2                     
  1390                           ;main.c: 205:                 LCD_displayStringRowColumn(0,0,"NO ER: DEACTIVE");
  1391   000BE2  0E00               	movlw	0
  1392   000BE4  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1393   000BE6  0E01               	movlw	low STR_8
  1394   000BE8  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1395   000BEA  0E00               	movlw	0
  1396   000BEC  EC16  F00D         	call	_LCD_displayStringRowColumn
  1397                           
  1398                           ;main.c: 206:             }
  1399   000BF0  EF0C  F006         	goto	l2147
  1400   000BF4                     l2143:
  1401   000BF4  FFFF               	dw	65535	; assembler added errata NOP
  1402                           
  1403                           ;main.c: 208:             {;main.c: 209:                 if(!passCodeReq)
  1404   000BF6  501B               	movf	main@passCodeReq^0,w,c
  1405   000BF8  A4D8               	btfss	status,2,c
  1406   000BFA  EF01  F006         	goto	u1571
  1407   000BFE  EF04  F006         	goto	u1570
  1408   000C02                     u1571:
  1409   000C02  FFFF               	dw	65535	; assembler added errata NOP
  1410   000C04  EF0C  F006         	goto	l2147
  1411   000C08                     u1570:
  1412   000C08  FFFF               	dw	65535	; assembler added errata NOP
  1413   000C0A                     
  1414                           ;main.c: 210:                     LCD_displayStringRowColumn(0,0,"Deactivated");
  1415   000C0A  0E00               	movlw	0
  1416   000C0C  6E0B               	movwf	LCD_displayStringRowColumn@col^0,c
  1417   000C0E  0E42               	movlw	low STR_9
  1418   000C10  6E0C               	movwf	LCD_displayStringRowColumn@Str^0,c
  1419   000C12  0E00               	movlw	0
  1420   000C14  EC16  F00D         	call	_LCD_displayStringRowColumn
  1421   000C18                     l2147:
  1422   000C18  FFFF               	dw	65535	; assembler added errata NOP
  1423                           
  1424                           ;main.c: 212:             led_on(PORT_B,5);
  1425   000C1A  0E05               	movlw	5
  1426   000C1C  6E06               	movwf	led_on@pinNo^0,c
  1427   000C1E  0E01               	movlw	1
  1428   000C20  EC2E  F00D         	call	_led_on
  1429   000C24                     
  1430                           ;main.c: 213:             motor_off();
  1431   000C24  ECAA  F00C         	call	_motor_off	;wreg free
  1432   000C28  EF79  F003         	goto	l1995
  1433   000C2C  EF20  F000         	goto	start
  1434   000C30                     __end_of_main:
  1435                           	callstack 0
  1436                           
  1437 ;; *************** function _strcmp *****************
  1438 ;; Defined at:
  1439 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcmp.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;  l               1    0[COMRAM] PTR const unsigned char 
  1442 ;;		 -> main@passCode(5), 
  1443 ;;  r               1    1[COMRAM] PTR const unsigned char 
  1444 ;;		 -> STR_2(5), 
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  2    0[COMRAM] int 
  1449 ;; Registers used:
  1450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1456 ;;      Params:         2       0       0       0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0       0       0
  1458 ;;      Temps:          1       0       0       0       0       0       0
  1459 ;;      Totals:         3       0       0       0       0       0       0
  1460 ;;Total ram usage:        3 bytes
  1461 ;; Hardware stack levels used: 1
  1462 ;; Hardware stack levels required when called: 1
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_main
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text1
  1471   0016FA                     __ptext1:
  1472                           	callstack 0
  1473   0016FA                     _strcmp:
  1474                           	callstack 0
  1475   0016FA  FFFF               	dw	65535	; assembler added errata NOP
  1476   0016FC  EF83  F00B         	goto	l1917
  1477   001700                     l1915:
  1478   001700  FFFF               	dw	65535	; assembler added errata NOP
  1479   001702  2A01               	incf	strcmp@l^0,f,c
  1480   001704  2A02               	incf	strcmp@r^0,f,c
  1481   001706                     l1917:
  1482   001706  FFFF               	dw	65535	; assembler added errata NOP
  1483   001708  5001               	movf	strcmp@l^0,w,c
  1484   00170A  6ED9               	movwf	fsr2l,c
  1485   00170C  6ADA               	clrf	fsr2h,c
  1486   00170E  50DF               	movf	indf2,w,c
  1487   001710  6E03               	movwf	??_strcmp^0,c
  1488   001712  C002  FFF6         	movff	strcmp@r,tblptrl
  1489   001716                     	if	1	;There is more than 1 active tblptr byte
  1490   001716  0E06               	movlw	high __smallconst
  1491   001718  6EF7               	movwf	tblptrh,c
  1492   00171A                     	endif
  1493   00171A                     	if	0	;tblptru may be non-zero
  1494   00171A                     	endif
  1495   00171A                     	if	0	;tblptru may be non-zero
  1496   00171A                     	endif
  1497   00171A  0008               	tblrd		*
  1498   00171C  FFFF               	dw	65535	; errata NOP
  1499   00171E  50F5               	movf	tablat,w,c
  1500   001720  1803               	xorwf	??_strcmp^0,w,c
  1501   001722  A4D8               	btfss	status,2,c
  1502   001724  EF96  F00B         	goto	u1171
  1503   001728  EF99  F00B         	goto	u1170
  1504   00172C                     u1171:
  1505   00172C  FFFF               	dw	65535	; assembler added errata NOP
  1506   00172E  EFA6  F00B         	goto	l1921
  1507   001732                     u1170:
  1508   001732  FFFF               	dw	65535	; assembler added errata NOP
  1509   001734  5001               	movf	strcmp@l^0,w,c
  1510   001736  6ED9               	movwf	fsr2l,c
  1511   001738  6ADA               	clrf	fsr2h,c
  1512   00173A  50DF               	movf	indf2,w,c
  1513   00173C  A4D8               	btfss	status,2,c
  1514   00173E  EFA3  F00B         	goto	u1181
  1515   001742  EFA6  F00B         	goto	u1180
  1516   001746                     u1181:
  1517   001746  FFFF               	dw	65535	; assembler added errata NOP
  1518   001748  EF80  F00B         	goto	l1915
  1519   00174C                     u1180:
  1520   00174C                     l1921:
  1521   00174C  FFFF               	dw	65535	; assembler added errata NOP
  1522   00174E  5001               	movf	strcmp@l^0,w,c
  1523   001750  6ED9               	movwf	fsr2l,c
  1524   001752  6ADA               	clrf	fsr2h,c
  1525   001754  50DF               	movf	indf2,w,c
  1526   001756  6E03               	movwf	??_strcmp^0,c
  1527   001758  C002  FFF6         	movff	strcmp@r,tblptrl
  1528   00175C                     	if	1	;There is more than 1 active tblptr byte
  1529   00175C  0E06               	movlw	high __smallconst
  1530   00175E  6EF7               	movwf	tblptrh,c
  1531   001760                     	endif
  1532   001760                     	if	0	;tblptru may be non-zero
  1533   001760                     	endif
  1534   001760                     	if	0	;tblptru may be non-zero
  1535   001760                     	endif
  1536   001760  0008               	tblrd		*
  1537   001762  FFFF               	dw	65535	; errata NOP
  1538   001764  50F5               	movf	tablat,w,c
  1539   001766  5C03               	subwf	??_strcmp^0,w,c
  1540   001768  6E01               	movwf	?_strcmp^0,c
  1541   00176A  6A02               	clrf	(?_strcmp+1)^0,c
  1542   00176C  A0D8               	btfss	status,0,c
  1543   00176E  0602               	decf	(?_strcmp+1)^0,f,c
  1544   001770  0012               	return		;funcret
  1545   001772  FFFF               	dw	65535	; errata NOP
  1546   001774                     __end_of_strcmp:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function _pir_init *****************
  1550 ;; Defined at:
  1551 ;;		line 8 in file "pir.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  port            1    wreg     enum E2181
  1554 ;;  pinNo           1    5[COMRAM] unsigned char 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  port            1    6[COMRAM] enum E2181
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1566 ;;      Params:         1       0       0       0       0       0       0
  1567 ;;      Locals:         1       0       0       0       0       0       0
  1568 ;;      Temps:          0       0       0       0       0       0       0
  1569 ;;      Totals:         2       0       0       0       0       0       0
  1570 ;;Total ram usage:        2 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; Hardware stack levels required when called: 2
  1573 ;; This function calls:
  1574 ;;		_DIO_SetPinDirection
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text2
  1581   001A46                     __ptext2:
  1582                           	callstack 0
  1583   001A46                     _pir_init:
  1584                           	callstack 0
  1585   001A46  FFFF               	dw	65535	; assembler added errata NOP
  1586                           
  1587                           ;incstack = 0
  1588                           ;pir_init@port stored from wreg
  1589   001A48  6E07               	movwf	pir_init@port^0,c
  1590   001A4A                     
  1591                           ;pir.c: 9:     DIO_SetPinDirection(port,pinNo,INPUT);
  1592   001A4A  C006  F001         	movff	pir_init@pinNo,DIO_SetPinDirection@pinNo
  1593   001A4E  0E00               	movlw	0
  1594   001A50  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  1595   001A52  5007               	movf	pir_init@port^0,w,c
  1596   001A54  EC18  F006         	call	_DIO_SetPinDirection
  1597   001A58  0012               	return		;funcret
  1598   001A5A  FFFF               	dw	65535	; errata NOP
  1599   001A5C                     __end_of_pir_init:
  1600                           	callstack 0
  1601                           
  1602 ;; *************** function _pir_getState *****************
  1603 ;; Defined at:
  1604 ;;		line 11 in file "pir.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  port            1    wreg     enum E2181
  1607 ;;  pinNo           1    5[COMRAM] unsigned char 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  port            1    6[COMRAM] enum E2181
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      unsigned char 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1619 ;;      Params:         1       0       0       0       0       0       0
  1620 ;;      Locals:         1       0       0       0       0       0       0
  1621 ;;      Temps:          0       0       0       0       0       0       0
  1622 ;;      Totals:         2       0       0       0       0       0       0
  1623 ;;Total ram usage:        2 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; Hardware stack levels required when called: 2
  1626 ;; This function calls:
  1627 ;;		_DIO_GetPinValue
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text3
  1634   001B0C                     __ptext3:
  1635                           	callstack 0
  1636   001B0C                     _pir_getState:
  1637                           	callstack 0
  1638   001B0C  FFFF               	dw	65535	; assembler added errata NOP
  1639                           
  1640                           ;incstack = 0
  1641                           ;pir_getState@port stored from wreg
  1642   001B0E  6E07               	movwf	pir_getState@port^0,c
  1643   001B10                     
  1644                           ;pir.c: 12:     return DIO_GetPinValue(port,pinNo);
  1645   001B10  C006  F001         	movff	pir_getState@pinNo,DIO_GetPinValue@pinNo
  1646   001B14  5007               	movf	pir_getState@port^0,w,c
  1647   001B16  EC56  F008         	call	_DIO_GetPinValue
  1648   001B1A  0012               	return		;funcret
  1649   001B1C  FFFF               	dw	65535	; errata NOP
  1650   001B1E                     __end_of_pir_getState:
  1651                           	callstack 0
  1652                           
  1653 ;; *************** function _motor_on *****************
  1654 ;; Defined at:
  1655 ;;		line 20 in file "motor.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0, cstack
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1669 ;;      Params:         0       0       0       0       0       0       0
  1670 ;;      Locals:         0       0       0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0
  1672 ;;      Totals:         0       0       0       0       0       0       0
  1673 ;;Total ram usage:        0 bytes
  1674 ;; Hardware stack levels used: 1
  1675 ;; Hardware stack levels required when called: 2
  1676 ;; This function calls:
  1677 ;;		_DIO_SetPinValue
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text4
  1684   001916                     __ptext4:
  1685                           	callstack 0
  1686   001916                     _motor_on:
  1687                           	callstack 0
  1688   001916  FFFF               	dw	65535	; assembler added errata NOP
  1689   001918                     
  1690                           ;motor.c: 21:     DIO_SetPinValue(PORT_B,0,LOW);
  1691   001918  0E00               	movlw	0
  1692   00191A  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1693   00191C  0E00               	movlw	0
  1694   00191E  6E02               	movwf	DIO_SetPinValue@value^0,c
  1695   001920  0E01               	movlw	1
  1696   001922  EC37  F007         	call	_DIO_SetPinValue
  1697                           
  1698                           ;motor.c: 22:     DIO_SetPinValue(PORT_B,1,HIGH);
  1699   001926  0E01               	movlw	1
  1700   001928  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1701   00192A  0E01               	movlw	1
  1702   00192C  6E02               	movwf	DIO_SetPinValue@value^0,c
  1703   00192E  0E01               	movlw	1
  1704   001930  EC37  F007         	call	_DIO_SetPinValue
  1705                           
  1706                           ;motor.c: 23:     DIO_SetPinValue(PORT_B,2,LOW);
  1707   001934  0E02               	movlw	2
  1708   001936  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1709   001938  0E00               	movlw	0
  1710   00193A  6E02               	movwf	DIO_SetPinValue@value^0,c
  1711   00193C  0E01               	movlw	1
  1712   00193E  EC37  F007         	call	_DIO_SetPinValue
  1713                           
  1714                           ;motor.c: 24:     DIO_SetPinValue(PORT_B,3,LOW);
  1715   001942  0E03               	movlw	3
  1716   001944  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1717   001946  0E00               	movlw	0
  1718   001948  6E02               	movwf	DIO_SetPinValue@value^0,c
  1719   00194A  0E01               	movlw	1
  1720   00194C  EC37  F007         	call	_DIO_SetPinValue
  1721   001950  0012               	return		;funcret
  1722   001952  FFFF               	dw	65535	; errata NOP
  1723   001954                     __end_of_motor_on:
  1724                           	callstack 0
  1725                           
  1726 ;; *************** function _motor_off *****************
  1727 ;; Defined at:
  1728 ;;		line 26 in file "motor.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1742 ;;      Params:         0       0       0       0       0       0       0
  1743 ;;      Locals:         0       0       0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0
  1745 ;;      Totals:         0       0       0       0       0       0       0
  1746 ;;Total ram usage:        0 bytes
  1747 ;; Hardware stack levels used: 1
  1748 ;; Hardware stack levels required when called: 2
  1749 ;; This function calls:
  1750 ;;		_DIO_SetPinValue
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text5
  1757   001954                     __ptext5:
  1758                           	callstack 0
  1759   001954                     _motor_off:
  1760                           	callstack 0
  1761   001954  FFFF               	dw	65535	; assembler added errata NOP
  1762   001956                     
  1763                           ;motor.c: 27:     DIO_SetPinValue(PORT_B,0,HIGH);
  1764   001956  0E00               	movlw	0
  1765   001958  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1766   00195A  0E01               	movlw	1
  1767   00195C  6E02               	movwf	DIO_SetPinValue@value^0,c
  1768   00195E  0E01               	movlw	1
  1769   001960  EC37  F007         	call	_DIO_SetPinValue
  1770                           
  1771                           ;motor.c: 28:     DIO_SetPinValue(PORT_B,1,LOW);
  1772   001964  0E01               	movlw	1
  1773   001966  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1774   001968  0E00               	movlw	0
  1775   00196A  6E02               	movwf	DIO_SetPinValue@value^0,c
  1776   00196C  0E01               	movlw	1
  1777   00196E  EC37  F007         	call	_DIO_SetPinValue
  1778                           
  1779                           ;motor.c: 29:     DIO_SetPinValue(PORT_B,2,LOW);
  1780   001972  0E02               	movlw	2
  1781   001974  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1782   001976  0E00               	movlw	0
  1783   001978  6E02               	movwf	DIO_SetPinValue@value^0,c
  1784   00197A  0E01               	movlw	1
  1785   00197C  EC37  F007         	call	_DIO_SetPinValue
  1786                           
  1787                           ;motor.c: 30:     DIO_SetPinValue(PORT_B,3,LOW);
  1788   001980  0E03               	movlw	3
  1789   001982  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1790   001984  0E00               	movlw	0
  1791   001986  6E02               	movwf	DIO_SetPinValue@value^0,c
  1792   001988  0E01               	movlw	1
  1793   00198A  EC37  F007         	call	_DIO_SetPinValue
  1794   00198E  0012               	return		;funcret
  1795   001990  FFFF               	dw	65535	; errata NOP
  1796   001992                     __end_of_motor_off:
  1797                           	callstack 0
  1798                           
  1799 ;; *************** function _motor_init *****************
  1800 ;; Defined at:
  1801 ;;		line 8 in file "motor.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1815 ;;      Params:         0       0       0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0
  1818 ;;      Totals:         0       0       0       0       0       0       0
  1819 ;;Total ram usage:        0 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 2
  1822 ;; This function calls:
  1823 ;;		_DIO_SetPinDirection
  1824 ;;		_DIO_SetPinValue
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text6
  1831   001774                     __ptext6:
  1832                           	callstack 0
  1833   001774                     _motor_init:
  1834                           	callstack 0
  1835   001774  FFFF               	dw	65535	; assembler added errata NOP
  1836   001776                     
  1837                           ;motor.c: 9:     DIO_SetPinDirection(PORT_B,0,OUTPUT);
  1838   001776  0E00               	movlw	0
  1839   001778  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  1840   00177A  0E01               	movlw	1
  1841   00177C  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  1842   00177E  0E01               	movlw	1
  1843   001780  EC18  F006         	call	_DIO_SetPinDirection
  1844                           
  1845                           ;motor.c: 10:     DIO_SetPinDirection(PORT_B,1,OUTPUT);
  1846   001784  0E01               	movlw	1
  1847   001786  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  1848   001788  0E01               	movlw	1
  1849   00178A  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  1850   00178C  0E01               	movlw	1
  1851   00178E  EC18  F006         	call	_DIO_SetPinDirection
  1852                           
  1853                           ;motor.c: 11:     DIO_SetPinDirection(PORT_B,2,OUTPUT);
  1854   001792  0E02               	movlw	2
  1855   001794  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  1856   001796  0E01               	movlw	1
  1857   001798  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  1858   00179A  0E01               	movlw	1
  1859   00179C  EC18  F006         	call	_DIO_SetPinDirection
  1860                           
  1861                           ;motor.c: 12:     DIO_SetPinDirection(PORT_B,3,OUTPUT);
  1862   0017A0  0E03               	movlw	3
  1863   0017A2  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  1864   0017A4  0E01               	movlw	1
  1865   0017A6  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  1866   0017A8  0E01               	movlw	1
  1867   0017AA  EC18  F006         	call	_DIO_SetPinDirection
  1868                           
  1869                           ;motor.c: 14:     DIO_SetPinValue(PORT_B,0,LOW);
  1870   0017AE  0E00               	movlw	0
  1871   0017B0  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1872   0017B2  0E00               	movlw	0
  1873   0017B4  6E02               	movwf	DIO_SetPinValue@value^0,c
  1874   0017B6  0E01               	movlw	1
  1875   0017B8  EC37  F007         	call	_DIO_SetPinValue
  1876                           
  1877                           ;motor.c: 15:     DIO_SetPinValue(PORT_B,1,LOW);
  1878   0017BC  0E01               	movlw	1
  1879   0017BE  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1880   0017C0  0E00               	movlw	0
  1881   0017C2  6E02               	movwf	DIO_SetPinValue@value^0,c
  1882   0017C4  0E01               	movlw	1
  1883   0017C6  EC37  F007         	call	_DIO_SetPinValue
  1884                           
  1885                           ;motor.c: 16:     DIO_SetPinValue(PORT_B,2,LOW);
  1886   0017CA  0E02               	movlw	2
  1887   0017CC  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1888   0017CE  0E00               	movlw	0
  1889   0017D0  6E02               	movwf	DIO_SetPinValue@value^0,c
  1890   0017D2  0E01               	movlw	1
  1891   0017D4  EC37  F007         	call	_DIO_SetPinValue
  1892                           
  1893                           ;motor.c: 17:     DIO_SetPinValue(PORT_B,3,LOW);
  1894   0017D8  0E03               	movlw	3
  1895   0017DA  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  1896   0017DC  0E00               	movlw	0
  1897   0017DE  6E02               	movwf	DIO_SetPinValue@value^0,c
  1898   0017E0  0E01               	movlw	1
  1899   0017E2  EC37  F007         	call	_DIO_SetPinValue
  1900   0017E6  0012               	return		;funcret
  1901   0017E8  FFFF               	dw	65535	; errata NOP
  1902   0017EA                     __end_of_motor_init:
  1903                           	callstack 0
  1904                           
  1905 ;; *************** function _led_on *****************
  1906 ;; Defined at:
  1907 ;;		line 12 in file "led.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  port            1    wreg     enum E2181
  1910 ;;  pinNo           1    5[COMRAM] unsigned char 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  port            1    6[COMRAM] enum E2181
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, status,2, status,0, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1922 ;;      Params:         1       0       0       0       0       0       0
  1923 ;;      Locals:         1       0       0       0       0       0       0
  1924 ;;      Temps:          0       0       0       0       0       0       0
  1925 ;;      Totals:         2       0       0       0       0       0       0
  1926 ;;Total ram usage:        2 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 2
  1929 ;; This function calls:
  1930 ;;		_DIO_SetPinValue
  1931 ;; This function is called by:
  1932 ;;		_main
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           	psect	text7
  1937   001A5C                     __ptext7:
  1938                           	callstack 0
  1939   001A5C                     _led_on:
  1940                           	callstack 0
  1941   001A5C  FFFF               	dw	65535	; assembler added errata NOP
  1942                           
  1943                           ;incstack = 0
  1944                           ;led_on@port stored from wreg
  1945   001A5E  6E07               	movwf	led_on@port^0,c
  1946   001A60                     
  1947                           ;led.c: 13:     DIO_SetPinValue(port,pinNo,HIGH);
  1948   001A60  C006  F001         	movff	led_on@pinNo,DIO_SetPinValue@pinNo
  1949   001A64  0E01               	movlw	1
  1950   001A66  6E02               	movwf	DIO_SetPinValue@value^0,c
  1951   001A68  5007               	movf	led_on@port^0,w,c
  1952   001A6A  EC37  F007         	call	_DIO_SetPinValue
  1953   001A6E  0012               	return		;funcret
  1954   001A70  FFFF               	dw	65535	; errata NOP
  1955   001A72                     __end_of_led_on:
  1956                           	callstack 0
  1957                           
  1958 ;; *************** function _led_off *****************
  1959 ;; Defined at:
  1960 ;;		line 15 in file "led.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  port            1    wreg     enum E2181
  1963 ;;  pinNo           1    5[COMRAM] unsigned char 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  port            1    6[COMRAM] enum E2181
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1975 ;;      Params:         1       0       0       0       0       0       0
  1976 ;;      Locals:         1       0       0       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0       0       0
  1978 ;;      Totals:         2       0       0       0       0       0       0
  1979 ;;Total ram usage:        2 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 2
  1982 ;; This function calls:
  1983 ;;		_DIO_SetPinValue
  1984 ;; This function is called by:
  1985 ;;		_main
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text8
  1990   001A72                     __ptext8:
  1991                           	callstack 0
  1992   001A72                     _led_off:
  1993                           	callstack 0
  1994   001A72  FFFF               	dw	65535	; assembler added errata NOP
  1995                           
  1996                           ;incstack = 0
  1997                           ;led_off@port stored from wreg
  1998   001A74  6E07               	movwf	led_off@port^0,c
  1999   001A76                     
  2000                           ;led.c: 16:     DIO_SetPinValue(port,pinNo,LOW);
  2001   001A76  C006  F001         	movff	led_off@pinNo,DIO_SetPinValue@pinNo
  2002   001A7A  0E00               	movlw	0
  2003   001A7C  6E02               	movwf	DIO_SetPinValue@value^0,c
  2004   001A7E  5007               	movf	led_off@port^0,w,c
  2005   001A80  EC37  F007         	call	_DIO_SetPinValue
  2006   001A84  0012               	return		;funcret
  2007   001A86  FFFF               	dw	65535	; errata NOP
  2008   001A88                     __end_of_led_off:
  2009                           	callstack 0
  2010                           
  2011 ;; *************** function _led_init *****************
  2012 ;; Defined at:
  2013 ;;		line 9 in file "led.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  port            1    wreg     enum E2181
  2016 ;;  pinNo           1    5[COMRAM] unsigned char 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  port            1    6[COMRAM] enum E2181
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2028 ;;      Params:         1       0       0       0       0       0       0
  2029 ;;      Locals:         1       0       0       0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0
  2031 ;;      Totals:         2       0       0       0       0       0       0
  2032 ;;Total ram usage:        2 bytes
  2033 ;; Hardware stack levels used: 1
  2034 ;; Hardware stack levels required when called: 2
  2035 ;; This function calls:
  2036 ;;		_DIO_SetPinDirection
  2037 ;; This function is called by:
  2038 ;;		_main
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text9
  2043   001A88                     __ptext9:
  2044                           	callstack 0
  2045   001A88                     _led_init:
  2046                           	callstack 0
  2047   001A88  FFFF               	dw	65535	; assembler added errata NOP
  2048                           
  2049                           ;incstack = 0
  2050                           ;led_init@port stored from wreg
  2051   001A8A  6E07               	movwf	led_init@port^0,c
  2052   001A8C                     
  2053                           ;led.c: 10:     DIO_SetPinDirection(port,pinNo,OUTPUT);
  2054   001A8C  C006  F001         	movff	led_init@pinNo,DIO_SetPinDirection@pinNo
  2055   001A90  0E01               	movlw	1
  2056   001A92  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2057   001A94  5007               	movf	led_init@port^0,w,c
  2058   001A96  EC18  F006         	call	_DIO_SetPinDirection
  2059   001A9A  0012               	return		;funcret
  2060   001A9C  FFFF               	dw	65535	; errata NOP
  2061   001A9E                     __end_of_led_init:
  2062                           	callstack 0
  2063                           
  2064 ;; *************** function _keypad_read *****************
  2065 ;; Defined at:
  2066 ;;		line 95 in file "keypad.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;		None
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  keyValue        1    2[COMRAM] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      unsigned char 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2080 ;;      Params:         0       0       0       0       0       0       0
  2081 ;;      Locals:         1       0       0       0       0       0       0
  2082 ;;      Temps:          1       0       0       0       0       0       0
  2083 ;;      Totals:         2       0       0       0       0       0       0
  2084 ;;Total ram usage:        2 bytes
  2085 ;; Hardware stack levels used: 1
  2086 ;; Hardware stack levels required when called: 2
  2087 ;; This function calls:
  2088 ;;		_keypad_line_scan
  2089 ;;		_keypad_value
  2090 ;; This function is called by:
  2091 ;;		_main
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	text10
  2096   0019CA                     __ptext10:
  2097                           	callstack 0
  2098   0019CA                     _keypad_read:
  2099                           	callstack 0
  2100   0019CA  FFFF               	dw	65535	; assembler added errata NOP
  2101   0019CC                     
  2102                           ;keypad.c: 96:     keypad_line_scan();
  2103   0019CC  EC01  F00D         	call	_keypad_line_scan	;wreg free
  2104   0019D0                     
  2105                           ;keypad.c: 97:     if((PORTC & 0b01110000) != 0){
  2106   0019D0  CF82 F002          	movff	3970,??_keypad_read	;volatile
  2107   0019D4  0E70               	movlw	112
  2108   0019D6  1602               	andwf	??_keypad_read^0,f,c
  2109   0019D8  B4D8               	btfsc	status,2,c
  2110   0019DA  EFF1  F00C         	goto	u381
  2111   0019DE  EFF4  F00C         	goto	u380
  2112   0019E2                     u381:
  2113   0019E2  FFFF               	dw	65535	; assembler added errata NOP
  2114   0019E4  EFFC  F00C         	goto	l1391
  2115   0019E8                     u380:
  2116   0019E8  FFFF               	dw	65535	; assembler added errata NOP
  2117   0019EA                     
  2118                           ;keypad.c: 98:         uint8_t keyValue = keypad_value(PORTC);
  2119   0019EA  5082               	movf	130,w,c	;volatile
  2120   0019EC  EC74  F009         	call	_keypad_value
  2121   0019F0  6E03               	movwf	keypad_read@keyValue^0,c
  2122   0019F2                     
  2123                           ;keypad.c: 99:         return keyValue;
  2124   0019F2  5003               	movf	keypad_read@keyValue^0,w,c
  2125   0019F4  EFFE  F00C         	goto	l260
  2126   0019F8                     l1391:
  2127   0019F8  FFFF               	dw	65535	; assembler added errata NOP
  2128                           
  2129                           ;keypad.c: 101:     return 0;
  2130   0019FA  0E00               	movlw	0
  2131   0019FC                     l260:
  2132   0019FC  FFFF               	dw	65535	; assembler added errata NOP
  2133   0019FE  0012               	return		;funcret
  2134   001A00  FFFF               	dw	65535	; errata NOP
  2135   001A02                     __end_of_keypad_read:
  2136                           	callstack 0
  2137                           
  2138 ;; *************** function _keypad_value *****************
  2139 ;; Defined at:
  2140 ;;		line 52 in file "keypad.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  portValue       1    wreg     unsigned char 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  portValue       1    0[COMRAM] unsigned char 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      unsigned char 
  2147 ;; Registers used:
  2148 ;;		wreg, status,2, status,0
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2154 ;;      Params:         0       0       0       0       0       0       0
  2155 ;;      Locals:         1       0       0       0       0       0       0
  2156 ;;      Temps:          0       0       0       0       0       0       0
  2157 ;;      Totals:         1       0       0       0       0       0       0
  2158 ;;Total ram usage:        1 bytes
  2159 ;; Hardware stack levels used: 1
  2160 ;; Hardware stack levels required when called: 1
  2161 ;; This function calls:
  2162 ;;		Nothing
  2163 ;; This function is called by:
  2164 ;;		_keypad_read
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text11
  2169   0012E8                     __ptext11:
  2170                           	callstack 0
  2171   0012E8                     _keypad_value:
  2172                           	callstack 0
  2173   0012E8  FFFF               	dw	65535	; assembler added errata NOP
  2174                           
  2175                           ;incstack = 0
  2176                           ;keypad_value@portValue stored from wreg
  2177   0012EA  6E01               	movwf	keypad_value@portValue^0,c
  2178   0012EC                     
  2179                           ;keypad.c: 53:     switch (portValue){
  2180   0012EC  EFA8  F009         	goto	l1335
  2181   0012F0                     l1261:
  2182   0012F0  FFFF               	dw	65535	; assembler added errata NOP
  2183                           
  2184                           ;keypad.c: 55:             return '1';
  2185   0012F2  0E31               	movlw	49
  2186   0012F4  EFDE  F009         	goto	l244
  2187   0012F8                     l1267:
  2188   0012F8  FFFF               	dw	65535	; assembler added errata NOP
  2189                           
  2190                           ;keypad.c: 58:             return '4';
  2191   0012FA  0E34               	movlw	52
  2192   0012FC  EFDE  F009         	goto	l244
  2193   001300                     l1273:
  2194   001300  FFFF               	dw	65535	; assembler added errata NOP
  2195                           
  2196                           ;keypad.c: 61:             return '7';
  2197   001302  0E37               	movlw	55
  2198   001304  EFDE  F009         	goto	l244
  2199   001308                     l1279:
  2200   001308  FFFF               	dw	65535	; assembler added errata NOP
  2201                           
  2202                           ;keypad.c: 64:             return '*';
  2203   00130A  0E2A               	movlw	42
  2204   00130C  EFDE  F009         	goto	l244
  2205   001310                     l1285:
  2206   001310  FFFF               	dw	65535	; assembler added errata NOP
  2207                           
  2208                           ;keypad.c: 68:             return '2';
  2209   001312  0E32               	movlw	50
  2210   001314  EFDE  F009         	goto	l244
  2211   001318                     l1291:
  2212   001318  FFFF               	dw	65535	; assembler added errata NOP
  2213                           
  2214                           ;keypad.c: 71:             return '5';
  2215   00131A  0E35               	movlw	53
  2216   00131C  EFDE  F009         	goto	l244
  2217   001320                     l1297:
  2218   001320  FFFF               	dw	65535	; assembler added errata NOP
  2219                           
  2220                           ;keypad.c: 74:             return '8';
  2221   001322  0E38               	movlw	56
  2222   001324  EFDE  F009         	goto	l244
  2223   001328                     l1303:
  2224   001328  FFFF               	dw	65535	; assembler added errata NOP
  2225                           
  2226                           ;keypad.c: 77:             return '0';
  2227   00132A  0E30               	movlw	48
  2228   00132C  EFDE  F009         	goto	l244
  2229   001330                     l1309:
  2230   001330  FFFF               	dw	65535	; assembler added errata NOP
  2231                           
  2232                           ;keypad.c: 81:             return '3';
  2233   001332  0E33               	movlw	51
  2234   001334  EFDE  F009         	goto	l244
  2235   001338                     l1315:
  2236   001338  FFFF               	dw	65535	; assembler added errata NOP
  2237                           
  2238                           ;keypad.c: 84:             return '6';
  2239   00133A  0E36               	movlw	54
  2240   00133C  EFDE  F009         	goto	l244
  2241   001340                     l1321:
  2242   001340  FFFF               	dw	65535	; assembler added errata NOP
  2243                           
  2244                           ;keypad.c: 87:             return '9';
  2245   001342  0E39               	movlw	57
  2246   001344  EFDE  F009         	goto	l244
  2247   001348                     l1327:
  2248   001348  FFFF               	dw	65535	; assembler added errata NOP
  2249                           
  2250                           ;keypad.c: 90:             return '#';
  2251   00134A  0E23               	movlw	35
  2252   00134C  EFDE  F009         	goto	l244
  2253   001350                     l1335:
  2254   001350  FFFF               	dw	65535	; assembler added errata NOP
  2255   001352  5001               	movf	keypad_value@portValue^0,w,c
  2256                           
  2257                           ; Switch size 1, requested type "simple"
  2258                           ; Number of cases is 12, Range of values is 17 to 72
  2259                           ; switch strategies available:
  2260                           ; Name         Instructions Cycles
  2261                           ; simple_byte           37    19 (average)
  2262                           ;	Chosen strategy is simple_byte
  2263   001354  0A11               	xorlw	17	; case 17
  2264   001356  B4D8               	btfsc	status,2,c
  2265   001358  EF78  F009         	goto	l1261
  2266   00135C  0A03               	xorlw	3	; case 18
  2267   00135E  B4D8               	btfsc	status,2,c
  2268   001360  EF7C  F009         	goto	l1267
  2269   001364  0A06               	xorlw	6	; case 20
  2270   001366  B4D8               	btfsc	status,2,c
  2271   001368  EF80  F009         	goto	l1273
  2272   00136C  0A0C               	xorlw	12	; case 24
  2273   00136E  B4D8               	btfsc	status,2,c
  2274   001370  EF84  F009         	goto	l1279
  2275   001374  0A39               	xorlw	57	; case 33
  2276   001376  B4D8               	btfsc	status,2,c
  2277   001378  EF88  F009         	goto	l1285
  2278   00137C  0A03               	xorlw	3	; case 34
  2279   00137E  B4D8               	btfsc	status,2,c
  2280   001380  EF8C  F009         	goto	l1291
  2281   001384  0A06               	xorlw	6	; case 36
  2282   001386  B4D8               	btfsc	status,2,c
  2283   001388  EF90  F009         	goto	l1297
  2284   00138C  0A0C               	xorlw	12	; case 40
  2285   00138E  B4D8               	btfsc	status,2,c
  2286   001390  EF94  F009         	goto	l1303
  2287   001394  0A69               	xorlw	105	; case 65
  2288   001396  B4D8               	btfsc	status,2,c
  2289   001398  EF98  F009         	goto	l1309
  2290   00139C  0A03               	xorlw	3	; case 66
  2291   00139E  B4D8               	btfsc	status,2,c
  2292   0013A0  EF9C  F009         	goto	l1315
  2293   0013A4  0A06               	xorlw	6	; case 68
  2294   0013A6  B4D8               	btfsc	status,2,c
  2295   0013A8  EFA0  F009         	goto	l1321
  2296   0013AC  0A0C               	xorlw	12	; case 72
  2297   0013AE  B4D8               	btfsc	status,2,c
  2298   0013B0  EFA4  F009         	goto	l1327
  2299   0013B4  EFDC  F009         	goto	l1337
  2300   0013B8                     l1337:
  2301   0013B8  FFFF               	dw	65535	; assembler added errata NOP
  2302                           
  2303                           ;keypad.c: 93:     return 0;
  2304   0013BA  0E00               	movlw	0
  2305   0013BC                     l244:
  2306   0013BC  FFFF               	dw	65535	; assembler added errata NOP
  2307   0013BE  0012               	return		;funcret
  2308   0013C0  FFFF               	dw	65535	; errata NOP
  2309   0013C2                     __end_of_keypad_value:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function _keypad_line_scan *****************
  2313 ;; Defined at:
  2314 ;;		line 41 in file "keypad.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2328 ;;      Params:         0       0       0       0       0       0       0
  2329 ;;      Locals:         0       0       0       0       0       0       0
  2330 ;;      Temps:          0       0       0       0       0       0       0
  2331 ;;      Totals:         0       0       0       0       0       0       0
  2332 ;;Total ram usage:        0 bytes
  2333 ;; Hardware stack levels used: 1
  2334 ;; Hardware stack levels required when called: 1
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		_keypad_read
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text12
  2343   001A02                     __ptext12:
  2344                           	callstack 0
  2345   001A02                     _keypad_line_scan:
  2346                           	callstack 0
  2347   001A02  FFFF               	dw	65535	; assembler added errata NOP
  2348   001A04                     
  2349                           ;keypad.c: 42:     static uint8_t keypadScan = 0x01;;keypad.c: 43:     keypadScan =( key
      +                          padScan <<1);
  2350   001A04  5029               	movf	keypad_line_scan@keypadScan^0,w,c
  2351   001A06  2429               	addwf	keypad_line_scan@keypadScan^0,w,c
  2352   001A08  6E29               	movwf	keypad_line_scan@keypadScan^0,c
  2353                           
  2354                           ;keypad.c: 44:     if( keypadScan > 0x08){
  2355   001A0A  0E08               	movlw	8
  2356   001A0C  6429               	cpfsgt	keypad_line_scan@keypadScan^0,c
  2357   001A0E  EF0B  F00D         	goto	u361
  2358   001A12  EF0E  F00D         	goto	u360
  2359   001A16                     u361:
  2360   001A16  FFFF               	dw	65535	; assembler added errata NOP
  2361   001A18  EF11  F00D         	goto	l1257
  2362   001A1C                     u360:
  2363   001A1C  FFFF               	dw	65535	; assembler added errata NOP
  2364   001A1E                     
  2365                           ;keypad.c: 45:         keypadScan = 0x01;
  2366   001A1E  0E01               	movlw	1
  2367   001A20  6E29               	movwf	keypad_line_scan@keypadScan^0,c
  2368   001A22                     l1257:
  2369   001A22  FFFF               	dw	65535	; assembler added errata NOP
  2370                           
  2371                           ;keypad.c: 47:     PORTC = keypadScan;
  2372   001A24  C029  FF82         	movff	keypad_line_scan@keypadScan,3970	;volatile
  2373   001A28  0012               	return		;funcret
  2374   001A2A  FFFF               	dw	65535	; errata NOP
  2375   001A2C                     __end_of_keypad_line_scan:
  2376                           	callstack 0
  2377                           
  2378 ;; *************** function _keypad_init *****************
  2379 ;; Defined at:
  2380 ;;		line 12 in file "keypad.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      void 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2394 ;;      Params:         0       0       0       0       0       0       0
  2395 ;;      Locals:         0       0       0       0       0       0       0
  2396 ;;      Temps:          0       0       0       0       0       0       0
  2397 ;;      Totals:         0       0       0       0       0       0       0
  2398 ;;Total ram usage:        0 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; Hardware stack levels required when called: 2
  2401 ;; This function calls:
  2402 ;;		_DIO_SetPinDirection
  2403 ;; This function is called by:
  2404 ;;		_main
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text13
  2409   00185A                     __ptext13:
  2410                           	callstack 0
  2411   00185A                     _keypad_init:
  2412                           	callstack 0
  2413   00185A  FFFF               	dw	65535	; assembler added errata NOP
  2414   00185C                     
  2415                           ;keypad.c: 14:   DIO_SetPinDirection(PORT_C,0,OUTPUT);
  2416   00185C  0E00               	movlw	0
  2417   00185E  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2418   001860  0E01               	movlw	1
  2419   001862  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2420   001864  0E02               	movlw	2
  2421   001866  EC18  F006         	call	_DIO_SetPinDirection
  2422                           
  2423                           ;keypad.c: 17:   DIO_SetPinDirection(PORT_C,1,OUTPUT);
  2424   00186A  0E01               	movlw	1
  2425   00186C  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2426   00186E  0E01               	movlw	1
  2427   001870  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2428   001872  0E02               	movlw	2
  2429   001874  EC18  F006         	call	_DIO_SetPinDirection
  2430                           
  2431                           ;keypad.c: 20:   DIO_SetPinDirection(PORT_C,2,OUTPUT);
  2432   001878  0E02               	movlw	2
  2433   00187A  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2434   00187C  0E01               	movlw	1
  2435   00187E  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2436   001880  0E02               	movlw	2
  2437   001882  EC18  F006         	call	_DIO_SetPinDirection
  2438                           
  2439                           ;keypad.c: 23:   DIO_SetPinDirection(PORT_C,3,OUTPUT);
  2440   001886  0E03               	movlw	3
  2441   001888  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2442   00188A  0E01               	movlw	1
  2443   00188C  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2444   00188E  0E02               	movlw	2
  2445   001890  EC18  F006         	call	_DIO_SetPinDirection
  2446                           
  2447                           ;keypad.c: 27:   DIO_SetPinDirection(PORT_C,4,INPUT);
  2448   001894  0E04               	movlw	4
  2449   001896  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2450   001898  0E00               	movlw	0
  2451   00189A  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2452   00189C  0E02               	movlw	2
  2453   00189E  EC18  F006         	call	_DIO_SetPinDirection
  2454                           
  2455                           ;keypad.c: 31:   DIO_SetPinDirection(PORT_C,5,INPUT);
  2456   0018A2  0E05               	movlw	5
  2457   0018A4  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2458   0018A6  0E00               	movlw	0
  2459   0018A8  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2460   0018AA  0E02               	movlw	2
  2461   0018AC  EC18  F006         	call	_DIO_SetPinDirection
  2462                           
  2463                           ;keypad.c: 35:   DIO_SetPinDirection(PORT_C,6,INPUT);
  2464   0018B0  0E06               	movlw	6
  2465   0018B2  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  2466   0018B4  0E00               	movlw	0
  2467   0018B6  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2468   0018B8  0E02               	movlw	2
  2469   0018BA  EC18  F006         	call	_DIO_SetPinDirection
  2470   0018BE  0012               	return		;funcret
  2471   0018C0  FFFF               	dw	65535	; errata NOP
  2472   0018C2                     __end_of_keypad_init:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function _buzzer_on *****************
  2476 ;; Defined at:
  2477 ;;		line 12 in file "buzzer.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  port            1    wreg     enum E2181
  2480 ;;  pinNo           1    5[COMRAM] unsigned char 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  port            1    6[COMRAM] enum E2181
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2492 ;;      Params:         1       0       0       0       0       0       0
  2493 ;;      Locals:         1       0       0       0       0       0       0
  2494 ;;      Temps:          0       0       0       0       0       0       0
  2495 ;;      Totals:         2       0       0       0       0       0       0
  2496 ;;Total ram usage:        2 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; Hardware stack levels required when called: 2
  2499 ;; This function calls:
  2500 ;;		_DIO_SetPinValue
  2501 ;; This function is called by:
  2502 ;;		_main
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text14
  2507   001A9E                     __ptext14:
  2508                           	callstack 0
  2509   001A9E                     _buzzer_on:
  2510                           	callstack 0
  2511   001A9E  FFFF               	dw	65535	; assembler added errata NOP
  2512                           
  2513                           ;incstack = 0
  2514                           ;buzzer_on@port stored from wreg
  2515   001AA0  6E07               	movwf	buzzer_on@port^0,c
  2516   001AA2                     
  2517                           ;buzzer.c: 13:     DIO_SetPinValue(port,pinNo,HIGH);
  2518   001AA2  C006  F001         	movff	buzzer_on@pinNo,DIO_SetPinValue@pinNo
  2519   001AA6  0E01               	movlw	1
  2520   001AA8  6E02               	movwf	DIO_SetPinValue@value^0,c
  2521   001AAA  5007               	movf	buzzer_on@port^0,w,c
  2522   001AAC  EC37  F007         	call	_DIO_SetPinValue
  2523   001AB0  0012               	return		;funcret
  2524   001AB2  FFFF               	dw	65535	; errata NOP
  2525   001AB4                     __end_of_buzzer_on:
  2526                           	callstack 0
  2527                           
  2528 ;; *************** function _buzzer_off *****************
  2529 ;; Defined at:
  2530 ;;		line 15 in file "buzzer.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  port            1    wreg     enum E2181
  2533 ;;  pinNo           1    5[COMRAM] unsigned char 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  port            1    6[COMRAM] enum E2181
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2545 ;;      Params:         1       0       0       0       0       0       0
  2546 ;;      Locals:         1       0       0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0
  2548 ;;      Totals:         2       0       0       0       0       0       0
  2549 ;;Total ram usage:        2 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 2
  2552 ;; This function calls:
  2553 ;;		_DIO_SetPinValue
  2554 ;; This function is called by:
  2555 ;;		_main
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text15
  2560   001AB4                     __ptext15:
  2561                           	callstack 0
  2562   001AB4                     _buzzer_off:
  2563                           	callstack 0
  2564   001AB4  FFFF               	dw	65535	; assembler added errata NOP
  2565                           
  2566                           ;incstack = 0
  2567                           ;buzzer_off@port stored from wreg
  2568   001AB6  6E07               	movwf	buzzer_off@port^0,c
  2569   001AB8                     
  2570                           ;buzzer.c: 16:     DIO_SetPinValue(port,pinNo,LOW);
  2571   001AB8  C006  F001         	movff	buzzer_off@pinNo,DIO_SetPinValue@pinNo
  2572   001ABC  0E00               	movlw	0
  2573   001ABE  6E02               	movwf	DIO_SetPinValue@value^0,c
  2574   001AC0  5007               	movf	buzzer_off@port^0,w,c
  2575   001AC2  EC37  F007         	call	_DIO_SetPinValue
  2576   001AC6  0012               	return		;funcret
  2577   001AC8  FFFF               	dw	65535	; errata NOP
  2578   001ACA                     __end_of_buzzer_off:
  2579                           	callstack 0
  2580                           
  2581 ;; *************** function _buzzer_init *****************
  2582 ;; Defined at:
  2583 ;;		line 9 in file "buzzer.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  port            1    wreg     enum E2181
  2586 ;;  pinNo           1    5[COMRAM] unsigned char 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  port            1    6[COMRAM] enum E2181
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      void 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2598 ;;      Params:         1       0       0       0       0       0       0
  2599 ;;      Locals:         1       0       0       0       0       0       0
  2600 ;;      Temps:          0       0       0       0       0       0       0
  2601 ;;      Totals:         2       0       0       0       0       0       0
  2602 ;;Total ram usage:        2 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; Hardware stack levels required when called: 2
  2605 ;; This function calls:
  2606 ;;		_DIO_SetPinDirection
  2607 ;; This function is called by:
  2608 ;;		_main
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text16
  2613   001ACA                     __ptext16:
  2614                           	callstack 0
  2615   001ACA                     _buzzer_init:
  2616                           	callstack 0
  2617   001ACA  FFFF               	dw	65535	; assembler added errata NOP
  2618                           
  2619                           ;incstack = 0
  2620                           ;buzzer_init@port stored from wreg
  2621   001ACC  6E07               	movwf	buzzer_init@port^0,c
  2622   001ACE                     
  2623                           ;buzzer.c: 10:     DIO_SetPinDirection(port,pinNo,OUTPUT);
  2624   001ACE  C006  F001         	movff	buzzer_init@pinNo,DIO_SetPinDirection@pinNo
  2625   001AD2  0E01               	movlw	1
  2626   001AD4  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2627   001AD6  5007               	movf	buzzer_init@port^0,w,c
  2628   001AD8  EC18  F006         	call	_DIO_SetPinDirection
  2629   001ADC  0012               	return		;funcret
  2630   001ADE  FFFF               	dw	65535	; errata NOP
  2631   001AE0                     __end_of_buzzer_init:
  2632                           	callstack 0
  2633                           
  2634 ;; *************** function _button_init *****************
  2635 ;; Defined at:
  2636 ;;		line 8 in file "button.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  port            1    wreg     enum E2181
  2639 ;;  pinNo           1    5[COMRAM] unsigned char 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  port            1    6[COMRAM] enum E2181
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0, cstack
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2651 ;;      Params:         1       0       0       0       0       0       0
  2652 ;;      Locals:         1       0       0       0       0       0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0
  2654 ;;      Totals:         2       0       0       0       0       0       0
  2655 ;;Total ram usage:        2 bytes
  2656 ;; Hardware stack levels used: 1
  2657 ;; Hardware stack levels required when called: 2
  2658 ;; This function calls:
  2659 ;;		_DIO_SetPinDirection
  2660 ;; This function is called by:
  2661 ;;		_main
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text17
  2666   001AE0                     __ptext17:
  2667                           	callstack 0
  2668   001AE0                     _button_init:
  2669                           	callstack 0
  2670   001AE0  FFFF               	dw	65535	; assembler added errata NOP
  2671                           
  2672                           ;incstack = 0
  2673                           ;button_init@port stored from wreg
  2674   001AE2  6E07               	movwf	button_init@port^0,c
  2675   001AE4                     
  2676                           ;button.c: 9:     DIO_SetPinDirection(port,pinNo,INPUT);
  2677   001AE4  C006  F001         	movff	button_init@pinNo,DIO_SetPinDirection@pinNo
  2678   001AE8  0E00               	movlw	0
  2679   001AEA  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  2680   001AEC  5007               	movf	button_init@port^0,w,c
  2681   001AEE  EC18  F006         	call	_DIO_SetPinDirection
  2682   001AF2  0012               	return		;funcret
  2683   001AF4  FFFF               	dw	65535	; errata NOP
  2684   001AF6                     __end_of_button_init:
  2685                           	callstack 0
  2686                           
  2687 ;; *************** function _button_getState *****************
  2688 ;; Defined at:
  2689 ;;		line 11 in file "button.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  port            1    wreg     enum E2181
  2692 ;;  pinNo           1    5[COMRAM] unsigned char 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  port            1    6[COMRAM] enum E2181
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      unsigned char 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2704 ;;      Params:         1       0       0       0       0       0       0
  2705 ;;      Locals:         1       0       0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0
  2707 ;;      Totals:         2       0       0       0       0       0       0
  2708 ;;Total ram usage:        2 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 2
  2711 ;; This function calls:
  2712 ;;		_DIO_GetPinValue
  2713 ;; This function is called by:
  2714 ;;		_main
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text18
  2719   001B1E                     __ptext18:
  2720                           	callstack 0
  2721   001B1E                     _button_getState:
  2722                           	callstack 0
  2723   001B1E  FFFF               	dw	65535	; assembler added errata NOP
  2724                           
  2725                           ;incstack = 0
  2726                           ;button_getState@port stored from wreg
  2727   001B20  6E07               	movwf	button_getState@port^0,c
  2728   001B22                     
  2729                           ;button.c: 12:     return DIO_GetPinValue(port,pinNo);
  2730   001B22  C006  F001         	movff	button_getState@pinNo,DIO_GetPinValue@pinNo
  2731   001B26  5007               	movf	button_getState@port^0,w,c
  2732   001B28  EC56  F008         	call	_DIO_GetPinValue
  2733   001B2C  0012               	return		;funcret
  2734   001B2E  FFFF               	dw	65535	; errata NOP
  2735   001B30                     __end_of_button_getState:
  2736                           	callstack 0
  2737                           
  2738 ;; *************** function _DIO_GetPinValue *****************
  2739 ;; Defined at:
  2740 ;;		line 106 in file "gpio.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  portName        1    wreg     enum E2181
  2743 ;;  pinNo           1    0[COMRAM] unsigned char 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  portName        1    3[COMRAM] enum E2181
  2746 ;;  flush           1    4[COMRAM] unsigned char 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      unsigned char 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2756 ;;      Params:         1       0       0       0       0       0       0
  2757 ;;      Locals:         2       0       0       0       0       0       0
  2758 ;;      Temps:          2       0       0       0       0       0       0
  2759 ;;      Totals:         5       0       0       0       0       0       0
  2760 ;;Total ram usage:        5 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; Hardware stack levels required when called: 1
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_button_getState
  2767 ;;		_pir_getState
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text19
  2772   0010AC                     __ptext19:
  2773                           	callstack 0
  2774   0010AC                     _DIO_GetPinValue:
  2775                           	callstack 0
  2776   0010AC  FFFF               	dw	65535	; assembler added errata NOP
  2777                           
  2778                           ;incstack = 0
  2779                           ;DIO_GetPinValue@portName stored from wreg
  2780   0010AE  6E04               	movwf	DIO_GetPinValue@portName^0,c
  2781   0010B0                     
  2782                           ;gpio.c: 107:     uint8_t flush = PORTA;
  2783   0010B0  CF80 F005          	movff	3968,DIO_GetPinValue@flush	;volatile
  2784                           
  2785                           ;gpio.c: 108:     flush = PORTB;
  2786   0010B4  CF81 F005          	movff	3969,DIO_GetPinValue@flush	;volatile
  2787                           
  2788                           ;gpio.c: 109:     flush = PORTC;
  2789   0010B8  CF82 F005          	movff	3970,DIO_GetPinValue@flush	;volatile
  2790                           
  2791                           ;gpio.c: 110:     flush = PORTD;
  2792   0010BC  CF83 F005          	movff	3971,DIO_GetPinValue@flush	;volatile
  2793                           
  2794                           ;gpio.c: 111:     flush = PORTE;
  2795   0010C0  CF84 F005          	movff	3972,DIO_GetPinValue@flush	;volatile
  2796                           
  2797                           ;gpio.c: 112:     switch (portName){
  2798   0010C4  EFC3  F008         	goto	l1859
  2799   0010C8                     l1827:
  2800   0010C8  FFFF               	dw	65535	; assembler added errata NOP
  2801                           
  2802                           ;gpio.c: 114:             return (((PORTA)>>(pinNo)) & 1);
  2803   0010CA  C001  F002         	movff	DIO_GetPinValue@pinNo,??_DIO_GetPinValue
  2804   0010CE  CF80 F003          	movff	3968,??_DIO_GetPinValue+1	;volatile
  2805   0010D2  2A02               	incf	??_DIO_GetPinValue^0,f,c
  2806   0010D4  EF6F  F008         	goto	u1114
  2807   0010D8                     u1115:
  2808   0010D8  FFFF               	dw	65535	; assembler added errata NOP
  2809   0010DA  90D8               	bcf	status,0,c
  2810   0010DC  3203               	rrcf	(??_DIO_GetPinValue+1)^0,f,c
  2811   0010DE                     u1114:
  2812   0010DE  FFFF               	dw	65535	; assembler added errata NOP
  2813   0010E0  2E02               	decfsz	??_DIO_GetPinValue^0,f,c
  2814   0010E2  EF6C  F008         	goto	u1115
  2815   0010E6  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2816   0010E8  0B01               	andlw	1
  2817   0010EA  EFE8  F008         	goto	l191
  2818   0010EE                     l1833:
  2819   0010EE  FFFF               	dw	65535	; assembler added errata NOP
  2820                           
  2821                           ;gpio.c: 117:             return (((PORTB)>>(pinNo)) & 1);
  2822   0010F0  C001  F002         	movff	DIO_GetPinValue@pinNo,??_DIO_GetPinValue
  2823   0010F4  CF81 F003          	movff	3969,??_DIO_GetPinValue+1	;volatile
  2824   0010F8  2A02               	incf	??_DIO_GetPinValue^0,f,c
  2825   0010FA  EF82  F008         	goto	u1124
  2826   0010FE                     u1125:
  2827   0010FE  FFFF               	dw	65535	; assembler added errata NOP
  2828   001100  90D8               	bcf	status,0,c
  2829   001102  3203               	rrcf	(??_DIO_GetPinValue+1)^0,f,c
  2830   001104                     u1124:
  2831   001104  FFFF               	dw	65535	; assembler added errata NOP
  2832   001106  2E02               	decfsz	??_DIO_GetPinValue^0,f,c
  2833   001108  EF7F  F008         	goto	u1125
  2834   00110C  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2835   00110E  0B01               	andlw	1
  2836   001110  EFE8  F008         	goto	l191
  2837   001114                     l1839:
  2838   001114  FFFF               	dw	65535	; assembler added errata NOP
  2839                           
  2840                           ;gpio.c: 120:             return (((PORTC)>>(pinNo)) & 1);
  2841   001116  C001  F002         	movff	DIO_GetPinValue@pinNo,??_DIO_GetPinValue
  2842   00111A  CF82 F003          	movff	3970,??_DIO_GetPinValue+1	;volatile
  2843   00111E  2A02               	incf	??_DIO_GetPinValue^0,f,c
  2844   001120  EF95  F008         	goto	u1134
  2845   001124                     u1135:
  2846   001124  FFFF               	dw	65535	; assembler added errata NOP
  2847   001126  90D8               	bcf	status,0,c
  2848   001128  3203               	rrcf	(??_DIO_GetPinValue+1)^0,f,c
  2849   00112A                     u1134:
  2850   00112A  FFFF               	dw	65535	; assembler added errata NOP
  2851   00112C  2E02               	decfsz	??_DIO_GetPinValue^0,f,c
  2852   00112E  EF92  F008         	goto	u1135
  2853   001132  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2854   001134  0B01               	andlw	1
  2855   001136  EFE8  F008         	goto	l191
  2856   00113A                     l1845:
  2857   00113A  FFFF               	dw	65535	; assembler added errata NOP
  2858                           
  2859                           ;gpio.c: 123:             return (((PORTD)>>(pinNo)) & 1);
  2860   00113C  C001  F002         	movff	DIO_GetPinValue@pinNo,??_DIO_GetPinValue
  2861   001140  CF83 F003          	movff	3971,??_DIO_GetPinValue+1	;volatile
  2862   001144  2A02               	incf	??_DIO_GetPinValue^0,f,c
  2863   001146  EFA8  F008         	goto	u1144
  2864   00114A                     u1145:
  2865   00114A  FFFF               	dw	65535	; assembler added errata NOP
  2866   00114C  90D8               	bcf	status,0,c
  2867   00114E  3203               	rrcf	(??_DIO_GetPinValue+1)^0,f,c
  2868   001150                     u1144:
  2869   001150  FFFF               	dw	65535	; assembler added errata NOP
  2870   001152  2E02               	decfsz	??_DIO_GetPinValue^0,f,c
  2871   001154  EFA5  F008         	goto	u1145
  2872   001158  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2873   00115A  0B01               	andlw	1
  2874   00115C  EFE8  F008         	goto	l191
  2875   001160                     l1851:
  2876   001160  FFFF               	dw	65535	; assembler added errata NOP
  2877                           
  2878                           ;gpio.c: 126:             return (((PORTE)>>(pinNo)) & 1);
  2879   001162  C001  F002         	movff	DIO_GetPinValue@pinNo,??_DIO_GetPinValue
  2880   001166  CF84 F003          	movff	3972,??_DIO_GetPinValue+1	;volatile
  2881   00116A  2A02               	incf	??_DIO_GetPinValue^0,f,c
  2882   00116C  EFBB  F008         	goto	u1154
  2883   001170                     u1155:
  2884   001170  FFFF               	dw	65535	; assembler added errata NOP
  2885   001172  90D8               	bcf	status,0,c
  2886   001174  3203               	rrcf	(??_DIO_GetPinValue+1)^0,f,c
  2887   001176                     u1154:
  2888   001176  FFFF               	dw	65535	; assembler added errata NOP
  2889   001178  2E02               	decfsz	??_DIO_GetPinValue^0,f,c
  2890   00117A  EFB8  F008         	goto	u1155
  2891   00117E  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2892   001180  0B01               	andlw	1
  2893   001182  EFE8  F008         	goto	l191
  2894   001186                     l1859:
  2895   001186  FFFF               	dw	65535	; assembler added errata NOP
  2896   001188  5004               	movf	DIO_GetPinValue@portName^0,w,c
  2897   00118A  6E02               	movwf	??_DIO_GetPinValue^0,c
  2898   00118C  6A03               	clrf	(??_DIO_GetPinValue+1)^0,c
  2899                           
  2900                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2901                           ; Switch size 1, requested type "simple"
  2902                           ; Number of cases is 1, Range of values is 0 to 0
  2903                           ; switch strategies available:
  2904                           ; Name         Instructions Cycles
  2905                           ; simple_byte            4     3 (average)
  2906                           ;	Chosen strategy is simple_byte
  2907   00118E  5003               	movf	(??_DIO_GetPinValue+1)^0,w,c
  2908   001190  0A00               	xorlw	0	; case 0
  2909   001192  B4D8               	btfsc	status,2,c
  2910   001194  EFCE  F008         	goto	l2175
  2911   001198  EFE6  F008         	goto	l1861
  2912   00119C                     l2175:
  2913   00119C  FFFF               	dw	65535	; assembler added errata NOP
  2914                           
  2915                           ; Switch size 1, requested type "simple"
  2916                           ; Number of cases is 5, Range of values is 0 to 4
  2917                           ; switch strategies available:
  2918                           ; Name         Instructions Cycles
  2919                           ; simple_byte           16     9 (average)
  2920                           ;	Chosen strategy is simple_byte
  2921   00119E  5002               	movf	??_DIO_GetPinValue^0,w,c
  2922   0011A0  0A00               	xorlw	0	; case 0
  2923   0011A2  B4D8               	btfsc	status,2,c
  2924   0011A4  EF64  F008         	goto	l1827
  2925   0011A8  0A01               	xorlw	1	; case 1
  2926   0011AA  B4D8               	btfsc	status,2,c
  2927   0011AC  EF77  F008         	goto	l1833
  2928   0011B0  0A03               	xorlw	3	; case 2
  2929   0011B2  B4D8               	btfsc	status,2,c
  2930   0011B4  EF8A  F008         	goto	l1839
  2931   0011B8  0A01               	xorlw	1	; case 3
  2932   0011BA  B4D8               	btfsc	status,2,c
  2933   0011BC  EF9D  F008         	goto	l1845
  2934   0011C0  0A07               	xorlw	7	; case 4
  2935   0011C2  B4D8               	btfsc	status,2,c
  2936   0011C4  EFB0  F008         	goto	l1851
  2937   0011C8  EFE6  F008         	goto	l1861
  2938   0011CC                     l1861:
  2939   0011CC  FFFF               	dw	65535	; assembler added errata NOP
  2940                           
  2941                           ;gpio.c: 129:     return 1;
  2942   0011CE  0E01               	movlw	1
  2943   0011D0                     l191:
  2944   0011D0  FFFF               	dw	65535	; assembler added errata NOP
  2945   0011D2  0012               	return		;funcret
  2946   0011D4  FFFF               	dw	65535	; errata NOP
  2947   0011D6                     __end_of_DIO_GetPinValue:
  2948                           	callstack 0
  2949                           
  2950 ;; *************** function _Timer0_init *****************
  2951 ;; Defined at:
  2952 ;;		line 47 in file "main.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2966 ;;      Params:         0       0       0       0       0       0       0
  2967 ;;      Locals:         0       0       0       0       0       0       0
  2968 ;;      Temps:          0       0       0       0       0       0       0
  2969 ;;      Totals:         0       0       0       0       0       0       0
  2970 ;;Total ram usage:        0 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 1
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_main
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text20
  2981   001AF6                     __ptext20:
  2982                           	callstack 0
  2983   001AF6                     _Timer0_init:
  2984                           	callstack 0
  2985   001AF6  FFFF               	dw	65535	; assembler added errata NOP
  2986   001AF8                     
  2987                           ;main.c: 48:     T0CON = 0X87;
  2988   001AF8  0E87               	movlw	135
  2989   001AFA  6ED5               	movwf	213,c	;volatile
  2990                           
  2991                           ;main.c: 49:     TMR0H = 0xF0;
  2992   001AFC  0EF0               	movlw	240
  2993   001AFE  6ED7               	movwf	215,c	;volatile
  2994                           
  2995                           ;main.c: 50:     TMR0L = 0xBD;
  2996   001B00  0EBD               	movlw	189
  2997   001B02  6ED6               	movwf	214,c	;volatile
  2998   001B04                     
  2999                           ;main.c: 51:     TMR0IE = 1;
  3000   001B04  8AF2               	bsf	4082,5,c	;volatile
  3001   001B06                     
  3002                           ;main.c: 52:     GIE =1;
  3003   001B06  8EF2               	bsf	4082,7,c	;volatile
  3004   001B08  0012               	return		;funcret
  3005   001B0A  FFFF               	dw	65535	; errata NOP
  3006   001B0C                     __end_of_Timer0_init:
  3007                           	callstack 0
  3008                           
  3009 ;; *************** function _LCD_init *****************
  3010 ;; Defined at:
  3011 ;;		line 14 in file "lcd.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3025 ;;      Params:         0       0       0       0       0       0       0
  3026 ;;      Locals:         0       0       0       0       0       0       0
  3027 ;;      Temps:          0       0       0       0       0       0       0
  3028 ;;      Totals:         0       0       0       0       0       0       0
  3029 ;;Total ram usage:        0 bytes
  3030 ;; Hardware stack levels used: 1
  3031 ;; Hardware stack levels required when called: 3
  3032 ;; This function calls:
  3033 ;;		_DIO_SetPinDirection
  3034 ;;		_DIO_SetPortValue
  3035 ;;		_LCD_sendCommand
  3036 ;; This function is called by:
  3037 ;;		_main
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text21
  3042   0015E0                     __ptext21:
  3043                           	callstack 0
  3044   0015E0                     _LCD_init:
  3045                           	callstack 0
  3046   0015E0  FFFF               	dw	65535	; assembler added errata NOP
  3047   0015E2                     
  3048                           ;lcd.c: 17:  DIO_SetPinDirection( PORT_D,3, OUTPUT);
  3049   0015E2  0E03               	movlw	3
  3050   0015E4  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3051   0015E6  0E01               	movlw	1
  3052   0015E8  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3053   0015EA  0E03               	movlw	3
  3054   0015EC  EC18  F006         	call	_DIO_SetPinDirection
  3055                           
  3056                           ;lcd.c: 18:  DIO_SetPinDirection( PORT_D,1, OUTPUT);
  3057   0015F0  0E01               	movlw	1
  3058   0015F2  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3059   0015F4  0E01               	movlw	1
  3060   0015F6  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3061   0015F8  0E03               	movlw	3
  3062   0015FA  EC18  F006         	call	_DIO_SetPinDirection
  3063                           
  3064                           ;lcd.c: 19:  DIO_SetPinDirection( PORT_D,2, OUTPUT);
  3065   0015FE  0E02               	movlw	2
  3066   001600  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3067   001602  0E01               	movlw	1
  3068   001604  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3069   001606  0E03               	movlw	3
  3070   001608  EC18  F006         	call	_DIO_SetPinDirection
  3071                           
  3072                           ;lcd.c: 21:  DIO_SetPortValue(PORT_D, 0x00);
  3073   00160C  0E00               	movlw	0
  3074   00160E  6E01               	movwf	DIO_SetPortValue@value^0,c
  3075   001610  0E03               	movlw	3
  3076   001612  EC3A  F00B         	call	_DIO_SetPortValue
  3077                           
  3078                           ;lcd.c: 22:  DIO_SetPortValue(PORT_D, 0x00);
  3079   001616  0E00               	movlw	0
  3080   001618  6E01               	movwf	DIO_SetPortValue@value^0,c
  3081   00161A  0E03               	movlw	3
  3082   00161C  EC3A  F00B         	call	_DIO_SetPortValue
  3083                           
  3084                           ;lcd.c: 25:     DIO_SetPinDirection(PORT_D, 4, OUTPUT);
  3085   001620  0E04               	movlw	4
  3086   001622  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3087   001624  0E01               	movlw	1
  3088   001626  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3089   001628  0E03               	movlw	3
  3090   00162A  EC18  F006         	call	_DIO_SetPinDirection
  3091                           
  3092                           ;lcd.c: 26:     DIO_SetPinDirection(PORT_D, 5, OUTPUT);
  3093   00162E  0E05               	movlw	5
  3094   001630  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3095   001632  0E01               	movlw	1
  3096   001634  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3097   001636  0E03               	movlw	3
  3098   001638  EC18  F006         	call	_DIO_SetPinDirection
  3099                           
  3100                           ;lcd.c: 27:     DIO_SetPinDirection(PORT_D, 6, OUTPUT);
  3101   00163C  0E06               	movlw	6
  3102   00163E  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3103   001640  0E01               	movlw	1
  3104   001642  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3105   001644  0E03               	movlw	3
  3106   001646  EC18  F006         	call	_DIO_SetPinDirection
  3107                           
  3108                           ;lcd.c: 28:     DIO_SetPinDirection(PORT_D, 7, OUTPUT);
  3109   00164A  0E07               	movlw	7
  3110   00164C  6E01               	movwf	DIO_SetPinDirection@pinNo^0,c
  3111   00164E  0E01               	movlw	1
  3112   001650  6E02               	movwf	DIO_SetPinDirection@direction^0,c
  3113   001652  0E03               	movlw	3
  3114   001654  EC18  F006         	call	_DIO_SetPinDirection
  3115                           
  3116                           ;lcd.c: 30:  LCD_sendCommand(0x02);
  3117   001658  0E02               	movlw	2
  3118   00165A  EC42  F00A         	call	_LCD_sendCommand
  3119                           
  3120                           ;lcd.c: 31:  LCD_sendCommand(0x28);
  3121   00165E  0E28               	movlw	40
  3122   001660  EC42  F00A         	call	_LCD_sendCommand
  3123                           
  3124                           ;lcd.c: 34:  LCD_sendCommand(0x0C);
  3125   001664  0E0C               	movlw	12
  3126   001666  EC42  F00A         	call	_LCD_sendCommand
  3127                           
  3128                           ;lcd.c: 35:  LCD_sendCommand(0x01);
  3129   00166A  0E01               	movlw	1
  3130   00166C  EC42  F00A         	call	_LCD_sendCommand
  3131   001670  0012               	return		;funcret
  3132   001672  FFFF               	dw	65535	; errata NOP
  3133   001674                     __end_of_LCD_init:
  3134                           	callstack 0
  3135                           
  3136 ;; *************** function _DIO_SetPortValue *****************
  3137 ;; Defined at:
  3138 ;;		line 132 in file "gpio.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  portName        1    wreg     enum E2181
  3141 ;;  value           1    0[COMRAM] unsigned char 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  portName        1    3[COMRAM] enum E2181
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3153 ;;      Params:         1       0       0       0       0       0       0
  3154 ;;      Locals:         1       0       0       0       0       0       0
  3155 ;;      Temps:          2       0       0       0       0       0       0
  3156 ;;      Totals:         4       0       0       0       0       0       0
  3157 ;;Total ram usage:        4 bytes
  3158 ;; Hardware stack levels used: 1
  3159 ;; Hardware stack levels required when called: 1
  3160 ;; This function calls:
  3161 ;;		Nothing
  3162 ;; This function is called by:
  3163 ;;		_LCD_init
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text22
  3168   001674                     __ptext22:
  3169                           	callstack 0
  3170   001674                     _DIO_SetPortValue:
  3171                           	callstack 0
  3172   001674  FFFF               	dw	65535	; assembler added errata NOP
  3173                           
  3174                           ;incstack = 0
  3175                           ;DIO_SetPortValue@portName stored from wreg
  3176   001676  6E04               	movwf	DIO_SetPortValue@portName^0,c
  3177   001678                     
  3178                           ;gpio.c: 133:     switch (portName){
  3179   001678  EF57  F00B         	goto	l1873
  3180   00167C                     l200:
  3181   00167C  FFFF               	dw	65535	; assembler added errata NOP
  3182                           
  3183                           ;gpio.c: 135:              PORTA = value;
  3184   00167E  C001  FF80         	movff	DIO_SetPortValue@value,3968	;volatile
  3185                           
  3186                           ;gpio.c: 136:         break;
  3187   001682  EF7A  F00B         	goto	l206
  3188   001686                     l202:
  3189   001686  FFFF               	dw	65535	; assembler added errata NOP
  3190                           
  3191                           ;gpio.c: 138:              PORTB = value;
  3192   001688  C001  FF81         	movff	DIO_SetPortValue@value,3969	;volatile
  3193                           
  3194                           ;gpio.c: 139:         break;
  3195   00168C  EF7A  F00B         	goto	l206
  3196   001690                     l203:
  3197   001690  FFFF               	dw	65535	; assembler added errata NOP
  3198                           
  3199                           ;gpio.c: 141:              PORTC = value;
  3200   001692  C001  FF82         	movff	DIO_SetPortValue@value,3970	;volatile
  3201                           
  3202                           ;gpio.c: 142:         break;
  3203   001696  EF7A  F00B         	goto	l206
  3204   00169A                     l204:
  3205   00169A  FFFF               	dw	65535	; assembler added errata NOP
  3206                           
  3207                           ;gpio.c: 144:              PORTD = value;
  3208   00169C  C001  FF83         	movff	DIO_SetPortValue@value,3971	;volatile
  3209                           
  3210                           ;gpio.c: 145:         break;
  3211   0016A0  EF7A  F00B         	goto	l206
  3212   0016A4                     l205:
  3213   0016A4  FFFF               	dw	65535	; assembler added errata NOP
  3214                           
  3215                           ;gpio.c: 147:              PORTE = value;
  3216   0016A6  C001  FF84         	movff	DIO_SetPortValue@value,3972	;volatile
  3217                           
  3218                           ;gpio.c: 148:         break;
  3219   0016AA  EF7A  F00B         	goto	l206
  3220   0016AE                     l1873:
  3221   0016AE  FFFF               	dw	65535	; assembler added errata NOP
  3222   0016B0  5004               	movf	DIO_SetPortValue@portName^0,w,c
  3223   0016B2  6E02               	movwf	??_DIO_SetPortValue^0,c
  3224   0016B4  6A03               	clrf	(??_DIO_SetPortValue+1)^0,c
  3225                           
  3226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3227                           ; Switch size 1, requested type "simple"
  3228                           ; Number of cases is 1, Range of values is 0 to 0
  3229                           ; switch strategies available:
  3230                           ; Name         Instructions Cycles
  3231                           ; simple_byte            4     3 (average)
  3232                           ;	Chosen strategy is simple_byte
  3233   0016B6  5003               	movf	(??_DIO_SetPortValue+1)^0,w,c
  3234   0016B8  0A00               	xorlw	0	; case 0
  3235   0016BA  B4D8               	btfsc	status,2,c
  3236   0016BC  EF62  F00B         	goto	l2177
  3237   0016C0  EF7A  F00B         	goto	l206
  3238   0016C4                     l2177:
  3239   0016C4  FFFF               	dw	65535	; assembler added errata NOP
  3240                           
  3241                           ; Switch size 1, requested type "simple"
  3242                           ; Number of cases is 5, Range of values is 0 to 4
  3243                           ; switch strategies available:
  3244                           ; Name         Instructions Cycles
  3245                           ; simple_byte           16     9 (average)
  3246                           ;	Chosen strategy is simple_byte
  3247   0016C6  5002               	movf	??_DIO_SetPortValue^0,w,c
  3248   0016C8  0A00               	xorlw	0	; case 0
  3249   0016CA  B4D8               	btfsc	status,2,c
  3250   0016CC  EF3E  F00B         	goto	l200
  3251   0016D0  0A01               	xorlw	1	; case 1
  3252   0016D2  B4D8               	btfsc	status,2,c
  3253   0016D4  EF43  F00B         	goto	l202
  3254   0016D8  0A03               	xorlw	3	; case 2
  3255   0016DA  B4D8               	btfsc	status,2,c
  3256   0016DC  EF48  F00B         	goto	l203
  3257   0016E0  0A01               	xorlw	1	; case 3
  3258   0016E2  B4D8               	btfsc	status,2,c
  3259   0016E4  EF4D  F00B         	goto	l204
  3260   0016E8  0A07               	xorlw	7	; case 4
  3261   0016EA  B4D8               	btfsc	status,2,c
  3262   0016EC  EF52  F00B         	goto	l205
  3263   0016F0  EF7A  F00B         	goto	l206
  3264   0016F4                     l206:
  3265   0016F4  FFFF               	dw	65535	; assembler added errata NOP
  3266   0016F6  0012               	return		;funcret
  3267   0016F8  FFFF               	dw	65535	; errata NOP
  3268   0016FA                     __end_of_DIO_SetPortValue:
  3269                           	callstack 0
  3270                           
  3271 ;; *************** function _DIO_SetPinDirection *****************
  3272 ;; Defined at:
  3273 ;;		line 15 in file "gpio.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  portName        1    wreg     enum E2181
  3276 ;;  pinNo           1    0[COMRAM] unsigned char 
  3277 ;;  direction       1    1[COMRAM] enum E2177
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  portName        1    4[COMRAM] enum E2181
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, status,0
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3289 ;;      Params:         2       0       0       0       0       0       0
  3290 ;;      Locals:         1       0       0       0       0       0       0
  3291 ;;      Temps:          2       0       0       0       0       0       0
  3292 ;;      Totals:         5       0       0       0       0       0       0
  3293 ;;Total ram usage:        5 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; Hardware stack levels required when called: 1
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_keypad_init
  3300 ;;		_LCD_init
  3301 ;;		_motor_init
  3302 ;;		_led_init
  3303 ;;		_buzzer_init
  3304 ;;		_button_init
  3305 ;;		_pir_init
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text23
  3310   000C30                     __ptext23:
  3311                           	callstack 0
  3312   000C30                     _DIO_SetPinDirection:
  3313                           	callstack 0
  3314   000C30  FFFF               	dw	65535	; assembler added errata NOP
  3315                           
  3316                           ;incstack = 0
  3317                           ;DIO_SetPinDirection@portName stored from wreg
  3318   000C32  6E05               	movwf	DIO_SetPinDirection@portName^0,c
  3319   000C34                     
  3320                           ;gpio.c: 16:     switch (portName){
  3321   000C34  EF11  F007         	goto	l1819
  3322   000C38                     l1787:
  3323   000C38  FFFF               	dw	65535	; assembler added errata NOP
  3324                           
  3325                           ;gpio.c: 18:             if(direction == OUTPUT){
  3326   000C3A  0402               	decf	DIO_SetPinDirection@direction^0,w,c
  3327   000C3C  A4D8               	btfss	status,2,c
  3328   000C3E  EF23  F006         	goto	u961
  3329   000C42  EF26  F006         	goto	u960
  3330   000C46                     u961:
  3331   000C46  FFFF               	dw	65535	; assembler added errata NOP
  3332   000C48  EF3A  F006         	goto	l1791
  3333   000C4C                     u960:
  3334   000C4C  FFFF               	dw	65535	; assembler added errata NOP
  3335   000C4E                     
  3336                           ;gpio.c: 19:                 (TRISA)&=~(1<<(pinNo));
  3337   000C4E  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3338   000C52  0E01               	movlw	1
  3339   000C54  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3340   000C56  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3341   000C58  EF31  F006         	goto	u974
  3342   000C5C                     u975:
  3343   000C5C  FFFF               	dw	65535	; assembler added errata NOP
  3344   000C5E  90D8               	bcf	status,0,c
  3345   000C60  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3346   000C62                     u974:
  3347   000C62  FFFF               	dw	65535	; assembler added errata NOP
  3348   000C64  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3349   000C66  EF2E  F006         	goto	u975
  3350   000C6A  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3351   000C6C  0AFF               	xorlw	255
  3352   000C6E  1692               	andwf	146,f,c	;volatile
  3353                           
  3354                           ;gpio.c: 20:             }
  3355   000C70  EF34  F007         	goto	l166
  3356   000C74                     l1791:
  3357   000C74  FFFF               	dw	65535	; assembler added errata NOP
  3358                           
  3359                           ;gpio.c: 22:                 (TRISA)|= 1<<(pinNo);
  3360   000C76  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3361   000C7A  0E01               	movlw	1
  3362   000C7C  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3363   000C7E  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3364   000C80  EF45  F006         	goto	u984
  3365   000C84                     u985:
  3366   000C84  FFFF               	dw	65535	; assembler added errata NOP
  3367   000C86  90D8               	bcf	status,0,c
  3368   000C88  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3369   000C8A                     u984:
  3370   000C8A  FFFF               	dw	65535	; assembler added errata NOP
  3371   000C8C  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3372   000C8E  EF42  F006         	goto	u985
  3373   000C92  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3374   000C94  1292               	iorwf	146,f,c	;volatile
  3375   000C96  EF34  F007         	goto	l166
  3376   000C9A                     l1793:
  3377   000C9A  FFFF               	dw	65535	; assembler added errata NOP
  3378                           
  3379                           ;gpio.c: 26:             if(direction == OUTPUT){
  3380   000C9C  0402               	decf	DIO_SetPinDirection@direction^0,w,c
  3381   000C9E  A4D8               	btfss	status,2,c
  3382   000CA0  EF54  F006         	goto	u991
  3383   000CA4  EF57  F006         	goto	u990
  3384   000CA8                     u991:
  3385   000CA8  FFFF               	dw	65535	; assembler added errata NOP
  3386   000CAA  EF6B  F006         	goto	l1797
  3387   000CAE                     u990:
  3388   000CAE  FFFF               	dw	65535	; assembler added errata NOP
  3389   000CB0                     
  3390                           ;gpio.c: 27:                 (TRISB)&=~(1<<(pinNo));
  3391   000CB0  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3392   000CB4  0E01               	movlw	1
  3393   000CB6  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3394   000CB8  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3395   000CBA  EF62  F006         	goto	u1004
  3396   000CBE                     u1005:
  3397   000CBE  FFFF               	dw	65535	; assembler added errata NOP
  3398   000CC0  90D8               	bcf	status,0,c
  3399   000CC2  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3400   000CC4                     u1004:
  3401   000CC4  FFFF               	dw	65535	; assembler added errata NOP
  3402   000CC6  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3403   000CC8  EF5F  F006         	goto	u1005
  3404   000CCC  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3405   000CCE  0AFF               	xorlw	255
  3406   000CD0  1693               	andwf	147,f,c	;volatile
  3407                           
  3408                           ;gpio.c: 28:             }
  3409   000CD2  EF34  F007         	goto	l166
  3410   000CD6                     l1797:
  3411   000CD6  FFFF               	dw	65535	; assembler added errata NOP
  3412                           
  3413                           ;gpio.c: 30:                 (TRISB)|= 1<<(pinNo);
  3414   000CD8  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3415   000CDC  0E01               	movlw	1
  3416   000CDE  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3417   000CE0  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3418   000CE2  EF76  F006         	goto	u1014
  3419   000CE6                     u1015:
  3420   000CE6  FFFF               	dw	65535	; assembler added errata NOP
  3421   000CE8  90D8               	bcf	status,0,c
  3422   000CEA  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3423   000CEC                     u1014:
  3424   000CEC  FFFF               	dw	65535	; assembler added errata NOP
  3425   000CEE  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3426   000CF0  EF73  F006         	goto	u1015
  3427   000CF4  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3428   000CF6  1293               	iorwf	147,f,c	;volatile
  3429   000CF8  EF34  F007         	goto	l166
  3430   000CFC                     l1799:
  3431   000CFC  FFFF               	dw	65535	; assembler added errata NOP
  3432                           
  3433                           ;gpio.c: 34:             if(direction == OUTPUT){
  3434   000CFE  0402               	decf	DIO_SetPinDirection@direction^0,w,c
  3435   000D00  A4D8               	btfss	status,2,c
  3436   000D02  EF85  F006         	goto	u1021
  3437   000D06  EF88  F006         	goto	u1020
  3438   000D0A                     u1021:
  3439   000D0A  FFFF               	dw	65535	; assembler added errata NOP
  3440   000D0C  EF9C  F006         	goto	l1803
  3441   000D10                     u1020:
  3442   000D10  FFFF               	dw	65535	; assembler added errata NOP
  3443   000D12                     
  3444                           ;gpio.c: 35:                 (TRISC)&=~(1<<(pinNo));
  3445   000D12  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3446   000D16  0E01               	movlw	1
  3447   000D18  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3448   000D1A  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3449   000D1C  EF93  F006         	goto	u1034
  3450   000D20                     u1035:
  3451   000D20  FFFF               	dw	65535	; assembler added errata NOP
  3452   000D22  90D8               	bcf	status,0,c
  3453   000D24  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3454   000D26                     u1034:
  3455   000D26  FFFF               	dw	65535	; assembler added errata NOP
  3456   000D28  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3457   000D2A  EF90  F006         	goto	u1035
  3458   000D2E  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3459   000D30  0AFF               	xorlw	255
  3460   000D32  1694               	andwf	148,f,c	;volatile
  3461                           
  3462                           ;gpio.c: 36:             }
  3463   000D34  EF34  F007         	goto	l166
  3464   000D38                     l1803:
  3465   000D38  FFFF               	dw	65535	; assembler added errata NOP
  3466                           
  3467                           ;gpio.c: 38:                 (TRISC)|= 1<<(pinNo);
  3468   000D3A  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3469   000D3E  0E01               	movlw	1
  3470   000D40  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3471   000D42  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3472   000D44  EFA7  F006         	goto	u1044
  3473   000D48                     u1045:
  3474   000D48  FFFF               	dw	65535	; assembler added errata NOP
  3475   000D4A  90D8               	bcf	status,0,c
  3476   000D4C  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3477   000D4E                     u1044:
  3478   000D4E  FFFF               	dw	65535	; assembler added errata NOP
  3479   000D50  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3480   000D52  EFA4  F006         	goto	u1045
  3481   000D56  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3482   000D58  1294               	iorwf	148,f,c	;volatile
  3483   000D5A  EF34  F007         	goto	l166
  3484   000D5E                     l1805:
  3485   000D5E  FFFF               	dw	65535	; assembler added errata NOP
  3486                           
  3487                           ;gpio.c: 42:             if(direction == OUTPUT){
  3488   000D60  0402               	decf	DIO_SetPinDirection@direction^0,w,c
  3489   000D62  A4D8               	btfss	status,2,c
  3490   000D64  EFB6  F006         	goto	u1051
  3491   000D68  EFB9  F006         	goto	u1050
  3492   000D6C                     u1051:
  3493   000D6C  FFFF               	dw	65535	; assembler added errata NOP
  3494   000D6E  EFCD  F006         	goto	l1809
  3495   000D72                     u1050:
  3496   000D72  FFFF               	dw	65535	; assembler added errata NOP
  3497   000D74                     
  3498                           ;gpio.c: 43:                 (TRISD)&=~(1<<(pinNo));
  3499   000D74  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3500   000D78  0E01               	movlw	1
  3501   000D7A  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3502   000D7C  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3503   000D7E  EFC4  F006         	goto	u1064
  3504   000D82                     u1065:
  3505   000D82  FFFF               	dw	65535	; assembler added errata NOP
  3506   000D84  90D8               	bcf	status,0,c
  3507   000D86  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3508   000D88                     u1064:
  3509   000D88  FFFF               	dw	65535	; assembler added errata NOP
  3510   000D8A  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3511   000D8C  EFC1  F006         	goto	u1065
  3512   000D90  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3513   000D92  0AFF               	xorlw	255
  3514   000D94  1695               	andwf	149,f,c	;volatile
  3515                           
  3516                           ;gpio.c: 44:             }
  3517   000D96  EF34  F007         	goto	l166
  3518   000D9A                     l1809:
  3519   000D9A  FFFF               	dw	65535	; assembler added errata NOP
  3520                           
  3521                           ;gpio.c: 46:                 (TRISD)|= 1<<(pinNo);
  3522   000D9C  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3523   000DA0  0E01               	movlw	1
  3524   000DA2  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3525   000DA4  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3526   000DA6  EFD8  F006         	goto	u1074
  3527   000DAA                     u1075:
  3528   000DAA  FFFF               	dw	65535	; assembler added errata NOP
  3529   000DAC  90D8               	bcf	status,0,c
  3530   000DAE  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3531   000DB0                     u1074:
  3532   000DB0  FFFF               	dw	65535	; assembler added errata NOP
  3533   000DB2  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3534   000DB4  EFD5  F006         	goto	u1075
  3535   000DB8  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3536   000DBA  1295               	iorwf	149,f,c	;volatile
  3537   000DBC  EF34  F007         	goto	l166
  3538   000DC0                     l1811:
  3539   000DC0  FFFF               	dw	65535	; assembler added errata NOP
  3540                           
  3541                           ;gpio.c: 50:             if(direction == OUTPUT){
  3542   000DC2  0402               	decf	DIO_SetPinDirection@direction^0,w,c
  3543   000DC4  A4D8               	btfss	status,2,c
  3544   000DC6  EFE7  F006         	goto	u1081
  3545   000DCA  EFEA  F006         	goto	u1080
  3546   000DCE                     u1081:
  3547   000DCE  FFFF               	dw	65535	; assembler added errata NOP
  3548   000DD0  EFFE  F006         	goto	l1815
  3549   000DD4                     u1080:
  3550   000DD4  FFFF               	dw	65535	; assembler added errata NOP
  3551   000DD6                     
  3552                           ;gpio.c: 51:                 (TRISE)&=~(1<<(pinNo));
  3553   000DD6  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3554   000DDA  0E01               	movlw	1
  3555   000DDC  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3556   000DDE  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3557   000DE0  EFF5  F006         	goto	u1094
  3558   000DE4                     u1095:
  3559   000DE4  FFFF               	dw	65535	; assembler added errata NOP
  3560   000DE6  90D8               	bcf	status,0,c
  3561   000DE8  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3562   000DEA                     u1094:
  3563   000DEA  FFFF               	dw	65535	; assembler added errata NOP
  3564   000DEC  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3565   000DEE  EFF2  F006         	goto	u1095
  3566   000DF2  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3567   000DF4  0AFF               	xorlw	255
  3568   000DF6  1696               	andwf	150,f,c	;volatile
  3569                           
  3570                           ;gpio.c: 52:             }
  3571   000DF8  EF34  F007         	goto	l166
  3572   000DFC                     l1815:
  3573   000DFC  FFFF               	dw	65535	; assembler added errata NOP
  3574                           
  3575                           ;gpio.c: 54:                 (TRISE)|= 1<<(pinNo);
  3576   000DFE  C001  F003         	movff	DIO_SetPinDirection@pinNo,??_DIO_SetPinDirection
  3577   000E02  0E01               	movlw	1
  3578   000E04  6E04               	movwf	(??_DIO_SetPinDirection+1)^0,c
  3579   000E06  2A03               	incf	??_DIO_SetPinDirection^0,f,c
  3580   000E08  EF09  F007         	goto	u1104
  3581   000E0C                     u1105:
  3582   000E0C  FFFF               	dw	65535	; assembler added errata NOP
  3583   000E0E  90D8               	bcf	status,0,c
  3584   000E10  3604               	rlcf	(??_DIO_SetPinDirection+1)^0,f,c
  3585   000E12                     u1104:
  3586   000E12  FFFF               	dw	65535	; assembler added errata NOP
  3587   000E14  2E03               	decfsz	??_DIO_SetPinDirection^0,f,c
  3588   000E16  EF06  F007         	goto	u1105
  3589   000E1A  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3590   000E1C  1296               	iorwf	150,f,c	;volatile
  3591   000E1E  EF34  F007         	goto	l166
  3592   000E22                     l1819:
  3593   000E22  FFFF               	dw	65535	; assembler added errata NOP
  3594   000E24  5005               	movf	DIO_SetPinDirection@portName^0,w,c
  3595   000E26  6E03               	movwf	??_DIO_SetPinDirection^0,c
  3596   000E28  6A04               	clrf	(??_DIO_SetPinDirection+1)^0,c
  3597                           
  3598                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3599                           ; Switch size 1, requested type "simple"
  3600                           ; Number of cases is 1, Range of values is 0 to 0
  3601                           ; switch strategies available:
  3602                           ; Name         Instructions Cycles
  3603                           ; simple_byte            4     3 (average)
  3604                           ;	Chosen strategy is simple_byte
  3605   000E2A  5004               	movf	(??_DIO_SetPinDirection+1)^0,w,c
  3606   000E2C  0A00               	xorlw	0	; case 0
  3607   000E2E  B4D8               	btfsc	status,2,c
  3608   000E30  EF1C  F007         	goto	l2179
  3609   000E34  EF34  F007         	goto	l166
  3610   000E38                     l2179:
  3611   000E38  FFFF               	dw	65535	; assembler added errata NOP
  3612                           
  3613                           ; Switch size 1, requested type "simple"
  3614                           ; Number of cases is 5, Range of values is 0 to 4
  3615                           ; switch strategies available:
  3616                           ; Name         Instructions Cycles
  3617                           ; simple_byte           16     9 (average)
  3618                           ;	Chosen strategy is simple_byte
  3619   000E3A  5003               	movf	??_DIO_SetPinDirection^0,w,c
  3620   000E3C  0A00               	xorlw	0	; case 0
  3621   000E3E  B4D8               	btfsc	status,2,c
  3622   000E40  EF1C  F006         	goto	l1787
  3623   000E44  0A01               	xorlw	1	; case 1
  3624   000E46  B4D8               	btfsc	status,2,c
  3625   000E48  EF4D  F006         	goto	l1793
  3626   000E4C  0A03               	xorlw	3	; case 2
  3627   000E4E  B4D8               	btfsc	status,2,c
  3628   000E50  EF7E  F006         	goto	l1799
  3629   000E54  0A01               	xorlw	1	; case 3
  3630   000E56  B4D8               	btfsc	status,2,c
  3631   000E58  EFAF  F006         	goto	l1805
  3632   000E5C  0A07               	xorlw	7	; case 4
  3633   000E5E  B4D8               	btfsc	status,2,c
  3634   000E60  EFE0  F006         	goto	l1811
  3635   000E64  EF34  F007         	goto	l166
  3636   000E68                     l166:
  3637   000E68  FFFF               	dw	65535	; assembler added errata NOP
  3638   000E6A  0012               	return		;funcret
  3639   000E6C  FFFF               	dw	65535	; errata NOP
  3640   000E6E                     __end_of_DIO_SetPinDirection:
  3641                           	callstack 0
  3642                           
  3643 ;; *************** function _LCD_displayStringRowColumn *****************
  3644 ;; Defined at:
  3645 ;;		line 157 in file "lcd.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;  row             1    wreg     unsigned char 
  3648 ;;  col             1   10[COMRAM] unsigned char 
  3649 ;;  Str             1   11[COMRAM] PTR unsigned char 
  3650 ;;		 -> STR_9(12), STR_8(16), STR_7(12), STR_6(12), 
  3651 ;;		 -> STR_5(10), STR_4(13), STR_3(9), STR_1(12), 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  row             1   12[COMRAM] unsigned char 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      void 
  3656 ;; Registers used:
  3657 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3663 ;;      Params:         2       0       0       0       0       0       0
  3664 ;;      Locals:         1       0       0       0       0       0       0
  3665 ;;      Temps:          0       0       0       0       0       0       0
  3666 ;;      Totals:         3       0       0       0       0       0       0
  3667 ;;Total ram usage:        3 bytes
  3668 ;; Hardware stack levels used: 1
  3669 ;; Hardware stack levels required when called: 4
  3670 ;; This function calls:
  3671 ;;		_LCD_displayString
  3672 ;;		_LCD_goToRowColumn
  3673 ;; This function is called by:
  3674 ;;		_main
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text24
  3679   001A2C                     __ptext24:
  3680                           	callstack 0
  3681   001A2C                     _LCD_displayStringRowColumn:
  3682                           	callstack 0
  3683   001A2C  FFFF               	dw	65535	; assembler added errata NOP
  3684                           
  3685                           ;incstack = 0
  3686                           ;LCD_displayStringRowColumn@row stored from wreg
  3687   001A2E  6E0D               	movwf	LCD_displayStringRowColumn@row^0,c
  3688   001A30                     
  3689                           ;lcd.c: 157: void LCD_displayStringRowColumn(uint8_t row,uint8_t col,char *Str);lcd.c: 1
      +                          58: {;lcd.c: 159:  LCD_goToRowColumn(row,col);
  3690   001A30  C00B  F008         	movff	LCD_displayStringRowColumn@col,LCD_goToRowColumn@col
  3691   001A34  500D               	movf	LCD_displayStringRowColumn@row^0,w,c
  3692   001A36  ECF5  F00B         	call	_LCD_goToRowColumn
  3693   001A3A                     
  3694                           ;lcd.c: 160:  LCD_displayString(Str);
  3695   001A3A  C00C  F008         	movff	LCD_displayStringRowColumn@Str,LCD_displayString@Str
  3696   001A3E  EC61  F00C         	call	_LCD_displayString	;wreg free
  3697   001A42  0012               	return		;funcret
  3698   001A44  FFFF               	dw	65535	; errata NOP
  3699   001A46                     __end_of_LCD_displayStringRowColumn:
  3700                           	callstack 0
  3701                           
  3702 ;; *************** function _LCD_goToRowColumn *****************
  3703 ;; Defined at:
  3704 ;;		line 131 in file "lcd.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;  row             1    wreg     unsigned char 
  3707 ;;  col             1    7[COMRAM] unsigned char 
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;  row             1    8[COMRAM] unsigned char 
  3710 ;;  Address         1    9[COMRAM] unsigned char 
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      void 
  3713 ;; Registers used:
  3714 ;;		wreg, status,2, status,0, cstack
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3720 ;;      Params:         1       0       0       0       0       0       0
  3721 ;;      Locals:         2       0       0       0       0       0       0
  3722 ;;      Temps:          0       0       0       0       0       0       0
  3723 ;;      Totals:         3       0       0       0       0       0       0
  3724 ;;Total ram usage:        3 bytes
  3725 ;; Hardware stack levels used: 1
  3726 ;; Hardware stack levels required when called: 3
  3727 ;; This function calls:
  3728 ;;		_LCD_sendCommand
  3729 ;; This function is called by:
  3730 ;;		_main
  3731 ;;		_LCD_displayStringRowColumn
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           	psect	text25
  3736   0017EA                     __ptext25:
  3737                           	callstack 0
  3738   0017EA                     _LCD_goToRowColumn:
  3739                           	callstack 0
  3740   0017EA  FFFF               	dw	65535	; assembler added errata NOP
  3741                           
  3742                           ;incstack = 0
  3743                           ;LCD_goToRowColumn@row stored from wreg
  3744   0017EC  6E09               	movwf	LCD_goToRowColumn@row^0,c
  3745   0017EE                     
  3746                           ;lcd.c: 131: void LCD_goToRowColumn(uint8_t row,uint8_t col);lcd.c: 132:  {;lcd.c: 133: 
      +                           uint8_t Address = 0;
  3747   0017EE  0E00               	movlw	0
  3748   0017F0  6E0A               	movwf	LCD_goToRowColumn@Address^0,c
  3749                           
  3750                           ;lcd.c: 136:  switch(row)
  3751   0017F2  EF12  F00C         	goto	l1781
  3752   0017F6                     l291:
  3753   0017F6  FFFF               	dw	65535	; assembler added errata NOP
  3754                           
  3755                           ;lcd.c: 139:     Address=col;
  3756   0017F8  C008  F00A         	movff	LCD_goToRowColumn@col,LCD_goToRowColumn@Address
  3757                           
  3758                           ;lcd.c: 140:     break;
  3759   0017FC  EF26  F00C         	goto	l1783
  3760   001800                     l1773:
  3761   001800  FFFF               	dw	65535	; assembler added errata NOP
  3762                           
  3763                           ;lcd.c: 142:     Address=col+0x40;
  3764   001802  5008               	movf	LCD_goToRowColumn@col^0,w,c
  3765   001804  0F40               	addlw	64
  3766   001806  6E0A               	movwf	LCD_goToRowColumn@Address^0,c
  3767                           
  3768                           ;lcd.c: 143:     break;
  3769   001808  EF26  F00C         	goto	l1783
  3770   00180C                     l1775:
  3771   00180C  FFFF               	dw	65535	; assembler added errata NOP
  3772                           
  3773                           ;lcd.c: 145:     Address=col+0x10;
  3774   00180E  5008               	movf	LCD_goToRowColumn@col^0,w,c
  3775   001810  0F10               	addlw	16
  3776   001812  6E0A               	movwf	LCD_goToRowColumn@Address^0,c
  3777                           
  3778                           ;lcd.c: 146:     break;
  3779   001814  EF26  F00C         	goto	l1783
  3780   001818                     l1777:
  3781   001818  FFFF               	dw	65535	; assembler added errata NOP
  3782                           
  3783                           ;lcd.c: 148:     Address=col+0x50;
  3784   00181A  5008               	movf	LCD_goToRowColumn@col^0,w,c
  3785   00181C  0F50               	addlw	80
  3786   00181E  6E0A               	movwf	LCD_goToRowColumn@Address^0,c
  3787                           
  3788                           ;lcd.c: 149:     break;
  3789   001820  EF26  F00C         	goto	l1783
  3790   001824                     l1781:
  3791   001824  FFFF               	dw	65535	; assembler added errata NOP
  3792   001826  5009               	movf	LCD_goToRowColumn@row^0,w,c
  3793                           
  3794                           ; Switch size 1, requested type "simple"
  3795                           ; Number of cases is 4, Range of values is 0 to 3
  3796                           ; switch strategies available:
  3797                           ; Name         Instructions Cycles
  3798                           ; simple_byte           13     7 (average)
  3799                           ;	Chosen strategy is simple_byte
  3800   001828  0A00               	xorlw	0	; case 0
  3801   00182A  B4D8               	btfsc	status,2,c
  3802   00182C  EFFB  F00B         	goto	l291
  3803   001830  0A01               	xorlw	1	; case 1
  3804   001832  B4D8               	btfsc	status,2,c
  3805   001834  EF00  F00C         	goto	l1773
  3806   001838  0A03               	xorlw	3	; case 2
  3807   00183A  B4D8               	btfsc	status,2,c
  3808   00183C  EF06  F00C         	goto	l1775
  3809   001840  0A01               	xorlw	1	; case 3
  3810   001842  B4D8               	btfsc	status,2,c
  3811   001844  EF0C  F00C         	goto	l1777
  3812   001848  EF26  F00C         	goto	l1783
  3813   00184C                     l1783:
  3814   00184C  FFFF               	dw	65535	; assembler added errata NOP
  3815                           
  3816                           ;lcd.c: 154:  LCD_sendCommand(Address | 0x80);
  3817   00184E  500A               	movf	LCD_goToRowColumn@Address^0,w,c
  3818   001850  0980               	iorlw	128
  3819   001852  EC42  F00A         	call	_LCD_sendCommand
  3820   001856  0012               	return		;funcret
  3821   001858  FFFF               	dw	65535	; errata NOP
  3822   00185A                     __end_of_LCD_goToRowColumn:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function _LCD_displayString *****************
  3826 ;; Defined at:
  3827 ;;		line 121 in file "lcd.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  Str             1    7[COMRAM] PTR unsigned char 
  3830 ;;		 -> STR_9(12), STR_8(16), STR_7(12), STR_6(12), 
  3831 ;;		 -> STR_5(10), STR_4(13), STR_3(9), STR_1(12), 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;  i               1    9[COMRAM] unsigned char 
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      void 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3843 ;;      Params:         1       0       0       0       0       0       0
  3844 ;;      Locals:         1       0       0       0       0       0       0
  3845 ;;      Temps:          1       0       0       0       0       0       0
  3846 ;;      Totals:         3       0       0       0       0       0       0
  3847 ;;Total ram usage:        3 bytes
  3848 ;; Hardware stack levels used: 1
  3849 ;; Hardware stack levels required when called: 3
  3850 ;; This function calls:
  3851 ;;		_LCD_displayCharacter
  3852 ;; This function is called by:
  3853 ;;		_LCD_displayStringRowColumn
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text26
  3858   0018C2                     __ptext26:
  3859                           	callstack 0
  3860   0018C2                     _LCD_displayString:
  3861                           	callstack 0
  3862   0018C2  FFFF               	dw	65535	; assembler added errata NOP
  3863   0018C4                     
  3864                           ;lcd.c: 121: void LCD_displayString(char *Str);lcd.c: 122: {;lcd.c: 123:  uint8_t i = 0;
  3865   0018C4  0E00               	movlw	0
  3866   0018C6  6E0A               	movwf	LCD_displayString@i^0,c
  3867                           
  3868                           ;lcd.c: 124:  while(Str[i] != '\0')
  3869   0018C8  EF74  F00C         	goto	l1885
  3870   0018CC                     l1881:
  3871   0018CC  FFFF               	dw	65535	; assembler added errata NOP
  3872                           
  3873                           ;lcd.c: 125:  {;lcd.c: 126:   LCD_displayCharacter(Str[i]);
  3874   0018CE  5008               	movf	LCD_displayString@Str^0,w,c
  3875   0018D0  240A               	addwf	LCD_displayString@i^0,w,c
  3876   0018D2  6E09               	movwf	??_LCD_displayString^0,c
  3877   0018D4  C009  FFF6         	movff	??_LCD_displayString,tblptrl
  3878   0018D8                     	if	1	;There is more than 1 active tblptr byte
  3879   0018D8  0E06               	movlw	high __smallconst
  3880   0018DA  6EF7               	movwf	tblptrh,c
  3881   0018DC                     	endif
  3882   0018DC                     	if	0	;tblptru may be non-zero
  3883   0018DC                     	endif
  3884   0018DC                     	if	0	;tblptru may be non-zero
  3885   0018DC                     	endif
  3886   0018DC  0008               	tblrd		*
  3887   0018DE  FFFF               	dw	65535	; errata NOP
  3888   0018E0  50F5               	movf	tablat,w,c
  3889   0018E2  ECE1  F009         	call	_LCD_displayCharacter
  3890   0018E6                     
  3891                           ;lcd.c: 127:   i++;
  3892   0018E6  2A0A               	incf	LCD_displayString@i^0,f,c
  3893   0018E8                     l1885:
  3894   0018E8  FFFF               	dw	65535	; assembler added errata NOP
  3895                           
  3896                           ;lcd.c: 124:  while(Str[i] != '\0')
  3897   0018EA  5008               	movf	LCD_displayString@Str^0,w,c
  3898   0018EC  240A               	addwf	LCD_displayString@i^0,w,c
  3899   0018EE  6E09               	movwf	??_LCD_displayString^0,c
  3900   0018F0  C009  FFF6         	movff	??_LCD_displayString,tblptrl
  3901   0018F4                     	if	1	;There is more than 1 active tblptr byte
  3902   0018F4  0E06               	movlw	high __smallconst
  3903   0018F6  6EF7               	movwf	tblptrh,c
  3904   0018F8                     	endif
  3905   0018F8                     	if	0	;tblptru may be non-zero
  3906   0018F8                     	endif
  3907   0018F8                     	if	0	;tblptru may be non-zero
  3908   0018F8                     	endif
  3909   0018F8  0008               	tblrd		*
  3910   0018FA  FFFF               	dw	65535	; errata NOP
  3911   0018FC  50F5               	movf	tablat,w,c
  3912   0018FE  0900               	iorlw	0
  3913   001900  A4D8               	btfss	status,2,c
  3914   001902  EF85  F00C         	goto	u1161
  3915   001906  EF88  F00C         	goto	u1160
  3916   00190A                     u1161:
  3917   00190A  FFFF               	dw	65535	; assembler added errata NOP
  3918   00190C  EF66  F00C         	goto	l1881
  3919   001910                     u1160:
  3920   001910  FFFF               	dw	65535	; assembler added errata NOP
  3921   001912  0012               	return		;funcret
  3922   001914  FFFF               	dw	65535	; errata NOP
  3923   001916                     __end_of_LCD_displayString:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function _LCD_displayCharacter *****************
  3927 ;; Defined at:
  3928 ;;		line 89 in file "lcd.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  data            1    wreg     unsigned char 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  data            1    6[COMRAM] unsigned char 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3942 ;;      Params:         0       0       0       0       0       0       0
  3943 ;;      Locals:         1       0       0       0       0       0       0
  3944 ;;      Temps:          1       0       0       0       0       0       0
  3945 ;;      Totals:         2       0       0       0       0       0       0
  3946 ;;Total ram usage:        2 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; Hardware stack levels required when called: 2
  3949 ;; This function calls:
  3950 ;;		_DIO_SetPinValue
  3951 ;;		_DIO_SetUpperHalfPortValue
  3952 ;; This function is called by:
  3953 ;;		_main
  3954 ;;		_LCD_displayString
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text27
  3959   0013C2                     __ptext27:
  3960                           	callstack 0
  3961   0013C2                     _LCD_displayCharacter:
  3962                           	callstack 0
  3963   0013C2  FFFF               	dw	65535	; assembler added errata NOP
  3964                           
  3965                           ;incstack = 0
  3966                           ;LCD_displayCharacter@data stored from wreg
  3967   0013C4  6E07               	movwf	LCD_displayCharacter@data^0,c
  3968   0013C6                     
  3969                           ;lcd.c: 89: void LCD_displayCharacter(uint8_t data);lcd.c: 90: {;lcd.c: 91:  DIO_SetPinV
      +                          alue(PORT_D,1, HIGH);
  3970   0013C6  0E01               	movlw	1
  3971   0013C8  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  3972   0013CA  0E01               	movlw	1
  3973   0013CC  6E02               	movwf	DIO_SetPinValue@value^0,c
  3974   0013CE  0E03               	movlw	3
  3975   0013D0  EC37  F007         	call	_DIO_SetPinValue
  3976                           
  3977                           ;lcd.c: 93:  DIO_SetPinValue(PORT_D,2, LOW);
  3978   0013D4  0E02               	movlw	2
  3979   0013D6  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  3980   0013D8  0E00               	movlw	0
  3981   0013DA  6E02               	movwf	DIO_SetPinValue@value^0,c
  3982   0013DC  0E03               	movlw	3
  3983   0013DE  EC37  F007         	call	_DIO_SetPinValue
  3984   0013E2                     
  3985                           ;lcd.c: 95:  _delay((unsigned long)((1)*(4000000/4000.0)));
  3986   0013E2  0EC8               	movlw	200
  3987   0013E4                     u1597:
  3988   0013E4  FFFF               	dw	65535	; errata NOP
  3989   0013E6  0000               	nop	
  3990   0013E8  2EE8               	decfsz	wreg,f,c
  3991   0013EA  D7FC               	bra	u1597
  3992   0013EC                     
  3993                           ;lcd.c: 97:     DIO_SetPinValue(PORT_D,3, HIGH);
  3994   0013EC  0E03               	movlw	3
  3995   0013EE  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  3996   0013F0  0E01               	movlw	1
  3997   0013F2  6E02               	movwf	DIO_SetPinValue@value^0,c
  3998   0013F4  0E03               	movlw	3
  3999   0013F6  EC37  F007         	call	_DIO_SetPinValue
  4000                           
  4001                           ;lcd.c: 98:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4002   0013FA  0EC8               	movlw	200
  4003   0013FC                     u1607:
  4004   0013FC  FFFF               	dw	65535	; errata NOP
  4005   0013FE  0000               	nop	
  4006   001400  2EE8               	decfsz	wreg,f,c
  4007   001402  D7FC               	bra	u1607
  4008   001404                     
  4009                           ;lcd.c: 101:  DIO_SetUpperHalfPortValue(PORT_D, (data & 0xF0));
  4010   001404  5007               	movf	LCD_displayCharacter@data^0,w,c
  4011   001406  0BF0               	andlw	240
  4012   001408  6E01               	movwf	DIO_SetUpperHalfPortValue@value^0,c
  4013   00140A  0E03               	movlw	3
  4014   00140C  ECA3  F00A         	call	_DIO_SetUpperHalfPortValue
  4015   001410                     
  4016                           ;lcd.c: 103:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4017   001410  0EC8               	movlw	200
  4018   001412                     u1617:
  4019   001412  FFFF               	dw	65535	; errata NOP
  4020   001414  0000               	nop	
  4021   001416  2EE8               	decfsz	wreg,f,c
  4022   001418  D7FC               	bra	u1617
  4023                           
  4024                           ;lcd.c: 105:  DIO_SetPinValue( PORT_D,3, LOW);
  4025   00141A  0E03               	movlw	3
  4026   00141C  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4027   00141E  0E00               	movlw	0
  4028   001420  6E02               	movwf	DIO_SetPinValue@value^0,c
  4029   001422  0E03               	movlw	3
  4030   001424  EC37  F007         	call	_DIO_SetPinValue
  4031   001428                     
  4032                           ;lcd.c: 107:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4033   001428  0EC8               	movlw	200
  4034   00142A                     u1627:
  4035   00142A  FFFF               	dw	65535	; errata NOP
  4036   00142C  0000               	nop	
  4037   00142E  2EE8               	decfsz	wreg,f,c
  4038   001430  D7FC               	bra	u1627
  4039   001432                     
  4040                           ;lcd.c: 108:  DIO_SetPinValue( PORT_D,3, HIGH);
  4041   001432  0E03               	movlw	3
  4042   001434  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4043   001436  0E01               	movlw	1
  4044   001438  6E02               	movwf	DIO_SetPinValue@value^0,c
  4045   00143A  0E03               	movlw	3
  4046   00143C  EC37  F007         	call	_DIO_SetPinValue
  4047                           
  4048                           ;lcd.c: 110:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4049   001440  0EC8               	movlw	200
  4050   001442                     u1637:
  4051   001442  FFFF               	dw	65535	; errata NOP
  4052   001444  0000               	nop	
  4053   001446  2EE8               	decfsz	wreg,f,c
  4054   001448  D7FC               	bra	u1637
  4055   00144A                     
  4056                           ;lcd.c: 113:  DIO_SetUpperHalfPortValue(PORT_D, ((data & 0x0F) << 4));
  4057   00144A  C007  F006         	movff	LCD_displayCharacter@data,??_LCD_displayCharacter
  4058   00144E  0E0F               	movlw	15
  4059   001450  1606               	andwf	??_LCD_displayCharacter^0,f,c
  4060   001452  3806               	swapf	??_LCD_displayCharacter^0,w,c
  4061   001454  0BF0               	andlw	240
  4062   001456  6E01               	movwf	DIO_SetUpperHalfPortValue@value^0,c
  4063   001458  0E03               	movlw	3
  4064   00145A  ECA3  F00A         	call	_DIO_SetUpperHalfPortValue
  4065   00145E                     
  4066                           ;lcd.c: 114:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4067   00145E  0EC8               	movlw	200
  4068   001460                     u1647:
  4069   001460  FFFF               	dw	65535	; errata NOP
  4070   001462  0000               	nop	
  4071   001464  2EE8               	decfsz	wreg,f,c
  4072   001466  D7FC               	bra	u1647
  4073                           
  4074                           ;lcd.c: 115:  DIO_SetPinValue( PORT_D,3, LOW);
  4075   001468  0E03               	movlw	3
  4076   00146A  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4077   00146C  0E00               	movlw	0
  4078   00146E  6E02               	movwf	DIO_SetPinValue@value^0,c
  4079   001470  0E03               	movlw	3
  4080   001472  EC37  F007         	call	_DIO_SetPinValue
  4081   001476                     
  4082                           ;lcd.c: 116:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4083   001476  0EC8               	movlw	200
  4084   001478                     u1657:
  4085   001478  FFFF               	dw	65535	; errata NOP
  4086   00147A  0000               	nop	
  4087   00147C  2EE8               	decfsz	wreg,f,c
  4088   00147E  D7FC               	bra	u1657
  4089   001480  0012               	return		;funcret
  4090   001482  FFFF               	dw	65535	; errata NOP
  4091   001484                     __end_of_LCD_displayCharacter:
  4092                           	callstack 0
  4093                           
  4094 ;; *************** function _LCD_clearScreen *****************
  4095 ;; Defined at:
  4096 ;;		line 163 in file "lcd.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;		None
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;		None
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      void 
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, status,0, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4110 ;;      Params:         0       0       0       0       0       0       0
  4111 ;;      Locals:         0       0       0       0       0       0       0
  4112 ;;      Temps:          0       0       0       0       0       0       0
  4113 ;;      Totals:         0       0       0       0       0       0       0
  4114 ;;Total ram usage:        0 bytes
  4115 ;; Hardware stack levels used: 1
  4116 ;; Hardware stack levels required when called: 3
  4117 ;; This function calls:
  4118 ;;		_LCD_sendCommand
  4119 ;; This function is called by:
  4120 ;;		_main
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text28
  4125   001B30                     __ptext28:
  4126                           	callstack 0
  4127   001B30                     _LCD_clearScreen:
  4128                           	callstack 0
  4129   001B30  FFFF               	dw	65535	; assembler added errata NOP
  4130   001B32                     
  4131                           ;lcd.c: 165:  LCD_sendCommand(0x01);
  4132   001B32  0E01               	movlw	1
  4133   001B34  EC42  F00A         	call	_LCD_sendCommand
  4134   001B38  0012               	return		;funcret
  4135   001B3A  FFFF               	dw	65535	; errata NOP
  4136   001B3C                     __end_of_LCD_clearScreen:
  4137                           	callstack 0
  4138                           
  4139 ;; *************** function _LCD_sendCommand *****************
  4140 ;; Defined at:
  4141 ;;		line 38 in file "lcd.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  command         1    wreg     unsigned char 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  command         1    6[COMRAM] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      void 
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, status,0, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4155 ;;      Params:         0       0       0       0       0       0       0
  4156 ;;      Locals:         1       0       0       0       0       0       0
  4157 ;;      Temps:          1       0       0       0       0       0       0
  4158 ;;      Totals:         2       0       0       0       0       0       0
  4159 ;;Total ram usage:        2 bytes
  4160 ;; Hardware stack levels used: 1
  4161 ;; Hardware stack levels required when called: 2
  4162 ;; This function calls:
  4163 ;;		_DIO_SetPinValue
  4164 ;;		_DIO_SetUpperHalfPortValue
  4165 ;; This function is called by:
  4166 ;;		_LCD_init
  4167 ;;		_LCD_goToRowColumn
  4168 ;;		_LCD_clearScreen
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text29
  4173   001484                     __ptext29:
  4174                           	callstack 0
  4175   001484                     _LCD_sendCommand:
  4176                           	callstack 0
  4177   001484  FFFF               	dw	65535	; assembler added errata NOP
  4178                           
  4179                           ;incstack = 0
  4180                           ;LCD_sendCommand@command stored from wreg
  4181   001486  6E07               	movwf	LCD_sendCommand@command^0,c
  4182   001488                     
  4183                           ;lcd.c: 38: void LCD_sendCommand(uint8_t command);lcd.c: 39: {;lcd.c: 41:  DIO_SetPinVal
      +                          ue(PORT_D,1, LOW);
  4184   001488  0E01               	movlw	1
  4185   00148A  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4186   00148C  0E00               	movlw	0
  4187   00148E  6E02               	movwf	DIO_SetPinValue@value^0,c
  4188   001490  0E03               	movlw	3
  4189   001492  EC37  F007         	call	_DIO_SetPinValue
  4190                           
  4191                           ;lcd.c: 44:  DIO_SetPinValue(PORT_D,2, LOW);
  4192   001496  0E02               	movlw	2
  4193   001498  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4194   00149A  0E00               	movlw	0
  4195   00149C  6E02               	movwf	DIO_SetPinValue@value^0,c
  4196   00149E  0E03               	movlw	3
  4197   0014A0  EC37  F007         	call	_DIO_SetPinValue
  4198   0014A4                     
  4199                           ;lcd.c: 45:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4200   0014A4  0EC8               	movlw	200
  4201   0014A6                     u1667:
  4202   0014A6  FFFF               	dw	65535	; errata NOP
  4203   0014A8  0000               	nop	
  4204   0014AA  2EE8               	decfsz	wreg,f,c
  4205   0014AC  D7FC               	bra	u1667
  4206   0014AE                     
  4207                           ;lcd.c: 49:  DIO_SetPinValue(PORT_D,3, HIGH);
  4208   0014AE  0E03               	movlw	3
  4209   0014B0  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4210   0014B2  0E01               	movlw	1
  4211   0014B4  6E02               	movwf	DIO_SetPinValue@value^0,c
  4212   0014B6  0E03               	movlw	3
  4213   0014B8  EC37  F007         	call	_DIO_SetPinValue
  4214                           
  4215                           ;lcd.c: 52:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4216   0014BC  0EC8               	movlw	200
  4217   0014BE                     u1677:
  4218   0014BE  FFFF               	dw	65535	; errata NOP
  4219   0014C0  0000               	nop	
  4220   0014C2  2EE8               	decfsz	wreg,f,c
  4221   0014C4  D7FC               	bra	u1677
  4222   0014C6                     
  4223                           ;lcd.c: 57:     DIO_SetUpperHalfPortValue(PORT_D, (command & 0xF0));
  4224   0014C6  5007               	movf	LCD_sendCommand@command^0,w,c
  4225   0014C8  0BF0               	andlw	240
  4226   0014CA  6E01               	movwf	DIO_SetUpperHalfPortValue@value^0,c
  4227   0014CC  0E03               	movlw	3
  4228   0014CE  ECA3  F00A         	call	_DIO_SetUpperHalfPortValue
  4229   0014D2                     
  4230                           ;lcd.c: 60:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4231   0014D2  0EC8               	movlw	200
  4232   0014D4                     u1687:
  4233   0014D4  FFFF               	dw	65535	; errata NOP
  4234   0014D6  0000               	nop	
  4235   0014D8  2EE8               	decfsz	wreg,f,c
  4236   0014DA  D7FC               	bra	u1687
  4237                           
  4238                           ;lcd.c: 63:  DIO_SetPinValue( PORT_D,3, LOW);
  4239   0014DC  0E03               	movlw	3
  4240   0014DE  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4241   0014E0  0E00               	movlw	0
  4242   0014E2  6E02               	movwf	DIO_SetPinValue@value^0,c
  4243   0014E4  0E03               	movlw	3
  4244   0014E6  EC37  F007         	call	_DIO_SetPinValue
  4245   0014EA                     
  4246                           ;lcd.c: 66:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4247   0014EA  0EC8               	movlw	200
  4248   0014EC                     u1697:
  4249   0014EC  FFFF               	dw	65535	; errata NOP
  4250   0014EE  0000               	nop	
  4251   0014F0  2EE8               	decfsz	wreg,f,c
  4252   0014F2  D7FC               	bra	u1697
  4253   0014F4                     
  4254                           ;lcd.c: 69:  DIO_SetPinValue( PORT_D,3, HIGH);
  4255   0014F4  0E03               	movlw	3
  4256   0014F6  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4257   0014F8  0E01               	movlw	1
  4258   0014FA  6E02               	movwf	DIO_SetPinValue@value^0,c
  4259   0014FC  0E03               	movlw	3
  4260   0014FE  EC37  F007         	call	_DIO_SetPinValue
  4261                           
  4262                           ;lcd.c: 71:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4263   001502  0EC8               	movlw	200
  4264   001504                     u1707:
  4265   001504  FFFF               	dw	65535	; errata NOP
  4266   001506  0000               	nop	
  4267   001508  2EE8               	decfsz	wreg,f,c
  4268   00150A  D7FC               	bra	u1707
  4269   00150C                     
  4270                           ;lcd.c: 75:  DIO_SetUpperHalfPortValue(PORT_D, ((command & 0x0F) << 4));
  4271   00150C  C007  F006         	movff	LCD_sendCommand@command,??_LCD_sendCommand
  4272   001510  0E0F               	movlw	15
  4273   001512  1606               	andwf	??_LCD_sendCommand^0,f,c
  4274   001514  3806               	swapf	??_LCD_sendCommand^0,w,c
  4275   001516  0BF0               	andlw	240
  4276   001518  6E01               	movwf	DIO_SetUpperHalfPortValue@value^0,c
  4277   00151A  0E03               	movlw	3
  4278   00151C  ECA3  F00A         	call	_DIO_SetUpperHalfPortValue
  4279   001520                     
  4280                           ;lcd.c: 78:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4281   001520  0EC8               	movlw	200
  4282   001522                     u1717:
  4283   001522  FFFF               	dw	65535	; errata NOP
  4284   001524  0000               	nop	
  4285   001526  2EE8               	decfsz	wreg,f,c
  4286   001528  D7FC               	bra	u1717
  4287                           
  4288                           ;lcd.c: 81:  DIO_SetPinValue(PORT_D,3, LOW);
  4289   00152A  0E03               	movlw	3
  4290   00152C  6E01               	movwf	DIO_SetPinValue@pinNo^0,c
  4291   00152E  0E00               	movlw	0
  4292   001530  6E02               	movwf	DIO_SetPinValue@value^0,c
  4293   001532  0E03               	movlw	3
  4294   001534  EC37  F007         	call	_DIO_SetPinValue
  4295   001538                     
  4296                           ;lcd.c: 84:  _delay((unsigned long)((1)*(4000000/4000.0)));
  4297   001538  0EC8               	movlw	200
  4298   00153A                     u1727:
  4299   00153A  FFFF               	dw	65535	; errata NOP
  4300   00153C  0000               	nop	
  4301   00153E  2EE8               	decfsz	wreg,f,c
  4302   001540  D7FC               	bra	u1727
  4303   001542  0012               	return		;funcret
  4304   001544  FFFF               	dw	65535	; errata NOP
  4305   001546                     __end_of_LCD_sendCommand:
  4306                           	callstack 0
  4307                           
  4308 ;; *************** function _DIO_SetUpperHalfPortValue *****************
  4309 ;; Defined at:
  4310 ;;		line 152 in file "gpio.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  portName        1    wreg     enum E2181
  4313 ;;  value           1    0[COMRAM] unsigned char 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  portName        1    3[COMRAM] enum E2181
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  1    wreg      void 
  4318 ;; Registers used:
  4319 ;;		wreg, status,2, status,0
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4325 ;;      Params:         1       0       0       0       0       0       0
  4326 ;;      Locals:         1       0       0       0       0       0       0
  4327 ;;      Temps:          2       0       0       0       0       0       0
  4328 ;;      Totals:         4       0       0       0       0       0       0
  4329 ;;Total ram usage:        4 bytes
  4330 ;; Hardware stack levels used: 1
  4331 ;; Hardware stack levels required when called: 1
  4332 ;; This function calls:
  4333 ;;		Nothing
  4334 ;; This function is called by:
  4335 ;;		_LCD_sendCommand
  4336 ;;		_LCD_displayCharacter
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text30
  4341   001546                     __ptext30:
  4342                           	callstack 0
  4343   001546                     _DIO_SetUpperHalfPortValue:
  4344                           	callstack 0
  4345   001546  FFFF               	dw	65535	; assembler added errata NOP
  4346                           
  4347                           ;incstack = 0
  4348                           ;DIO_SetUpperHalfPortValue@portName stored from wreg
  4349   001548  6E04               	movwf	DIO_SetUpperHalfPortValue@portName^0,c
  4350   00154A                     
  4351                           ;gpio.c: 153:  switch(portName) {
  4352   00154A  EFCA  F00A         	goto	l1725
  4353   00154E                     l1713:
  4354   00154E  FFFF               	dw	65535	; assembler added errata NOP
  4355                           
  4356                           ;gpio.c: 155:   PORTA = (PORTA & 0x0F) | value ;
  4357   001550  5080               	movf	128,w,c	;volatile
  4358   001552  0B0F               	andlw	15
  4359   001554  1001               	iorwf	DIO_SetUpperHalfPortValue@value^0,w,c
  4360   001556  6E80               	movwf	128,c	;volatile
  4361                           
  4362                           ;gpio.c: 156:   break;
  4363   001558  EFED  F00A         	goto	l216
  4364   00155C                     l1715:
  4365   00155C  FFFF               	dw	65535	; assembler added errata NOP
  4366                           
  4367                           ;gpio.c: 159:   PORTB = (PORTB & 0x0F) | value ;
  4368   00155E  5081               	movf	129,w,c	;volatile
  4369   001560  0B0F               	andlw	15
  4370   001562  1001               	iorwf	DIO_SetUpperHalfPortValue@value^0,w,c
  4371   001564  6E81               	movwf	129,c	;volatile
  4372                           
  4373                           ;gpio.c: 160:   break;
  4374   001566  EFED  F00A         	goto	l216
  4375   00156A                     l1717:
  4376   00156A  FFFF               	dw	65535	; assembler added errata NOP
  4377                           
  4378                           ;gpio.c: 163:   PORTC = (PORTC & 0x0F) | value ;
  4379   00156C  5082               	movf	130,w,c	;volatile
  4380   00156E  0B0F               	andlw	15
  4381   001570  1001               	iorwf	DIO_SetUpperHalfPortValue@value^0,w,c
  4382   001572  6E82               	movwf	130,c	;volatile
  4383                           
  4384                           ;gpio.c: 164:   break;
  4385   001574  EFED  F00A         	goto	l216
  4386   001578                     l1719:
  4387   001578  FFFF               	dw	65535	; assembler added errata NOP
  4388                           
  4389                           ;gpio.c: 167:   PORTD = (PORTD & 0x0F) | value ;
  4390   00157A  5083               	movf	131,w,c	;volatile
  4391   00157C  0B0F               	andlw	15
  4392   00157E  1001               	iorwf	DIO_SetUpperHalfPortValue@value^0,w,c
  4393   001580  6E83               	movwf	131,c	;volatile
  4394                           
  4395                           ;gpio.c: 168:   break;
  4396   001582  EFED  F00A         	goto	l216
  4397   001586                     l1721:
  4398   001586  FFFF               	dw	65535	; assembler added errata NOP
  4399                           
  4400                           ;gpio.c: 171:   PORTE = (PORTE & 0x0F) | value ;
  4401   001588  5084               	movf	132,w,c	;volatile
  4402   00158A  0B0F               	andlw	15
  4403   00158C  1001               	iorwf	DIO_SetUpperHalfPortValue@value^0,w,c
  4404   00158E  6E84               	movwf	132,c	;volatile
  4405                           
  4406                           ;gpio.c: 172:   break;
  4407   001590  EFED  F00A         	goto	l216
  4408   001594                     l1725:
  4409   001594  FFFF               	dw	65535	; assembler added errata NOP
  4410   001596  5004               	movf	DIO_SetUpperHalfPortValue@portName^0,w,c
  4411   001598  6E02               	movwf	??_DIO_SetUpperHalfPortValue^0,c
  4412   00159A  6A03               	clrf	(??_DIO_SetUpperHalfPortValue+1)^0,c
  4413                           
  4414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4415                           ; Switch size 1, requested type "simple"
  4416                           ; Number of cases is 1, Range of values is 0 to 0
  4417                           ; switch strategies available:
  4418                           ; Name         Instructions Cycles
  4419                           ; simple_byte            4     3 (average)
  4420                           ;	Chosen strategy is simple_byte
  4421   00159C  5003               	movf	(??_DIO_SetUpperHalfPortValue+1)^0,w,c
  4422   00159E  0A00               	xorlw	0	; case 0
  4423   0015A0  B4D8               	btfsc	status,2,c
  4424   0015A2  EFD5  F00A         	goto	l2181
  4425   0015A6  EFED  F00A         	goto	l216
  4426   0015AA                     l2181:
  4427   0015AA  FFFF               	dw	65535	; assembler added errata NOP
  4428                           
  4429                           ; Switch size 1, requested type "simple"
  4430                           ; Number of cases is 5, Range of values is 0 to 4
  4431                           ; switch strategies available:
  4432                           ; Name         Instructions Cycles
  4433                           ; simple_byte           16     9 (average)
  4434                           ;	Chosen strategy is simple_byte
  4435   0015AC  5002               	movf	??_DIO_SetUpperHalfPortValue^0,w,c
  4436   0015AE  0A00               	xorlw	0	; case 0
  4437   0015B0  B4D8               	btfsc	status,2,c
  4438   0015B2  EFA7  F00A         	goto	l1713
  4439   0015B6  0A01               	xorlw	1	; case 1
  4440   0015B8  B4D8               	btfsc	status,2,c
  4441   0015BA  EFAE  F00A         	goto	l1715
  4442   0015BE  0A03               	xorlw	3	; case 2
  4443   0015C0  B4D8               	btfsc	status,2,c
  4444   0015C2  EFB5  F00A         	goto	l1717
  4445   0015C6  0A01               	xorlw	1	; case 3
  4446   0015C8  B4D8               	btfsc	status,2,c
  4447   0015CA  EFBC  F00A         	goto	l1719
  4448   0015CE  0A07               	xorlw	7	; case 4
  4449   0015D0  B4D8               	btfsc	status,2,c
  4450   0015D2  EFC3  F00A         	goto	l1721
  4451   0015D6  EFED  F00A         	goto	l216
  4452   0015DA                     l216:
  4453   0015DA  FFFF               	dw	65535	; assembler added errata NOP
  4454   0015DC  0012               	return		;funcret
  4455   0015DE  FFFF               	dw	65535	; errata NOP
  4456   0015E0                     __end_of_DIO_SetUpperHalfPortValue:
  4457                           	callstack 0
  4458                           
  4459 ;; *************** function _DIO_SetPinValue *****************
  4460 ;; Defined at:
  4461 ;;		line 62 in file "gpio.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  portName        1    wreg     enum E2181
  4464 ;;  pinNo           1    0[COMRAM] unsigned char 
  4465 ;;  value           1    1[COMRAM] enum E2188
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  portName        1    4[COMRAM] enum E2181
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      void 
  4470 ;; Registers used:
  4471 ;;		wreg, status,2, status,0
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4477 ;;      Params:         2       0       0       0       0       0       0
  4478 ;;      Locals:         1       0       0       0       0       0       0
  4479 ;;      Temps:          2       0       0       0       0       0       0
  4480 ;;      Totals:         5       0       0       0       0       0       0
  4481 ;;Total ram usage:        5 bytes
  4482 ;; Hardware stack levels used: 1
  4483 ;; Hardware stack levels required when called: 1
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_LCD_sendCommand
  4488 ;;		_LCD_displayCharacter
  4489 ;;		_motor_init
  4490 ;;		_motor_on
  4491 ;;		_motor_off
  4492 ;;		_led_on
  4493 ;;		_led_off
  4494 ;;		_buzzer_on
  4495 ;;		_buzzer_off
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text31
  4500   000E6E                     __ptext31:
  4501                           	callstack 0
  4502   000E6E                     _DIO_SetPinValue:
  4503                           	callstack 0
  4504   000E6E  FFFF               	dw	65535	; assembler added errata NOP
  4505                           
  4506                           ;incstack = 0
  4507                           ;DIO_SetPinValue@portName stored from wreg
  4508   000E70  6E05               	movwf	DIO_SetPinValue@portName^0,c
  4509   000E72                     
  4510                           ;gpio.c: 63:     switch (portName){
  4511   000E72  EF30  F008         	goto	l1705
  4512   000E76                     l1673:
  4513   000E76  FFFF               	dw	65535	; assembler added errata NOP
  4514                           
  4515                           ;gpio.c: 65:             if(value == LOW){
  4516   000E78  5002               	movf	DIO_SetPinValue@value^0,w,c
  4517   000E7A  A4D8               	btfss	status,2,c
  4518   000E7C  EF42  F007         	goto	u811
  4519   000E80  EF45  F007         	goto	u810
  4520   000E84                     u811:
  4521   000E84  FFFF               	dw	65535	; assembler added errata NOP
  4522   000E86  EF59  F007         	goto	l1677
  4523   000E8A                     u810:
  4524   000E8A  FFFF               	dw	65535	; assembler added errata NOP
  4525   000E8C                     
  4526                           ;gpio.c: 66:                 (PORTA)&=~(1<<(pinNo));
  4527   000E8C  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4528   000E90  0E01               	movlw	1
  4529   000E92  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4530   000E94  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4531   000E96  EF50  F007         	goto	u824
  4532   000E9A                     u825:
  4533   000E9A  FFFF               	dw	65535	; assembler added errata NOP
  4534   000E9C  90D8               	bcf	status,0,c
  4535   000E9E  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4536   000EA0                     u824:
  4537   000EA0  FFFF               	dw	65535	; assembler added errata NOP
  4538   000EA2  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4539   000EA4  EF4D  F007         	goto	u825
  4540   000EA8  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4541   000EAA  0AFF               	xorlw	255
  4542   000EAC  1680               	andwf	128,f,c	;volatile
  4543                           
  4544                           ;gpio.c: 67:             }
  4545   000EAE  EF53  F008         	goto	l186
  4546   000EB2                     l1677:
  4547   000EB2  FFFF               	dw	65535	; assembler added errata NOP
  4548                           
  4549                           ;gpio.c: 69:                 (PORTA)|= 1<<(pinNo);
  4550   000EB4  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4551   000EB8  0E01               	movlw	1
  4552   000EBA  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4553   000EBC  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4554   000EBE  EF64  F007         	goto	u834
  4555   000EC2                     u835:
  4556   000EC2  FFFF               	dw	65535	; assembler added errata NOP
  4557   000EC4  90D8               	bcf	status,0,c
  4558   000EC6  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4559   000EC8                     u834:
  4560   000EC8  FFFF               	dw	65535	; assembler added errata NOP
  4561   000ECA  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4562   000ECC  EF61  F007         	goto	u835
  4563   000ED0  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4564   000ED2  1280               	iorwf	128,f,c	;volatile
  4565   000ED4  EF53  F008         	goto	l186
  4566   000ED8                     l1679:
  4567   000ED8  FFFF               	dw	65535	; assembler added errata NOP
  4568                           
  4569                           ;gpio.c: 73:             if(value == LOW){
  4570   000EDA  5002               	movf	DIO_SetPinValue@value^0,w,c
  4571   000EDC  A4D8               	btfss	status,2,c
  4572   000EDE  EF73  F007         	goto	u841
  4573   000EE2  EF76  F007         	goto	u840
  4574   000EE6                     u841:
  4575   000EE6  FFFF               	dw	65535	; assembler added errata NOP
  4576   000EE8  EF8A  F007         	goto	l1683
  4577   000EEC                     u840:
  4578   000EEC  FFFF               	dw	65535	; assembler added errata NOP
  4579   000EEE                     
  4580                           ;gpio.c: 74:                 (PORTB)&=~(1<<(pinNo));
  4581   000EEE  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4582   000EF2  0E01               	movlw	1
  4583   000EF4  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4584   000EF6  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4585   000EF8  EF81  F007         	goto	u854
  4586   000EFC                     u855:
  4587   000EFC  FFFF               	dw	65535	; assembler added errata NOP
  4588   000EFE  90D8               	bcf	status,0,c
  4589   000F00  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4590   000F02                     u854:
  4591   000F02  FFFF               	dw	65535	; assembler added errata NOP
  4592   000F04  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4593   000F06  EF7E  F007         	goto	u855
  4594   000F0A  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4595   000F0C  0AFF               	xorlw	255
  4596   000F0E  1681               	andwf	129,f,c	;volatile
  4597                           
  4598                           ;gpio.c: 75:             }
  4599   000F10  EF53  F008         	goto	l186
  4600   000F14                     l1683:
  4601   000F14  FFFF               	dw	65535	; assembler added errata NOP
  4602                           
  4603                           ;gpio.c: 77:                 (PORTB)|= 1<<(pinNo);
  4604   000F16  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4605   000F1A  0E01               	movlw	1
  4606   000F1C  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4607   000F1E  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4608   000F20  EF95  F007         	goto	u864
  4609   000F24                     u865:
  4610   000F24  FFFF               	dw	65535	; assembler added errata NOP
  4611   000F26  90D8               	bcf	status,0,c
  4612   000F28  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4613   000F2A                     u864:
  4614   000F2A  FFFF               	dw	65535	; assembler added errata NOP
  4615   000F2C  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4616   000F2E  EF92  F007         	goto	u865
  4617   000F32  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4618   000F34  1281               	iorwf	129,f,c	;volatile
  4619   000F36  EF53  F008         	goto	l186
  4620   000F3A                     l1685:
  4621   000F3A  FFFF               	dw	65535	; assembler added errata NOP
  4622                           
  4623                           ;gpio.c: 81:             if(value == LOW){
  4624   000F3C  5002               	movf	DIO_SetPinValue@value^0,w,c
  4625   000F3E  A4D8               	btfss	status,2,c
  4626   000F40  EFA4  F007         	goto	u871
  4627   000F44  EFA7  F007         	goto	u870
  4628   000F48                     u871:
  4629   000F48  FFFF               	dw	65535	; assembler added errata NOP
  4630   000F4A  EFBB  F007         	goto	l1689
  4631   000F4E                     u870:
  4632   000F4E  FFFF               	dw	65535	; assembler added errata NOP
  4633   000F50                     
  4634                           ;gpio.c: 82:                 (PORTC)&=~(1<<(pinNo));
  4635   000F50  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4636   000F54  0E01               	movlw	1
  4637   000F56  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4638   000F58  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4639   000F5A  EFB2  F007         	goto	u884
  4640   000F5E                     u885:
  4641   000F5E  FFFF               	dw	65535	; assembler added errata NOP
  4642   000F60  90D8               	bcf	status,0,c
  4643   000F62  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4644   000F64                     u884:
  4645   000F64  FFFF               	dw	65535	; assembler added errata NOP
  4646   000F66  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4647   000F68  EFAF  F007         	goto	u885
  4648   000F6C  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4649   000F6E  0AFF               	xorlw	255
  4650   000F70  1682               	andwf	130,f,c	;volatile
  4651                           
  4652                           ;gpio.c: 83:             }
  4653   000F72  EF53  F008         	goto	l186
  4654   000F76                     l1689:
  4655   000F76  FFFF               	dw	65535	; assembler added errata NOP
  4656                           
  4657                           ;gpio.c: 85:                 (PORTC)|= 1<<(pinNo);
  4658   000F78  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4659   000F7C  0E01               	movlw	1
  4660   000F7E  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4661   000F80  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4662   000F82  EFC6  F007         	goto	u894
  4663   000F86                     u895:
  4664   000F86  FFFF               	dw	65535	; assembler added errata NOP
  4665   000F88  90D8               	bcf	status,0,c
  4666   000F8A  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4667   000F8C                     u894:
  4668   000F8C  FFFF               	dw	65535	; assembler added errata NOP
  4669   000F8E  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4670   000F90  EFC3  F007         	goto	u895
  4671   000F94  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4672   000F96  1282               	iorwf	130,f,c	;volatile
  4673   000F98  EF53  F008         	goto	l186
  4674   000F9C                     l1691:
  4675   000F9C  FFFF               	dw	65535	; assembler added errata NOP
  4676                           
  4677                           ;gpio.c: 89:             if(value == LOW){
  4678   000F9E  5002               	movf	DIO_SetPinValue@value^0,w,c
  4679   000FA0  A4D8               	btfss	status,2,c
  4680   000FA2  EFD5  F007         	goto	u901
  4681   000FA6  EFD8  F007         	goto	u900
  4682   000FAA                     u901:
  4683   000FAA  FFFF               	dw	65535	; assembler added errata NOP
  4684   000FAC  EFEC  F007         	goto	l1695
  4685   000FB0                     u900:
  4686   000FB0  FFFF               	dw	65535	; assembler added errata NOP
  4687   000FB2                     
  4688                           ;gpio.c: 90:                 (PORTD)&=~(1<<(pinNo));
  4689   000FB2  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4690   000FB6  0E01               	movlw	1
  4691   000FB8  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4692   000FBA  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4693   000FBC  EFE3  F007         	goto	u914
  4694   000FC0                     u915:
  4695   000FC0  FFFF               	dw	65535	; assembler added errata NOP
  4696   000FC2  90D8               	bcf	status,0,c
  4697   000FC4  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4698   000FC6                     u914:
  4699   000FC6  FFFF               	dw	65535	; assembler added errata NOP
  4700   000FC8  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4701   000FCA  EFE0  F007         	goto	u915
  4702   000FCE  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4703   000FD0  0AFF               	xorlw	255
  4704   000FD2  1683               	andwf	131,f,c	;volatile
  4705                           
  4706                           ;gpio.c: 91:             }
  4707   000FD4  EF53  F008         	goto	l186
  4708   000FD8                     l1695:
  4709   000FD8  FFFF               	dw	65535	; assembler added errata NOP
  4710                           
  4711                           ;gpio.c: 93:                 (PORTD)|= 1<<(pinNo);
  4712   000FDA  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4713   000FDE  0E01               	movlw	1
  4714   000FE0  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4715   000FE2  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4716   000FE4  EFF7  F007         	goto	u924
  4717   000FE8                     u925:
  4718   000FE8  FFFF               	dw	65535	; assembler added errata NOP
  4719   000FEA  90D8               	bcf	status,0,c
  4720   000FEC  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4721   000FEE                     u924:
  4722   000FEE  FFFF               	dw	65535	; assembler added errata NOP
  4723   000FF0  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4724   000FF2  EFF4  F007         	goto	u925
  4725   000FF6  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4726   000FF8  1283               	iorwf	131,f,c	;volatile
  4727   000FFA  EF53  F008         	goto	l186
  4728   000FFE                     l1697:
  4729   000FFE  FFFF               	dw	65535	; assembler added errata NOP
  4730                           
  4731                           ;gpio.c: 97:             if(value == LOW){
  4732   001000  5002               	movf	DIO_SetPinValue@value^0,w,c
  4733   001002  A4D8               	btfss	status,2,c
  4734   001004  EF06  F008         	goto	u931
  4735   001008  EF09  F008         	goto	u930
  4736   00100C                     u931:
  4737   00100C  FFFF               	dw	65535	; assembler added errata NOP
  4738   00100E  EF1D  F008         	goto	l1701
  4739   001012                     u930:
  4740   001012  FFFF               	dw	65535	; assembler added errata NOP
  4741   001014                     
  4742                           ;gpio.c: 98:                 (PORTE)&=~(1<<(pinNo));
  4743   001014  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4744   001018  0E01               	movlw	1
  4745   00101A  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4746   00101C  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4747   00101E  EF14  F008         	goto	u944
  4748   001022                     u945:
  4749   001022  FFFF               	dw	65535	; assembler added errata NOP
  4750   001024  90D8               	bcf	status,0,c
  4751   001026  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4752   001028                     u944:
  4753   001028  FFFF               	dw	65535	; assembler added errata NOP
  4754   00102A  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4755   00102C  EF11  F008         	goto	u945
  4756   001030  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4757   001032  0AFF               	xorlw	255
  4758   001034  1684               	andwf	132,f,c	;volatile
  4759                           
  4760                           ;gpio.c: 99:             }
  4761   001036  EF53  F008         	goto	l186
  4762   00103A                     l1701:
  4763   00103A  FFFF               	dw	65535	; assembler added errata NOP
  4764                           
  4765                           ;gpio.c: 101:                 (PORTE)|= 1<<(pinNo);
  4766   00103C  C001  F003         	movff	DIO_SetPinValue@pinNo,??_DIO_SetPinValue
  4767   001040  0E01               	movlw	1
  4768   001042  6E04               	movwf	(??_DIO_SetPinValue+1)^0,c
  4769   001044  2A03               	incf	??_DIO_SetPinValue^0,f,c
  4770   001046  EF28  F008         	goto	u954
  4771   00104A                     u955:
  4772   00104A  FFFF               	dw	65535	; assembler added errata NOP
  4773   00104C  90D8               	bcf	status,0,c
  4774   00104E  3604               	rlcf	(??_DIO_SetPinValue+1)^0,f,c
  4775   001050                     u954:
  4776   001050  FFFF               	dw	65535	; assembler added errata NOP
  4777   001052  2E03               	decfsz	??_DIO_SetPinValue^0,f,c
  4778   001054  EF25  F008         	goto	u955
  4779   001058  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4780   00105A  1284               	iorwf	132,f,c	;volatile
  4781   00105C  EF53  F008         	goto	l186
  4782   001060                     l1705:
  4783   001060  FFFF               	dw	65535	; assembler added errata NOP
  4784   001062  5005               	movf	DIO_SetPinValue@portName^0,w,c
  4785   001064  6E03               	movwf	??_DIO_SetPinValue^0,c
  4786   001066  6A04               	clrf	(??_DIO_SetPinValue+1)^0,c
  4787                           
  4788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4789                           ; Switch size 1, requested type "simple"
  4790                           ; Number of cases is 1, Range of values is 0 to 0
  4791                           ; switch strategies available:
  4792                           ; Name         Instructions Cycles
  4793                           ; simple_byte            4     3 (average)
  4794                           ;	Chosen strategy is simple_byte
  4795   001068  5004               	movf	(??_DIO_SetPinValue+1)^0,w,c
  4796   00106A  0A00               	xorlw	0	; case 0
  4797   00106C  B4D8               	btfsc	status,2,c
  4798   00106E  EF3B  F008         	goto	l2183
  4799   001072  EF53  F008         	goto	l186
  4800   001076                     l2183:
  4801   001076  FFFF               	dw	65535	; assembler added errata NOP
  4802                           
  4803                           ; Switch size 1, requested type "simple"
  4804                           ; Number of cases is 5, Range of values is 0 to 4
  4805                           ; switch strategies available:
  4806                           ; Name         Instructions Cycles
  4807                           ; simple_byte           16     9 (average)
  4808                           ;	Chosen strategy is simple_byte
  4809   001078  5003               	movf	??_DIO_SetPinValue^0,w,c
  4810   00107A  0A00               	xorlw	0	; case 0
  4811   00107C  B4D8               	btfsc	status,2,c
  4812   00107E  EF3B  F007         	goto	l1673
  4813   001082  0A01               	xorlw	1	; case 1
  4814   001084  B4D8               	btfsc	status,2,c
  4815   001086  EF6C  F007         	goto	l1679
  4816   00108A  0A03               	xorlw	3	; case 2
  4817   00108C  B4D8               	btfsc	status,2,c
  4818   00108E  EF9D  F007         	goto	l1685
  4819   001092  0A01               	xorlw	1	; case 3
  4820   001094  B4D8               	btfsc	status,2,c
  4821   001096  EFCE  F007         	goto	l1691
  4822   00109A  0A07               	xorlw	7	; case 4
  4823   00109C  B4D8               	btfsc	status,2,c
  4824   00109E  EFFF  F007         	goto	l1697
  4825   0010A2  EF53  F008         	goto	l186
  4826   0010A6                     l186:
  4827   0010A6  FFFF               	dw	65535	; assembler added errata NOP
  4828   0010A8  0012               	return		;funcret
  4829   0010AA  FFFF               	dw	65535	; errata NOP
  4830   0010AC                     __end_of_DIO_SetPinValue:
  4831                           	callstack 0
  4832                           
  4833 ;; *************** function _DIO_TogglePin *****************
  4834 ;; Defined at:
  4835 ;;		line 178 in file "gpio.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  portName        1    wreg     enum E2181
  4838 ;;  pinNo           1    0[COMRAM] unsigned char 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  portName        1    3[COMRAM] enum E2181
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4850 ;;      Params:         1       0       0       0       0       0       0
  4851 ;;      Locals:         1       0       0       0       0       0       0
  4852 ;;      Temps:          2       0       0       0       0       0       0
  4853 ;;      Totals:         4       0       0       0       0       0       0
  4854 ;;Total ram usage:        4 bytes
  4855 ;; Hardware stack levels used: 1
  4856 ;; Hardware stack levels required when called: 1
  4857 ;; This function calls:
  4858 ;;		Nothing
  4859 ;; This function is called by:
  4860 ;;		_main
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	text32
  4865   0011D6                     __ptext32:
  4866                           	callstack 0
  4867   0011D6                     _DIO_TogglePin:
  4868                           	callstack 0
  4869   0011D6  FFFF               	dw	65535	; assembler added errata NOP
  4870                           
  4871                           ;incstack = 0
  4872                           ;DIO_TogglePin@portName stored from wreg
  4873   0011D8  6E04               	movwf	DIO_TogglePin@portName^0,c
  4874   0011DA                     
  4875                           ;gpio.c: 179:  switch(portName) {
  4876   0011DA  EF4E  F009         	goto	l1943
  4877   0011DE                     l1931:
  4878   0011DE  FFFF               	dw	65535	; assembler added errata NOP
  4879                           
  4880                           ;gpio.c: 181:             (PORTA)^= 1<<(pinNo);
  4881   0011E0  C001  F002         	movff	DIO_TogglePin@pinNo,??_DIO_TogglePin
  4882   0011E4  0E01               	movlw	1
  4883   0011E6  6E03               	movwf	(??_DIO_TogglePin+1)^0,c
  4884   0011E8  2A02               	incf	??_DIO_TogglePin^0,f,c
  4885   0011EA  EFFA  F008         	goto	u1194
  4886   0011EE                     u1195:
  4887   0011EE  FFFF               	dw	65535	; assembler added errata NOP
  4888   0011F0  90D8               	bcf	status,0,c
  4889   0011F2  3603               	rlcf	(??_DIO_TogglePin+1)^0,f,c
  4890   0011F4                     u1194:
  4891   0011F4  FFFF               	dw	65535	; assembler added errata NOP
  4892   0011F6  2E02               	decfsz	??_DIO_TogglePin^0,f,c
  4893   0011F8  EFF7  F008         	goto	u1195
  4894   0011FC  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  4895   0011FE  1A80               	xorwf	128,f,c	;volatile
  4896                           
  4897                           ;gpio.c: 182:   break;
  4898   001200  EF71  F009         	goto	l226
  4899   001204                     l1933:
  4900   001204  FFFF               	dw	65535	; assembler added errata NOP
  4901                           
  4902                           ;gpio.c: 185:             (PORTB)^= 1<<(pinNo);
  4903   001206  C001  F002         	movff	DIO_TogglePin@pinNo,??_DIO_TogglePin
  4904   00120A  0E01               	movlw	1
  4905   00120C  6E03               	movwf	(??_DIO_TogglePin+1)^0,c
  4906   00120E  2A02               	incf	??_DIO_TogglePin^0,f,c
  4907   001210  EF0D  F009         	goto	u1204
  4908   001214                     u1205:
  4909   001214  FFFF               	dw	65535	; assembler added errata NOP
  4910   001216  90D8               	bcf	status,0,c
  4911   001218  3603               	rlcf	(??_DIO_TogglePin+1)^0,f,c
  4912   00121A                     u1204:
  4913   00121A  FFFF               	dw	65535	; assembler added errata NOP
  4914   00121C  2E02               	decfsz	??_DIO_TogglePin^0,f,c
  4915   00121E  EF0A  F009         	goto	u1205
  4916   001222  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  4917   001224  1A81               	xorwf	129,f,c	;volatile
  4918                           
  4919                           ;gpio.c: 186:   break;
  4920   001226  EF71  F009         	goto	l226
  4921   00122A                     l1935:
  4922   00122A  FFFF               	dw	65535	; assembler added errata NOP
  4923                           
  4924                           ;gpio.c: 189:             (PORTC)^= 1<<(pinNo);
  4925   00122C  C001  F002         	movff	DIO_TogglePin@pinNo,??_DIO_TogglePin
  4926   001230  0E01               	movlw	1
  4927   001232  6E03               	movwf	(??_DIO_TogglePin+1)^0,c
  4928   001234  2A02               	incf	??_DIO_TogglePin^0,f,c
  4929   001236  EF20  F009         	goto	u1214
  4930   00123A                     u1215:
  4931   00123A  FFFF               	dw	65535	; assembler added errata NOP
  4932   00123C  90D8               	bcf	status,0,c
  4933   00123E  3603               	rlcf	(??_DIO_TogglePin+1)^0,f,c
  4934   001240                     u1214:
  4935   001240  FFFF               	dw	65535	; assembler added errata NOP
  4936   001242  2E02               	decfsz	??_DIO_TogglePin^0,f,c
  4937   001244  EF1D  F009         	goto	u1215
  4938   001248  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  4939   00124A  1A82               	xorwf	130,f,c	;volatile
  4940                           
  4941                           ;gpio.c: 190:   break;
  4942   00124C  EF71  F009         	goto	l226
  4943   001250                     l1937:
  4944   001250  FFFF               	dw	65535	; assembler added errata NOP
  4945                           
  4946                           ;gpio.c: 193:             (PORTD)^= 1<<(pinNo);
  4947   001252  C001  F002         	movff	DIO_TogglePin@pinNo,??_DIO_TogglePin
  4948   001256  0E01               	movlw	1
  4949   001258  6E03               	movwf	(??_DIO_TogglePin+1)^0,c
  4950   00125A  2A02               	incf	??_DIO_TogglePin^0,f,c
  4951   00125C  EF33  F009         	goto	u1224
  4952   001260                     u1225:
  4953   001260  FFFF               	dw	65535	; assembler added errata NOP
  4954   001262  90D8               	bcf	status,0,c
  4955   001264  3603               	rlcf	(??_DIO_TogglePin+1)^0,f,c
  4956   001266                     u1224:
  4957   001266  FFFF               	dw	65535	; assembler added errata NOP
  4958   001268  2E02               	decfsz	??_DIO_TogglePin^0,f,c
  4959   00126A  EF30  F009         	goto	u1225
  4960   00126E  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  4961   001270  1A83               	xorwf	131,f,c	;volatile
  4962                           
  4963                           ;gpio.c: 194:   break;
  4964   001272  EF71  F009         	goto	l226
  4965   001276                     l1939:
  4966   001276  FFFF               	dw	65535	; assembler added errata NOP
  4967                           
  4968                           ;gpio.c: 197:             (PORTE)^= 1<<(pinNo);
  4969   001278  C001  F002         	movff	DIO_TogglePin@pinNo,??_DIO_TogglePin
  4970   00127C  0E01               	movlw	1
  4971   00127E  6E03               	movwf	(??_DIO_TogglePin+1)^0,c
  4972   001280  2A02               	incf	??_DIO_TogglePin^0,f,c
  4973   001282  EF46  F009         	goto	u1234
  4974   001286                     u1235:
  4975   001286  FFFF               	dw	65535	; assembler added errata NOP
  4976   001288  90D8               	bcf	status,0,c
  4977   00128A  3603               	rlcf	(??_DIO_TogglePin+1)^0,f,c
  4978   00128C                     u1234:
  4979   00128C  FFFF               	dw	65535	; assembler added errata NOP
  4980   00128E  2E02               	decfsz	??_DIO_TogglePin^0,f,c
  4981   001290  EF43  F009         	goto	u1235
  4982   001294  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  4983   001296  1A84               	xorwf	132,f,c	;volatile
  4984                           
  4985                           ;gpio.c: 198:   break;
  4986   001298  EF71  F009         	goto	l226
  4987   00129C                     l1943:
  4988   00129C  FFFF               	dw	65535	; assembler added errata NOP
  4989   00129E  5004               	movf	DIO_TogglePin@portName^0,w,c
  4990   0012A0  6E02               	movwf	??_DIO_TogglePin^0,c
  4991   0012A2  6A03               	clrf	(??_DIO_TogglePin+1)^0,c
  4992                           
  4993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4994                           ; Switch size 1, requested type "simple"
  4995                           ; Number of cases is 1, Range of values is 0 to 0
  4996                           ; switch strategies available:
  4997                           ; Name         Instructions Cycles
  4998                           ; simple_byte            4     3 (average)
  4999                           ;	Chosen strategy is simple_byte
  5000   0012A4  5003               	movf	(??_DIO_TogglePin+1)^0,w,c
  5001   0012A6  0A00               	xorlw	0	; case 0
  5002   0012A8  B4D8               	btfsc	status,2,c
  5003   0012AA  EF59  F009         	goto	l2185
  5004   0012AE  EF71  F009         	goto	l226
  5005   0012B2                     l2185:
  5006   0012B2  FFFF               	dw	65535	; assembler added errata NOP
  5007                           
  5008                           ; Switch size 1, requested type "simple"
  5009                           ; Number of cases is 5, Range of values is 0 to 4
  5010                           ; switch strategies available:
  5011                           ; Name         Instructions Cycles
  5012                           ; simple_byte           16     9 (average)
  5013                           ;	Chosen strategy is simple_byte
  5014   0012B4  5002               	movf	??_DIO_TogglePin^0,w,c
  5015   0012B6  0A00               	xorlw	0	; case 0
  5016   0012B8  B4D8               	btfsc	status,2,c
  5017   0012BA  EFEF  F008         	goto	l1931
  5018   0012BE  0A01               	xorlw	1	; case 1
  5019   0012C0  B4D8               	btfsc	status,2,c
  5020   0012C2  EF02  F009         	goto	l1933
  5021   0012C6  0A03               	xorlw	3	; case 2
  5022   0012C8  B4D8               	btfsc	status,2,c
  5023   0012CA  EF15  F009         	goto	l1935
  5024   0012CE  0A01               	xorlw	1	; case 3
  5025   0012D0  B4D8               	btfsc	status,2,c
  5026   0012D2  EF28  F009         	goto	l1937
  5027   0012D6  0A07               	xorlw	7	; case 4
  5028   0012D8  B4D8               	btfsc	status,2,c
  5029   0012DA  EF3B  F009         	goto	l1939
  5030   0012DE  EF71  F009         	goto	l226
  5031   0012E2                     l226:
  5032   0012E2  FFFF               	dw	65535	; assembler added errata NOP
  5033   0012E4  0012               	return		;funcret
  5034   0012E6  FFFF               	dw	65535	; errata NOP
  5035   0012E8                     __end_of_DIO_TogglePin:
  5036                           	callstack 0
  5037                           
  5038 ;; *************** function _Timer0_ISR *****************
  5039 ;; Defined at:
  5040 ;;		line 33 in file "main.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;		None
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;		None
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  1    wreg      void 
  5047 ;; Registers used:
  5048 ;;		wreg, status,2, status,0
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5054 ;;      Params:         0       0       0       0       0       0       0
  5055 ;;      Locals:         0       0       0       0       0       0       0
  5056 ;;      Temps:          0       0       0       0       0       0       0
  5057 ;;      Totals:         0       0       0       0       0       0       0
  5058 ;;Total ram usage:        0 bytes
  5059 ;; Hardware stack levels used: 1
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		Interrupt level 2
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	intcode
  5068   000008                     __pintcode:
  5069                           	callstack 0
  5070   000008                     _Timer0_ISR:
  5071                           	callstack 0
  5072   000008  FFFF               	dw	65535	; assembler added errata NOP
  5073                           
  5074                           ;incstack = 0
  5075   00000A  822A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5076   00000C                     
  5077                           ;main.c: 34:     if(TMR0IF){
  5078   00000C  A4F2               	btfss	4082,2,c	;volatile
  5079   00000E  EF0B  F000         	goto	i2u46_41
  5080   000012  EF0E  F000         	goto	i2u46_40
  5081   000016                     i2u46_41:
  5082   000016  FFFF               	dw	65535	; assembler added errata NOP
  5083   000018  EF1C  F000         	goto	i2l74
  5084   00001C                     i2u46_40:
  5085   00001C  FFFF               	dw	65535	; assembler added errata NOP
  5086   00001E                     
  5087                           ;main.c: 35:         TMR0IF = 0;
  5088   00001E  94F2               	bcf	4082,2,c	;volatile
  5089   000020                     
  5090                           ;main.c: 36:         TMR0H = 0xF0;
  5091   000020  0EF0               	movlw	240
  5092   000022  6ED7               	movwf	215,c	;volatile
  5093                           
  5094                           ;main.c: 37:         TMR0L = 0xBD;
  5095   000024  0EBD               	movlw	189
  5096   000026  6ED6               	movwf	214,c	;volatile
  5097   000028                     
  5098                           ;main.c: 40:         sysButtonTimer++;
  5099   000028  4A25               	infsnz	_sysButtonTimer^0,f,c
  5100   00002A  2A26               	incf	(_sysButtonTimer+1)^0,f,c
  5101   00002C                     
  5102                           ;main.c: 41:         activatedStateTimer++;
  5103   00002C  4A23               	infsnz	_activatedStateTimer^0,f,c
  5104   00002E  2A24               	incf	(_activatedStateTimer+1)^0,f,c
  5105   000030                     
  5106                           ;main.c: 42:         GateCloseTimer++;
  5107   000030  4A27               	infsnz	_GateCloseTimer^0,f,c
  5108   000032  2A28               	incf	(_GateCloseTimer+1)^0,f,c
  5109   000034                     
  5110                           ;main.c: 43:         emergencyTimer++;
  5111   000034  4A21               	infsnz	_emergencyTimer^0,f,c
  5112   000036  2A22               	incf	(_emergencyTimer+1)^0,f,c
  5113   000038                     i2l74:
  5114   000038  FFFF               	dw	65535	; assembler added errata NOP
  5115   00003A  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5116   00003C  0011               	retfie		f
  5117   00003E  FFFF               	dw	65535	; errata NOP
  5118   000040                     __end_of_Timer0_ISR:
  5119                           	callstack 0
  5120                           
  5121                           	psect	rparam
  5122   000000                     
  5123                           	psect	temp
  5124   00002A                     btemp:
  5125                           	callstack 0
  5126   00002A                     	ds	1
  5127   000000                     int$flags	set	btemp
  5128   000000                     wtemp8	set	btemp+1
  5129   000000                     ttemp5	set	btemp+1
  5130   000000                     ttemp6	set	btemp+4
  5131   000000                     ttemp7	set	btemp+8
  5132                           tosu	equ	0xFFF
  5133                           tosh	equ	0xFFE
  5134                           tosl	equ	0xFFD
  5135                           stkptr	equ	0xFFC
  5136                           pclatu	equ	0xFFB
  5137                           pclath	equ	0xFFA
  5138                           pcl	equ	0xFF9
  5139                           tblptru	equ	0xFF8
  5140                           tblptrh	equ	0xFF7
  5141                           tblptrl	equ	0xFF6
  5142                           tablat	equ	0xFF5
  5143                           prodh	equ	0xFF4
  5144                           prodl	equ	0xFF3
  5145                           indf0	equ	0xFEF
  5146                           postinc0	equ	0xFEE
  5147                           postdec0	equ	0xFED
  5148                           preinc0	equ	0xFEC
  5149                           plusw0	equ	0xFEB
  5150                           fsr0h	equ	0xFEA
  5151                           fsr0l	equ	0xFE9
  5152                           wreg	equ	0xFE8
  5153                           indf1	equ	0xFE7
  5154                           postinc1	equ	0xFE6
  5155                           postdec1	equ	0xFE5
  5156                           preinc1	equ	0xFE4
  5157                           plusw1	equ	0xFE3
  5158                           fsr1h	equ	0xFE2
  5159                           fsr1l	equ	0xFE1
  5160                           bsr	equ	0xFE0
  5161                           indf2	equ	0xFDF
  5162                           postinc2	equ	0xFDE
  5163                           postdec2	equ	0xFDD
  5164                           preinc2	equ	0xFDC
  5165                           plusw2	equ	0xFDB
  5166                           fsr2h	equ	0xFDA
  5167                           fsr2l	equ	0xFD9
  5168                           status	equ	0xFD8

Data Sizes:
    Strings     101
    Constant    0
    Data        3
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     27      41
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    LCD_displayString@Str	PTR unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[12]), STR_3(CODE[9]), STR_4(CODE[13]), STR_5(CODE[10]), 
		 -> STR_6(CODE[12]), STR_7(CODE[12]), STR_8(CODE[16]), STR_9(CODE[12]), 

    LCD_displayStringRowColumn@Str	PTR unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[12]), STR_3(CODE[9]), STR_4(CODE[13]), STR_5(CODE[10]), 
		 -> STR_6(CODE[12]), STR_7(CODE[12]), STR_8(CODE[16]), STR_9(CODE[12]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> main@passCode(COMRAM[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_LCD_displayStringRowColumn
    _pir_init->_DIO_SetPinDirection
    _pir_getState->_DIO_GetPinValue
    _motor_on->_DIO_SetPinValue
    _motor_off->_DIO_SetPinValue
    _motor_init->_DIO_SetPinDirection
    _motor_init->_DIO_SetPinValue
    _led_on->_DIO_SetPinValue
    _led_off->_DIO_SetPinValue
    _led_init->_DIO_SetPinDirection
    _keypad_read->_keypad_value
    _keypad_init->_DIO_SetPinDirection
    _buzzer_on->_DIO_SetPinValue
    _buzzer_off->_DIO_SetPinValue
    _buzzer_init->_DIO_SetPinDirection
    _button_init->_DIO_SetPinDirection
    _button_getState->_DIO_GetPinValue
    _LCD_init->_LCD_sendCommand
    _LCD_displayStringRowColumn->_LCD_displayString
    _LCD_displayStringRowColumn->_LCD_goToRowColumn
    _LCD_goToRowColumn->_LCD_sendCommand
    _LCD_displayString->_LCD_displayCharacter
    _LCD_displayCharacter->_DIO_SetPinValue
    _LCD_clearScreen->_LCD_sendCommand
    _LCD_sendCommand->_DIO_SetPinValue

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   94679
                                             13 COMRAM    14    14      0
                      _DIO_TogglePin
                    _LCD_clearScreen
               _LCD_displayCharacter
         _LCD_displayStringRowColumn
                  _LCD_goToRowColumn
                           _LCD_init
                        _Timer0_init
                    _button_getState
                        _button_init
                        _buzzer_init
                         _buzzer_off
                          _buzzer_on
                        _keypad_init
                        _keypad_read
                           _led_init
                            _led_off
                             _led_on
                         _motor_init
                          _motor_off
                           _motor_on
                       _pir_getState
                           _pir_init
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               3     1      2     264
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _pir_init                                             2     1      1    3816
                                              5 COMRAM     2     1      1
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _pir_getState                                         2     1      1     409
                                              5 COMRAM     2     1      1
                    _DIO_GetPinValue
 ---------------------------------------------------------------------------------
 (1) _motor_on                                             0     0      0    4608
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _motor_off                                            0     0      0    4608
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _motor_init                                           0     0      0    8304
                _DIO_SetPinDirection
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _led_on                                               2     1      1    4880
                                              5 COMRAM     2     1      1
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _led_off                                              2     1      1    4728
                                              5 COMRAM     2     1      1
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _led_init                                             2     1      1    3892
                                              5 COMRAM     2     1      1
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _keypad_read                                          2     2      0      30
                                              1 COMRAM     2     2      0
                   _keypad_line_scan
                       _keypad_value
 ---------------------------------------------------------------------------------
 (2) _keypad_value                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _keypad_line_scan                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0    3696
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _buzzer_on                                            2     1      1    4804
                                              5 COMRAM     2     1      1
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _buzzer_off                                           2     1      1    4804
                                              5 COMRAM     2     1      1
                    _DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (1) _buzzer_init                                          2     1      1    3816
                                              5 COMRAM     2     1      1
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _button_init                                          2     1      1    3968
                                              5 COMRAM     2     1      1
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _button_getState                                      2     1      1     637
                                              5 COMRAM     2     1      1
                    _DIO_GetPinValue
 ---------------------------------------------------------------------------------
 (2) _DIO_GetPinValue                                      5     4      1     289
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0    9068
                _DIO_SetPinDirection
                   _DIO_SetPortValue
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (2) _DIO_SetPortValue                                     4     3      1     284
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _DIO_SetPinDirection                                  5     3      2    3696
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCD_displayStringRowColumn                           3     1      2   11913
                                             10 COMRAM     3     1      2
                  _LCD_displayString
                  _LCD_goToRowColumn
 ---------------------------------------------------------------------------------
 (1) _LCD_goToRowColumn                                    3     2      1    5377
                                              7 COMRAM     3     2      1
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (2) _LCD_displayString                                    3     2      1    5254
                                              7 COMRAM     3     2      1
               _LCD_displayCharacter
 ---------------------------------------------------------------------------------
 (3) _LCD_displayCharacter                                 2     2      0    5088
                                              5 COMRAM     2     2      0
                    _DIO_SetPinValue
          _DIO_SetUpperHalfPortValue
 ---------------------------------------------------------------------------------
 (1) _LCD_clearScreen                                      0     0      0    5088
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (2) _LCD_sendCommand                                      2     2      0    5088
                                              5 COMRAM     2     2      0
                    _DIO_SetPinValue
          _DIO_SetUpperHalfPortValue
 ---------------------------------------------------------------------------------
 (3) _DIO_SetUpperHalfPortValue                            4     3      1     436
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _DIO_SetPinValue                                      5     3      2    4608
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _DIO_TogglePin                                        4     3      1     208
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer0_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DIO_TogglePin
   _LCD_clearScreen
     _LCD_sendCommand
       _DIO_SetPinValue
       _DIO_SetUpperHalfPortValue
   _LCD_displayCharacter
     _DIO_SetPinValue
     _DIO_SetUpperHalfPortValue
   _LCD_displayStringRowColumn
     _LCD_displayString
       _LCD_displayCharacter
     _LCD_goToRowColumn
       _LCD_sendCommand
   _LCD_goToRowColumn
   _LCD_init
     _DIO_SetPinDirection
     _DIO_SetPortValue
     _LCD_sendCommand
   _Timer0_init
   _button_getState
     _DIO_GetPinValue
   _button_init
     _DIO_SetPinDirection
   _buzzer_init
     _DIO_SetPinDirection
   _buzzer_off
     _DIO_SetPinValue
   _buzzer_on
     _DIO_SetPinValue
   _keypad_init
     _DIO_SetPinDirection
   _keypad_read
     _keypad_line_scan
     _keypad_value
   _led_init
     _DIO_SetPinDirection
   _led_off
     _DIO_SetPinValue
   _led_on
     _DIO_SetPinValue
   _motor_init
     _DIO_SetPinDirection
     _DIO_SetPinValue
   _motor_off
     _DIO_SetPinValue
   _motor_on
     _DIO_SetPinValue
   _pir_getState
     _DIO_GetPinValue
   _pir_init
     _DIO_SetPinDirection
   _strcmp

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1B      29       1       32.5%
BITBIGSFRlllh       2A      0       0      19        0.0%
BITBIGSFRlh         1A      0       0      17        0.0%
BITBIGSFRllh        13      0       0      18        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllll        D      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      29      21        0.0%
DATA                 0      0      29       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Apr 16 17:51:43 2024

                                                              l77 1B08  
                                               ??_DIO_GetPinValue 0002  
                                                             l200 167C  
                                                             l202 1686  
                                                             l203 1690  
                                                             l204 169A  
                                                             l205 16A4  
                                                             l109 0B9E  
                                                             l117 0B48  
                                                             l302 1B38  
                                                             l206 16F4  
                                                             l216 15DA  
                                                             l312 1950  
                                                             l233 18BE  
                                                             l226 12E2  
                                                             l322 1A9A  
                                                             l315 198E  
                                                             l244 13BC  
                                                             l260 19FC  
                                                             l341 1AC6  
                                                             l325 1A6E  
                                                             l309 17E6  
                                                             l166 0E68  
                                                             l191 11D0  
                                                             l351 1B2C  
                                                             l335 1ADC  
                                                             l239 1A28  
                                                             l328 1A84  
                                                             l281 1480  
                                                             l361 1B1A  
                                                             l186 10A6  
                                                             l338 1AB0  
                                                             l291 17F6  
                                                             l275 1670  
                                                             l348 1AF2  
                                                             l278 1542  
                                                             l358 1A58  
                                                             l287 1912  
                                                             l296 1856  
                                                             l299 1A42  
                                                             _GIE 7F97  
                                                             u360 1A1C  
                                                             u361 1A16  
                                                             u380 19E8  
                                                             u381 19E2  
                                                             u810 0E8A  
                                                             u811 0E84  
                                                             u900 0FB0  
                                                             u901 0FAA  
                                                             u840 0EEC  
                                                             u824 0EA0  
                                                             u841 0EE6  
                                                             u825 0E9A  
                                                             u930 1012  
                                                             u914 0FC6  
                                                             u834 0EC8  
                                                             u931 100C  
                                                             u915 0FC0  
                                                             u835 0EC2  
                                                             u924 0FEE  
                                                             u925 0FE8  
                                                             u870 0F4E  
                                                             u854 0F02  
                                                             u871 0F48  
                                                             u855 0EFC  
                                                             u944 1028  
                                                             u864 0F2A  
                                                             u960 0C4C  
                                                             u945 1022  
                                                             u865 0F24  
                                                             u961 0C46  
                                                             u954 1050  
                                                             u955 104A  
                                                             u884 0F64  
                                                             u885 0F5E  
                                                             u894 0F8C  
                                                             u990 0CAE  
                                                             u974 0C62  
                                                             u895 0F86  
                                                             u991 0CA8  
                                                             u975 0C5C  
                                                             u984 0C8A  
                                                             u985 0C84  
                                                             wreg 0FE8  
                                               ??_button_getState 0007  
                                                  _GateCloseTimer 0027  
                                                            l2001 0740  
                                                            l1043 1770  
                                                            l2011 079A  
                                                            l2003 074C  
                                                            l2101 0A6A  
                                                            l2021 07EE  
                                                            l2013 07BA  
                                                            l2005 0754  
                                                            l1303 1328  
                                                            l2111 0AB4  
                                                            l2103 0A72  
                                                            l2031 0836  
                                                            l2023 0802  
                                                            l2015 07C6  
                                                            l2007 0772  
                                                            l1321 1340  
                                                            l2121 0B22  
                                                            l2113 0AC2  
                                                            l2105 0A7C  
                                                            l2041 0880  
                                                            l2033 084A  
                                                            l2025 0808  
                                                            l2017 07CA  
                                                            l2009 0792  
                                                            l1315 1338  
                                                            l2131 0B78  
                                                            l2123 0B30  
                                                            l2107 0A80  
                                                            l2115 0ACC  
                                                            l2051 08D0  
                                                            l2035 0860  
                                                            l2027 081C  
                                                            l2043 0886  
                                                            l2019 07E0  
                                                            l1253 1A04  
                                                            l1309 1330  
                                                            l1261 12F0  
                                                            l2141 0BE2  
                                                            l2133 0B8C  
                                                            l2125 0B3C  
                                                            l2117 0AEE  
                                                            l2109 0AA0  
                                                            l2061 0914  
                                                            l2053 08E6  
                                                            l2045 0892  
                                                            l2037 0864  
                                                            l2029 0820  
                                                            l1351 1B04  
                                                            l1255 1A1E  
                                                            l1327 1348  
                                                            l1335 1350  
                                                            l2143 0BF4  
                                                            l2127 0B40  
                                                            l2119 0B0E  
                                                            l2135 0BA4  
                                                            l2055 08EE  
                                                            l2063 092E  
                                                            l2047 08B4  
                                                            l2039 0874  
                                                            l2071 0940  
                                                            l1353 1B06  
                                                            l1257 1A22  
                                                            l1337 13B8  
                                                            l1273 1300  
                                                            l2145 0C0A  
                                                            l2137 0BBA  
                                                            l2129 0B58  
                                                            l2081 09AE  
                                                            l2073 0956  
                                                            l2065 0934  
                                                            l2049 08C8  
                                                            l2057 0900  
                                                            l1291 1318  
                                                            l1267 12F8  
                                                            l1259 12EC  
                                                            l2147 0C18  
                                                            l2139 0BCE  
                                                            l2091 09FC  
                                                            l2083 09BC  
                                                            l2075 096A  
                                                            l2067 0938  
                                                            l2059 0906  
                                                            l1701 103A  
                                                            l2181 15AA  
                                                            l1349 1AF8  
                                                            l1285 1310  
                                                            l1381 19CC  
                                                            l2149 0C24  
                                                            l2085 09C8  
                                                            l2077 097E  
                                                            l2093 0A06  
                                                            l2069 093C  
                                                            l2183 1076  
                                                            l1711 154A  
                                                            l2175 119C  
                                                            l1279 1308  
                                                            l1391 19F8  
                                                            l1383 19D0  
                                                            l2095 0A28  
                                                            l2087 09EA  
                                                            l2079 098C  
                                                            l2185 12B2  
                                                            l1705 1060  
                                                            l1721 1586  
                                                            l1713 154E  
                                                            l1801 0D12  
                                                            l2177 16C4  
                                                            l1297 1320  
                                                            l1385 19EA  
                                                            l2097 0A3C  
                                                            l2089 09F4  
                                                            l1715 155C  
                                                            l1731 13C6  
                                                            l2179 0E38  
                                                            l1811 0DC0  
                                                            l1803 0D38  
                                                            l1387 19F2  
                                                            l2099 0A4A  
                                                            l1717 156A  
                                                            l1725 1594  
                                                            l1741 1428  
                                                            l1733 13E2  
                                                            l1813 0DD6  
                                                            l1805 0D5E  
                                                            l1901 1A60  
                                                            l1671 0E72  
                                                            l1719 1578  
                                                            l1751 1488  
                                                            l1743 1432  
                                                            l1735 13EC  
                                                            l1911 1A3A  
                                                            l1815 0DFC  
                                                            l1807 0D74  
                                                            l1903 1B22  
                                                            l1681 0EEE  
                                                            l1673 0E76  
                                                            l1761 14EA  
                                                            l1753 14A4  
                                                            l1745 144A  
                                                            l1737 1404  
                                                            l1809 0D9A  
                                                            l1833 10EE  
                                                            l1825 10B0  
                                                            l1921 174C  
                                                            l1913 16FC  
                                                            l1931 11DE  
                                                            l1691 0F9C  
                                                            l1683 0F14  
                                                            l1675 0E8C  
                                                            l1763 14F4  
                                                            l1755 14AE  
                                                            l1907 1B32  
                                                            l1747 145E  
                                                            l1739 1410  
                                                            l1771 17EE  
                                                            l1819 0E22  
                                                            l1851 1160  
                                                            l1827 10C8  
                                                            l1915 1700  
                                                            l1933 1204  
                                                            l1693 0FB2  
                                                            l1685 0F3A  
                                                            l1677 0EB2  
                                                            l1765 150C  
                                                            l1757 14C6  
                                                            l1749 1476  
                                                            l1773 1800  
                                                            l1781 1824  
                                                            l1909 1A30  
                                                            l1861 11CC  
                                                            l1845 113A  
                                                            l1925 1AA2  
                                                            l1917 1706  
                                                            l1935 122A  
                                                            l1943 129C  
                                                            l1695 0FD8  
                                                            l1687 0F50  
                                                            l1679 0ED8  
                                                            l1767 1520  
                                                            l1759 14D2  
                                                            l1775 180C  
                                                            l1783 184C  
                                                            l1791 0C74  
                                                            l1839 1114  
                                                            l1927 1AB8  
                                                            l1951 1B10  
                                                            l1919 1734  
                                                            l1937 1250  
                                                            l1929 11DA  
                                                            l1697 0FFE  
                                                            l1689 0F76  
                                                            l1769 1538  
                                                            l1881 18CC  
                                                            l1777 1818  
                                                            l1793 0C9A  
                                                            l1785 0C34  
                                                            l1873 16AE  
                                                            l1961 0676  
                                                            l1939 1276  
                                                            l1699 1014  
                                                            l1883 18E6  
                                                            l1795 0CB0  
                                                            l1787 0C38  
                                                            l1859 1186  
                                                            l1955 1A76  
                                                            l1891 1776  
                                                            l1971 0692  
                                                            l1963 0682  
                                                            l1885 18E8  
                                                            l1797 0CD6  
                                                            l1789 0C4E  
                                                            l1869 1678  
                                                            l1893 1AE4  
                                                            l1957 1956  
                                                            l1949 1918  
                                                            l1981 06B2  
                                                            l1973 0696  
                                                            l1965 0686  
                                                            l1879 18C4  
                                                            l1799 0CFC  
                                                            l1887 15E2  
                                                            l1895 1A4A  
                                                            l1991 06E4  
                                                            l1983 06BC  
                                                            l1975 069A  
                                                            l1967 068A  
                                                            l1959 0668  
                                                            l1897 1ACE  
                                                            l1889 185C  
                                                            l1993 06EE  
                                                            l1985 06C6  
                                                            l1977 069E  
                                                            l1969 068E  
                                                            l1899 1A8C  
                                                            l1995 06F2  
                                                            l1987 06D0  
                                                            l1979 06A8  
                                                            l1997 0712  
                                                            l1989 06DA  
                                                            l1999 071E  
                                                            STR_1 061E  
                                                            STR_2 0661  
                                                            STR_3 0658  
                                                            STR_4 0611  
                                                            STR_5 064E  
                                                            STR_6 062A  
                                                            STR_7 0636  
                                                            STR_8 0601  
                                                            STR_9 0642  
                                                            u1020 0D10  
                                                            u1004 0CC4  
                                                            u1021 0D0A  
                                                            u1005 0CBE  
                                                            u1014 0CEC  
                                                            u1015 0CE6  
                                                            u1104 0E12  
                                                            u1105 0E0C  
                                                            u1050 0D72  
                                                            u1034 0D26  
                                                            u1114 10DE  
                                                            u1051 0D6C  
                                                            u1035 0D20  
                                                            u1115 10D8  
                                                            u1204 121A  
                                                            u1044 0D4E  
                                                            u1124 1104  
                                                            u1300 07DE  
                                                            u1205 1214  
                                                            u1045 0D48  
                                                            u1125 10FE  
                                                            u1301 07D8  
                                                            u1214 1240  
                                                            u1134 112A  
                                                            u1310 0800  
                                                            u1215 123A  
                                                            u1135 1124  
                                                            u1311 07FA  
                                                            u1224 1266  
                                                            u1160 1910  
                                                            u1080 0DD4  
                                                            u1064 0D88  
                                                            u1144 1150  
                                                            u1400 0968  
                                                            u1320 081A  
                                                            u1225 1260  
                                                            u1161 190A  
                                                            u1081 0DCE  
                                                            u1065 0D82  
                                                            u1145 114A  
                                                            u1401 0962  
                                                            u1321 0814  
                                                            u1241 067C  
                                                            u1234 128C  
                                                            u1074 0DB0  
                                                            u1154 1176  
                                                            u1170 1732  
                                                            u1410 097C  
                                                            u1330 0834  
                                                            u1250 0710  
                                                            u1235 1286  
                                                            u1075 0DAA  
                                                            u1155 1170  
                                                            u1171 172C  
                                                            u1411 0976  
                                                            u1331 082E  
                                                            u1251 070A  
                                                            u1180 174C  
                                                            u1500 0B0C  
                                                            u1420 09AC  
                                                            u1340 0848  
                                                            u1260 073E  
                                                            u1181 1746  
                                                            u1501 0B06  
                                                            u1421 09A6  
                                                            u1341 0842  
                                                            u1261 0738  
                                                            u1094 0DEA  
                                                            u1510 0B20  
                                                            u1430 09E8  
                                                            u1350 085E  
                                                            u1270 0772  
                                                            u1095 0DE4  
                                                            u1511 0B1A  
                                                            u1431 09E2  
                                                            u1351 0858  
                                                            u1271 076C  
                                                            u1520 0B76  
                                                            u1440 0A26  
                                                            u1360 08B2  
                                                            u1280 0790  
                                                            u1521 0B70  
                                                            u1441 0A20  
                                                            u1361 08AC  
                                                            u1281 078A  
                                                            u1194 11F4  
                                                            u1530 0B8A  
                                                            u1450 0A3A  
                                                            u1370 08C6  
                                                            u1290 07B8  
                                                            u1195 11EE  
                                                            u1531 0B84  
                                                            u1451 0A34  
                                                            u1371 08C0  
                                                            u1291 07B2  
                                                            u1540 0BB8  
                                                            u1460 0A68  
                                                            u1380 08E4  
                                                            u1541 0BB2  
                                                            u1461 0A62  
                                                            u1381 08DE  
                                                            u1550 0BCC  
                                                            u1470 0A9E  
                                                            u1390 0954  
                                                            u1607 13FC  
                                                            u1551 0BC6  
                                                            u1471 0A98  
                                                            u1391 094E  
                                                            u1560 0BE0  
                                                            u1480 0AB2  
                                                            u1617 1412  
                                                            u1561 0BDA  
                                                            u1481 0AAC  
                                                            u1570 0C08  
                                                            u1490 0AEC  
                                                            u1707 1504  
                                                            u1627 142A  
                                                            u1571 0C02  
                                                            u1491 0AE6  
                                                            u1717 1522  
                                                            u1637 1442  
                                                            u1727 153A  
                                                            u1647 1460  
                                                            u1657 1478  
                                                            u1667 14A6  
                                                            u1587 091E  
                                                            u1677 14BE  
                                                            u1597 13E4  
                                                            u1687 14D4  
                                                            u1697 14EC  
                                                            i2l74 0038  
                                                            _main 0668  
                                                            fsr2h 0FDA  
                                                            indf2 0FDF  
                                                            fsr2l 0FD9  
                                                            btemp 002A  
                                                     led_on@pinNo 0006  
                                                     led_off@port 0007  
                                                            start 0040  
                                        DIO_SetPortValue@portName 0004  
                                                    ___param_bank 0000  
                                                 ??_DIO_TogglePin 0002  
                                                __end_of_LCD_init 1674  
                                                           ?_main 0001  
                                                           _T0CON 0FD5  
                                                           _TMR0H 0FD7  
                                                           _TMR0L 0FD6  
                                                           _PORTA 0F80  
                                                           _PORTB 0F81  
                                                           _PORTC 0F82  
                                                           _PORTD 0F83  
                                                           _PORTE 0F84  
                                                           _TRISA 0F92  
                                                           _TRISB 0F93  
                                                           _TRISC 0F94  
                                                           _TRISD 0F95  
                                                           _TRISE 0F96  
                                                    ?_button_init 0006  
                                                    main@passCode 0010  
                                              LCD_displayString@i 000A  
                                                 __end_of_led_off 1A88  
                                                    ?_keypad_init 0001  
                                                    ?_keypad_read 0001  
                                                    led_off@pinNo 0006  
                                                           tablat 0FF5  
                                                           ttemp5 002B  
                                                           ttemp6 002E  
                                                           ttemp7 0032  
                                                           status 0FD8  
                                                           wtemp8 002B  
                                        __end_of_keypad_line_scan 1A2C  
                                                    led_init@port 0007  
                                                    ?_buzzer_init 0006  
                                                 __initialization 1992  
                                               ??_LCD_clearScreen 0008  
                                                    __end_of_main 0C30  
                                             button_getState@port 0007  
                                                   buzzer_on@port 0007  
                                                          ??_main 000E  
                                                   __activetblptr 0002  
                                     DIO_SetPinDirection@portName 0005  
                                                          _ADCON1 0FC1  
                                        LCD_goToRowColumn@Address 000A  
                                                          i2l1441 000C  
                                                          i2l1451 0030  
                                                          i2l1443 001E  
                                                          i2l1453 0034  
                                                          i2l1445 0020  
                                                          i2l1447 0028  
                                                          i2l1449 002C  
                                                          _TMR0IE 7F95  
                                                          _TMR0IF 7F92  
                                              main@keypad_reading 001A  
                                                      _Timer0_ISR 0008  
                                        __end_of_DIO_SetPortValue 16FA  
                                                   main@buzzerSet 0015  
                                                   ??_Timer0_init 0001  
                                                __end_of_led_init 1A9E  
                                                buzzer_init@pinNo 0006  
                                                          _led_on 1A5C  
                                                   ?_keypad_value 0001  
                                                          clear_0 19B6  
                                                          isa$std 0001  
                                                          _strcmp 16FA  
                                                       ??_led_off 0007  
                                               ??_DIO_SetPinValue 0003  
                                                __end_of_pir_init 1A5C  
                                                    __pdataCOMRAM 0027  
                                                __end_of_motor_on 1954  
                                                    __mediumconst 0000  
                                                          tblptrh 0FF7  
                                                          tblptrl 0FF6  
                                                          tblptru 0FF8  
                                                   led_init@pinNo 0006  
                                                      __accesstop 0080  
                                         __end_of__initialization 19BC  
                                                       ?_LCD_init 0001  
                                                   ___rparam_used 0001  
                                                 _DIO_GetPinValue 10AC  
                                                  __pcstackCOMRAM 0001  
                                                  ??_keypad_value 0001  
                                                 _button_getState 1B1E  
                                             __end_of_Timer0_init 1B0C  
                                            button_getState@pinNo 0006  
                                                  buzzer_on@pinNo 0006  
                                                  buzzer_off@port 0007  
                                                button_init@pinNo 0006  
                                                      ??_LCD_init 0008  
                                      keypad_line_scan@keypadScan 0029  
                                                     ?_Timer0_ISR 0001  
                                                   ?_pir_getState 0006  
                                                         ?_led_on 0006  
                                              main@emergencyState 0017  
                                                         ?_strcmp 0001  
                                               ??_LCD_sendCommand 0006  
                                                         i2u46_40 001C  
                                                         i2u46_41 0016  
                                                       ?_led_init 0006  
                                                 _LCD_clearScreen 1B30  
                                         __end_of_DIO_GetPinValue 11D6  
                                             keypad_read@keyValue 0003  
                                               ?_keypad_line_scan 0001  
                                         __end_of_button_getState 1B30  
                                            LCD_displayString@Str 0008  
                                                         __Hparam 0000  
                                                       ?_pir_init 0006  
                                                         __Lparam 0000  
                                              ??_keypad_line_scan 0001  
                                                  ??_pir_getState 0007  
                                                     _Timer0_init 1AF6  
                                                       ?_motor_on 0001  
                                          LCD_sendCommand@command 0007  
                                                    __psmallconst 0600  
                                                         __pcinit 1992  
                                                         __ramtop 0600  
                                             _DIO_SetPinDirection 0C30  
                                                         __ptext0 0668  
                                                         __ptext1 16FA  
                                                         __ptext2 1A46  
                                                         __ptext3 1B0C  
                                                         __ptext4 1916  
                                                         __ptext5 1954  
                                                         __ptext6 1774  
                                                         __ptext7 1A5C  
                                                         __ptext8 1A72  
                                                         __ptext9 1A88  
                                           __end_of_DIO_TogglePin 12E8  
                                                         _led_off 1A72  
                                                      _buzzer_off 1AB4  
                               DIO_SetUpperHalfPortValue@portName 0004  
                                               __end_of_buzzer_on 1AB4  
                                             _activatedStateTimer 0023  
                                                      ??_led_init 0007  
                                            end_of_initialization 19BC  
                                            __end_of_keypad_value 13C2  
                                            ?_DIO_SetPinDirection 0001  
                                                   __Lmediumconst 0000  
                                               __end_of_motor_off 1992  
                                                  _sysButtonTimer 0025  
                                            DIO_GetPinValue@flush 0005  
                                            DIO_GetPinValue@pinNo 0001  
                                            DIO_SetPinValue@pinNo 0001  
                                                      ??_pir_init 0007  
                                            DIO_SetPinValue@value 0002  
                                               ?_DIO_SetPortValue 0001  
                                                 _DIO_SetPinValue 0E6E  
                                                      ??_motor_on 0006  
                                                         postinc0 0FEE  
                                                         postinc2 0FDE  
                                              ??_DIO_SetPortValue 0002  
                                                      _motor_init 1774  
                                    ??_LCD_displayStringRowColumn 000D  
                                                         strcmp@l 0001  
                                                         strcmp@r 0002  
                                                main@last_reading 0016  
                                         __end_of_LCD_clearScreen 1B3C  
                                           ??_DIO_SetPinDirection 0003  
                                                ?_DIO_GetPinValue 0001  
                                   LCD_displayStringRowColumn@Str 000C  
                                   LCD_displayStringRowColumn@col 000B  
                                   LCD_displayStringRowColumn@row 000D  
                                                ?_button_getState 0006  
                                                      led_on@port 0007  
                                                   pir_init@pinNo 0006  
                                                   __pidataCOMRAM 1B3C  
                                                  __end_of_led_on 1A72  
                                                  __end_of_strcmp 1774  
                                             start_initialization 1992  
                                                     ?_buzzer_off 0006  
                                            __end_of_pir_getState 1B1E  
                                      ?_DIO_SetUpperHalfPortValue 0001  
                                         __end_of_DIO_SetPinValue 10AC  
                                              DIO_TogglePin@pinNo 0001  
                                                 buzzer_off@pinNo 0006  
                                                main@inputCounter 0019  
                                                    ??_Timer0_ISR 0001  
                                                 _LCD_sendCommand 1484  
                                                 buzzer_init@port 0007  
                                                     ?_motor_init 0001  
                                                        ??_led_on 0007  
                                                        ??_strcmp 0003  
                                                   ??_button_init 0007  
                                                     __pbssCOMRAM 001C  
                                                ?_LCD_clearScreen 0001  
                                    __end_of_LCD_displayCharacter 1484  
                                                   ??_keypad_init 0006  
                                                   ??_keypad_read 0002  
                                              __end_of_Timer0_ISR 0040  
                                               _LCD_goToRowColumn 17EA  
                               __end_of_DIO_SetUpperHalfPortValue 15E0  
                                              ?_LCD_goToRowColumn 0008  
                                                 button_init@port 0007  
                                                   ??_buzzer_init 0007  
                                                    ?_Timer0_init 0001  
                                             ??_LCD_goToRowColumn 0009  
                                                       __pintcode 0008  
                              __end_of_LCD_displayStringRowColumn 1A46  
                                      _LCD_displayStringRowColumn 1A2C  
                                                    _keypad_value 12E8  
                                                        ?_led_off 0006  
                                                     __smallconst 0600  
                                       __end_of_LCD_goToRowColumn 185A  
                                         DIO_GetPinValue@portName 0004  
                                           DIO_TogglePin@portName 0004  
                                         DIO_SetPinValue@portName 0005  
                                             __end_of_button_init 1AF6  
                                                       _buzzer_on 1A9E  
                                                ?_DIO_SetPinValue 0001  
                                         __end_of_LCD_sendCommand 1546  
                                             __end_of_keypad_init 18C2  
                                             __end_of_keypad_read 1A02  
                                                        _LCD_init 15E0  
                                           keypad_value@portValue 0001  
                                                       main@F2447 001C  
                                                       _motor_off 1954  
                                             __end_of_buzzer_init 1AE0  
                                           DIO_SetPortValue@value 0001  
                                                    pir_init@port 0007  
                                                 main@passCodeReq 001B  
                                                      ?_buzzer_on 0006  
                                                        __Hrparam 0000  
                                                        __Lrparam 0000  
                                                      ?_motor_off 0001  
                                                    _pir_getState 1B0C  
                                            _LCD_displayCharacter 13C2  
                                                    ??_buzzer_off 0007  
                                                     _button_init 1AE0  
                                     __end_of_DIO_SetPinDirection 0E6E  
                                                        __ptext10 19CA  
                                                        __ptext11 12E8  
                                                        __ptext20 1AF6  
                                                        __ptext12 1A02  
                                                        __ptext21 15E0  
                                                        __ptext13 185A  
                                                        __ptext30 1546  
                                                        __ptext22 1674  
                                                        __ptext14 1A9E  
                                                        __ptext31 0E6E  
                                                        __ptext23 0C30  
                                                        __ptext15 1AB4  
                                                        __ptext32 11D6  
                                                        __ptext24 1A2C  
                                                        __ptext16 1ACA  
                                                        __ptext25 17EA  
                                                        __ptext17 1AE0  
                                                        __ptext26 18C2  
                                                        __ptext18 1B1E  
                                                        __ptext27 13C2  
                                                        __ptext19 10AC  
                                                        __ptext28 1B30  
                                                        __ptext29 1484  
                                                     _keypad_init 185A  
                                                     _keypad_read 19CA  
                                                        _led_init 1A88  
                                     ??_DIO_SetUpperHalfPortValue 0002  
                                        DIO_SetPinDirection@pinNo 0001  
                                                ?_LCD_sendCommand 0001  
                                    DIO_SetPinDirection@direction 0002  
                                                     _buzzer_init 1ACA  
                                               pir_getState@pinNo 0006  
                                                        _pir_init 1A46  
                                               _LCD_displayString 18C2  
                                                        _motor_on 1916  
                                           ?_LCD_displayCharacter 0001  
                                                        isa$xinst 0000  
                                              __end_of_buzzer_off 1ACA  
                                              ?_LCD_displayString 0008  
                                                        int$flags 002A  
                                                    ??_motor_init 0006  
                                                        main@mode 0018  
                                                _keypad_line_scan 1A02  
                                                  _emergencyTimer 0021  
                                             ??_LCD_displayString 0009  
                                            LCD_goToRowColumn@col 0008  
                                            LCD_goToRowColumn@row 0009  
                                                   _DIO_TogglePin 11D6  
                                        LCD_displayCharacter@data 0007  
                                                        intlevel2 1B40  
                                  DIO_SetUpperHalfPortValue@value 0001  
                                                     ??_buzzer_on 0007  
                                              __end_of_motor_init 17EA  
                                       __end_of_LCD_displayString 1916  
                                                pir_getState@port 0007  
                                                     ??_motor_off 0006  
                                     ?_LCD_displayStringRowColumn 000B  
                                       _DIO_SetUpperHalfPortValue 1546  
                                                  ?_DIO_TogglePin 0001  
                                                _DIO_SetPortValue 1674  
                                          ??_LCD_displayCharacter 0006  
